SYSTEM system
{
   System_Wizard_Version = "12.00";
   System_Wizard_Build = "178";
   Builder_Application = "sopc_builder_ca";
   WIZARD_SCRIPT_ARGUMENTS
   {
      hdl_language = "verilog";
      device_family = "CYCLONEIII";
      device_family_id = "CYCLONEIII";
      generate_sdk = "0";
      do_build_sim = "0";
      hardcopy_compatible = "0";
      CLOCKS
      {
         CLOCK ext_clk_one
         {
            frequency = "50000000";
            source = "External";
            Is_Clock_Source = "0";
            display_name = "ext_clk_one";
            pipeline = "0";
            clock_module_connection_point_for_c2h = "ext_clk_one.clk";
         }
         CLOCK frame_buffer_phy_clk
         {
            frequency = "150000000";
            source = "";
            Is_Clock_Source = "1";
            display_name = "phy_clk from frame_buffer";
            pipeline = "0";
            clock_module_connection_point_for_c2h = "frame_buffer.sysclk";
         }
         CLOCK frame_buffer_phy_clk_out
         {
            frequency = "150000000";
            source = "frame_buffer_phy_clk";
            Is_Clock_Source = "0";
            display_name = "frame_buffer_phy_clk_out";
         }
         CLOCK frame_buffer_aux_full_rate_clk
         {
            frequency = "150000000";
            source = "";
            Is_Clock_Source = "1";
            display_name = "aux_full_rate_clk from frame_buffer";
            pipeline = "0";
            clock_module_connection_point_for_c2h = "frame_buffer.auxfull";
         }
         CLOCK frame_buffer_aux_full_rate_clk_out
         {
            frequency = "150000000";
            source = "frame_buffer_aux_full_rate_clk";
            Is_Clock_Source = "0";
            display_name = "frame_buffer_aux_full_rate_clk_out";
         }
         CLOCK frame_buffer_aux_half_rate_clk
         {
            frequency = "75000000";
            source = "";
            Is_Clock_Source = "1";
            display_name = "aux_half_rate_clk from frame_buffer";
            pipeline = "0";
            clock_module_connection_point_for_c2h = "frame_buffer.auxhalf";
         }
         CLOCK frame_buffer_aux_half_rate_clk_out
         {
            frequency = "75000000";
            source = "frame_buffer_aux_half_rate_clk";
            Is_Clock_Source = "0";
            display_name = "frame_buffer_aux_half_rate_clk_out";
         }
         CLOCK system_clk
         {
            frequency = "100000000";
            source = "External";
            Is_Clock_Source = "0";
            display_name = "system_clk";
            pipeline = "0";
            clock_module_connection_point_for_c2h = "system_clk.clk";
         }
         CLOCK slow_clk
         {
            frequency = "50000000";
            source = "External";
            Is_Clock_Source = "0";
            display_name = "slow_clk";
            pipeline = "0";
            clock_module_connection_point_for_c2h = "slow_clk.clk";
         }
         CLOCK video_clk
         {
            frequency = "100000000";
            source = "External";
            Is_Clock_Source = "0";
            display_name = "video_clk";
            pipeline = "0";
            clock_module_connection_point_for_c2h = "video_clk.clk";
         }
      }
      clock_freq = "50000000";
      board_class = "";
      view_master_columns = "1";
      view_master_priorities = "0";
      generate_hdl = "";
      bustype_column_width = "0";
      clock_column_width = "80";
      name_column_width = "75";
      desc_column_width = "75";
      base_column_width = "75";
      end_column_width = "75";
      BOARD_INFO
      {
         altera_avalon_cfi_flash
         {
            reference_designators = "";
         }
      }
      do_log_history = "0";
   }
   MODULE cpu
   {
      MASTER instruction_master
      {
         PORT_WIRING
         {
            PORT clk
            {
               type = "clk";
               width = "1";
               direction = "input";
               Is_Enabled = "0";
            }
            PORT reset_n
            {
               type = "reset_n";
               width = "1";
               direction = "input";
               Is_Enabled = "0";
            }
            PORT i_address
            {
               type = "address";
               width = "27";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT i_read
            {
               type = "read";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT i_readdata
            {
               type = "readdata";
               width = "32";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT i_readdatavalid
            {
               type = "readdatavalid";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT i_waitrequest
            {
               type = "waitrequest";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT jtag_debug_module_resetrequest
            {
               type = "resetrequest";
               width = "1";
               direction = "output";
               Is_Enabled = "0";
            }
         }
         SYSTEM_BUILDER_INFO
         {
            Bus_Type = "avalon";
            Is_Asynchronous = "0";
            DBS_Big_Endian = "0";
            Adapts_To = "";
            Do_Stream_Reads = "0";
            Do_Stream_Writes = "0";
            Max_Address_Width = "32";
            Data_Width = "32";
            Address_Width = "27";
            Maximum_Burst_Size = "1";
            Register_Incoming_Signals = "0";
            Register_Outgoing_Signals = "0";
            Interleave_Bursts = "";
            Linewrap_Bursts = "";
            Burst_On_Burst_Boundaries_Only = "";
            Always_Burst_Max_Burst = "";
            Is_Big_Endian = "0";
            Is_Enabled = "1";
            Is_Instruction_Master = "1";
            Is_Readable = "1";
            Is_Writeable = "0";
            Address_Group = "0";
            Has_IRQ = "0";
            Irq_Scheme = "individual_requests";
            Interrupt_Range = "0-0";
         }
         MEMORY_MAP
         {
            Entry pipeline_bridge/s1
            {
               address = "0x00000000";
               span = "0x08000000";
               is_bridge = "1";
            }
            Entry lcd_sgdma/csr
            {
               address = "0x04401800";
               span = "0x00000040";
               is_bridge = "0";
            }
            Entry cpu/jtag_debug_module
            {
               address = "0x04401000";
               span = "0x00000800";
               is_bridge = "0";
            }
            Entry flash_ssram_pipeline_bridge/s1
            {
               address = "0x02000000";
               span = "0x02000000";
               is_bridge = "1";
            }
            Entry ssram/s1
            {
               address = "0x03000000";
               span = "0x00100000";
               is_bridge = "0";
            }
            Entry flash/s1
            {
               address = "0x02000000";
               span = "0x01000000";
               is_bridge = "0";
            }
            Entry descriptor_memory/s1
            {
               address = "0x04400000";
               span = "0x00001000";
               is_bridge = "0";
            }
            Entry frame_buffer_pipeline_bridge/s1
            {
               address = "0x00000000";
               span = "0x02000000";
               is_bridge = "1";
            }
            Entry ddr_sdram_clock_crossing_bridge/s1
            {
               address = "0x00000000";
               span = "0x02000000";
               is_bridge = "1";
            }
            Entry frame_buffer/s1
            {
               address = "0x00000000";
               span = "0x02000000";
               is_bridge = "0";
            }
            Entry clock_crossing_bridge/s1
            {
               address = "0x04000000";
               span = "0x00000800";
               is_bridge = "1";
            }
            Entry jtag_uart/avalon_jtag_slave
            {
               address = "0x04000580";
               span = "0x00000040";
               is_bridge = "0";
            }
            Entry push_buttons/s1
            {
               address = "0x04000200";
               span = "0x00000080";
               is_bridge = "0";
            }
            Entry system_tick/s1
            {
               address = "0x04000000";
               span = "0x00000100";
               is_bridge = "0";
            }
            Entry sysid/control_slave
            {
               address = "0x040005c0";
               span = "0x00000040";
               is_bridge = "0";
            }
            Entry touchPanel_spi/spi_control_port
            {
               address = "0x04000100";
               span = "0x00000100";
               is_bridge = "0";
            }
            Entry touchPanel_irq_n/s1
            {
               address = "0x04000280";
               span = "0x00000080";
               is_bridge = "0";
            }
            Entry lcd_i2c_scl/s1
            {
               address = "0x04000300";
               span = "0x00000080";
               is_bridge = "0";
            }
            Entry lcd_i2c_cs/s1
            {
               address = "0x04000380";
               span = "0x00000080";
               is_bridge = "0";
            }
            Entry lcd_i2c_dat/s1
            {
               address = "0x04000400";
               span = "0x00000080";
               is_bridge = "0";
            }
            Entry pio_id_eeprom_dat/s1
            {
               address = "0x04000480";
               span = "0x00000080";
               is_bridge = "0";
            }
            Entry pio_id_eeprom_scl/s1
            {
               address = "0x04000500";
               span = "0x00000080";
               is_bridge = "0";
            }
            Entry colour_lookup_table/s1
            {
               address = "0x04401c00";
               span = "0x00000400";
               is_bridge = "0";
            }
         }
      }
      MASTER custom_instruction_master
      {
         SYSTEM_BUILDER_INFO
         {
            Bus_Type = "nios_custom_instruction";
            Data_Width = "32";
            Address_Width = "8";
            Is_Custom_Instruction = "1";
            Is_Enabled = "0";
            Max_Address_Width = "8";
            Base_Address = "N/A";
            Is_Visible = "0";
         }
         PORT_WIRING
         {
            PORT dataa
            {
               type = "dataa";
               width = "32";
               direction = "output";
            }
            PORT datab
            {
               type = "datab";
               width = "32";
               direction = "output";
            }
            PORT result
            {
               type = "result";
               width = "32";
               direction = "input";
            }
            PORT clk_en
            {
               type = "clk_en";
               width = "1";
               direction = "output";
            }
            PORT reset
            {
               type = "reset";
               width = "1";
               direction = "output";
            }
            PORT start
            {
               type = "start";
               width = "1";
               direction = "output";
            }
            PORT done
            {
               type = "done";
               width = "1";
               direction = "input";
            }
            PORT n
            {
               type = "n";
               width = "8";
               direction = "output";
            }
            PORT a
            {
               type = "a";
               width = "5";
               direction = "output";
            }
            PORT b
            {
               type = "b";
               width = "5";
               direction = "output";
            }
            PORT c
            {
               type = "c";
               width = "5";
               direction = "output";
            }
            PORT readra
            {
               type = "readra";
               width = "1";
               direction = "output";
            }
            PORT readrb
            {
               type = "readrb";
               width = "1";
               direction = "output";
            }
            PORT writerc
            {
               type = "writerc";
               width = "1";
               direction = "output";
            }
         }
      }
      SLAVE jtag_debug_module
      {
         SYSTEM_BUILDER_INFO
         {
            Bus_Type = "avalon";
            Write_Wait_States = "0cycles";
            Read_Wait_States = "1cycles";
            Hold_Time = "0cycles";
            Setup_Time = "0cycles";
            Is_Printable_Device = "0";
            Address_Alignment = "dynamic";
            Well_Behaved_Waitrequest = "0";
            Is_Nonvolatile_Storage = "0";
            Address_Span = "2048";
            Read_Latency = "0";
            Is_Memory_Device = "1";
            Maximum_Pending_Read_Transactions = "0";
            Minimum_Uninterrupted_Run_Length = "1";
            Accepts_Internal_Connections = "1";
            Write_Latency = "0";
            Is_Flash = "0";
            Data_Width = "32";
            Address_Width = "9";
            Maximum_Burst_Size = "1";
            Register_Incoming_Signals = "0";
            Register_Outgoing_Signals = "0";
            Interleave_Bursts = "0";
            Linewrap_Bursts = "0";
            Burst_On_Burst_Boundaries_Only = "0";
            Always_Burst_Max_Burst = "0";
            Is_Big_Endian = "0";
            Is_Enabled = "1";
            Accepts_External_Connections = "1";
            Requires_Internal_Connections = "";
            MASTERED_BY pipeline_bridge/m1
            {
               priority = "1";
               Offset_Address = "0x04401000";
            }
            Base_Address = "0x04401000";
            Is_Readable = "1";
            Is_Writeable = "1";
            Uses_Tri_State_Data_Bus = "0";
            Has_IRQ = "0";
            JTAG_Hub_Base_Id = "1118278";
            JTAG_Hub_Instance_Id = "0";
            Address_Group = "0";
            Is_Base_Locked = "0";
         }
         PORT_WIRING
         {
            PORT jtag_debug_module_address
            {
               type = "address";
               width = "9";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT jtag_debug_module_begintransfer
            {
               type = "begintransfer";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT jtag_debug_module_byteenable
            {
               type = "byteenable";
               width = "4";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT jtag_debug_module_debugaccess
            {
               type = "debugaccess";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT jtag_debug_module_readdata
            {
               type = "readdata";
               width = "32";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT jtag_debug_module_select
            {
               type = "chipselect";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT jtag_debug_module_write
            {
               type = "write";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT jtag_debug_module_writedata
            {
               type = "writedata";
               width = "32";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT clk
            {
               Is_Enabled = "1";
               direction = "input";
               type = "clk";
               width = "1";
            }
            PORT jtag_debug_module_resetrequest
            {
               Is_Enabled = "1";
               direction = "output";
               type = "resetrequest";
               width = "1";
            }
            PORT reset_n
            {
               Is_Enabled = "1";
               direction = "input";
               type = "reset_n";
               width = "1";
            }
         }
      }
      MASTER data_master
      {
         SYSTEM_BUILDER_INFO
         {
            Has_IRQ = "1";
            Irq_Scheme = "individual_requests";
            Bus_Type = "avalon";
            Is_Asynchronous = "0";
            DBS_Big_Endian = "0";
            Adapts_To = "";
            Do_Stream_Reads = "0";
            Do_Stream_Writes = "0";
            Max_Address_Width = "32";
            Data_Width = "32";
            Address_Width = "28";
            Maximum_Burst_Size = "1";
            Register_Incoming_Signals = "0";
            Register_Outgoing_Signals = "0";
            Interleave_Bursts = "0";
            Linewrap_Bursts = "0";
            Burst_On_Burst_Boundaries_Only = "";
            Always_Burst_Max_Burst = "0";
            Is_Big_Endian = "0";
            Is_Enabled = "1";
            Is_Data_Master = "1";
            Address_Group = "0";
            Is_Readable = "1";
            Is_Writeable = "1";
            Interrupt_Range = "0-31";
         }
         PORT_WIRING
         {
            PORT d_irq
            {
               type = "irq";
               width = "32";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT d_address
            {
               type = "address";
               width = "28";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT d_byteenable
            {
               type = "byteenable";
               width = "4";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT d_read
            {
               type = "read";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT d_readdata
            {
               type = "readdata";
               width = "32";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT d_readdatavalid
            {
               type = "readdatavalid";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT d_waitrequest
            {
               type = "waitrequest";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT d_write
            {
               type = "write";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT d_writedata
            {
               type = "writedata";
               width = "32";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT jtag_debug_module_debugaccess_to_roms
            {
               type = "debugaccess";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
         }
         MEMORY_MAP
         {
            Entry pipeline_bridge/s1
            {
               address = "0x00000000";
               span = "0x08000000";
               is_bridge = "1";
            }
            Entry lcd_sgdma/csr
            {
               address = "0x04401800";
               span = "0x00000040";
               is_bridge = "0";
            }
            Entry cpu/jtag_debug_module
            {
               address = "0x04401000";
               span = "0x00000800";
               is_bridge = "0";
            }
            Entry flash_ssram_pipeline_bridge/s1
            {
               address = "0x02000000";
               span = "0x02000000";
               is_bridge = "1";
            }
            Entry ssram/s1
            {
               address = "0x03000000";
               span = "0x00100000";
               is_bridge = "0";
            }
            Entry flash/s1
            {
               address = "0x02000000";
               span = "0x01000000";
               is_bridge = "0";
            }
            Entry descriptor_memory/s1
            {
               address = "0x04400000";
               span = "0x00001000";
               is_bridge = "0";
            }
            Entry frame_buffer_pipeline_bridge/s1
            {
               address = "0x00000000";
               span = "0x02000000";
               is_bridge = "1";
            }
            Entry ddr_sdram_clock_crossing_bridge/s1
            {
               address = "0x00000000";
               span = "0x02000000";
               is_bridge = "1";
            }
            Entry frame_buffer/s1
            {
               address = "0x00000000";
               span = "0x02000000";
               is_bridge = "0";
            }
            Entry clock_crossing_bridge/s1
            {
               address = "0x04000000";
               span = "0x00000800";
               is_bridge = "1";
            }
            Entry jtag_uart/avalon_jtag_slave
            {
               address = "0x04000580";
               span = "0x00000040";
               is_bridge = "0";
            }
            Entry push_buttons/s1
            {
               address = "0x04000200";
               span = "0x00000080";
               is_bridge = "0";
            }
            Entry system_tick/s1
            {
               address = "0x04000000";
               span = "0x00000100";
               is_bridge = "0";
            }
            Entry sysid/control_slave
            {
               address = "0x040005c0";
               span = "0x00000040";
               is_bridge = "0";
            }
            Entry touchPanel_spi/spi_control_port
            {
               address = "0x04000100";
               span = "0x00000100";
               is_bridge = "0";
            }
            Entry touchPanel_irq_n/s1
            {
               address = "0x04000280";
               span = "0x00000080";
               is_bridge = "0";
            }
            Entry lcd_i2c_scl/s1
            {
               address = "0x04000300";
               span = "0x00000080";
               is_bridge = "0";
            }
            Entry lcd_i2c_cs/s1
            {
               address = "0x04000380";
               span = "0x00000080";
               is_bridge = "0";
            }
            Entry lcd_i2c_dat/s1
            {
               address = "0x04000400";
               span = "0x00000080";
               is_bridge = "0";
            }
            Entry pio_id_eeprom_dat/s1
            {
               address = "0x04000480";
               span = "0x00000080";
               is_bridge = "0";
            }
            Entry pio_id_eeprom_scl/s1
            {
               address = "0x04000500";
               span = "0x00000080";
               is_bridge = "0";
            }
            Entry colour_lookup_table/s1
            {
               address = "0x04401c00";
               span = "0x00000400";
               is_bridge = "0";
            }
            Entry accelerator_mandelbrot_hw_draw_int_mandelbrot_managed_instance/cpu_interface0
            {
               address = "0x08000000";
               span = "0x00000200";
               is_bridge = "0";
            }
         }
      }
      WIZARD_SCRIPT_ARGUMENTS
      {
         cache_has_dcache = "1";
         cache_dcache_size = "4096";
         cache_dcache_line_size = "32";
         cache_dcache_bursts = "0";
         cache_dcache_ram_block_type = "AUTO";
         num_tightly_coupled_data_masters = "0";
         gui_num_tightly_coupled_data_masters = "0";
         gui_include_tightly_coupled_data_masters = "0";
         gui_omit_avalon_data_master = "0";
         cache_has_icache = "1";
         cache_icache_size = "2048";
         cache_icache_line_size = "32";
         cache_icache_ram_block_type = "AUTO";
         cache_icache_bursts = "0";
         num_tightly_coupled_instruction_masters = "0";
         gui_num_tightly_coupled_instruction_masters = "0";
         gui_include_tightly_coupled_instruction_masters = "0";
         debug_level = "2";
         include_oci = "1";
         oci_num_xbrk = "0";
         oci_num_dbrk = "0";
         oci_dbrk_trace = "0";
         oci_dbrk_pairs = "0";
         oci_onchip_trace = "0";
         oci_offchip_trace = "0";
         oci_data_trace = "0";
         include_third_party_debug_port = "0";
         oci_trace_addr_width = "7";
         oci_debugreq_signals = "0";
         oci_trigger_arming = "1";
         oci_embedded_pll = "0";
         oci_assign_jtag_instance_id = "0";
         oci_jtag_instance_id = "0";
         oci_num_pm = "0";
         oci_pm_width = "32";
         performance_counters_present = "0";
         performance_counters_width = "32";
         always_encrypt = "1";
         debug_simgen = "0";
         activate_model_checker = "0";
         activate_test_end_checker = "0";
         activate_trace = "1";
         activate_monitors = "1";
         clear_x_bits_ld_non_bypass = "1";
         bit_31_bypass_dcache = "1";
         hdl_sim_caches_cleared = "1";
         hbreak_test = "0";
         allow_full_address_range = "0";
         extra_exc_info = "0";
         branch_prediction_type = "Dynamic";
         bht_ptr_sz = "8";
         bht_index_pc_only = "0";
         gui_branch_prediction_type = "Automatic";
         full_waveform_signals = "0";
         export_pcb = "0";
         big_endian = "0";
         avalon_debug_port_present = "0";
         illegal_instructions_trap = "0";
         illegal_memory_access_detection = "0";
         illegal_mem_exc = "0";
         slave_access_error_exc = "0";
         division_error_exc = "0";
         eic_present = "0";
         num_shadow_reg_sets = "0";
         gui_mmu_present = "0";
         mmu_present = "0";
         process_id_num_bits = "8";
         tlb_ptr_sz = "7";
         tlb_num_ways = "16";
         udtlb_num_entries = "6";
         uitlb_num_entries = "4";
         fast_tlb_miss_exc_slave = "";
         fast_tlb_miss_exc_offset = "0x00000000";
         mpu_present = "0";
         mpu_num_data_regions = "8";
         mpu_num_inst_regions = "8";
         mpu_min_data_region_size_log2 = "12";
         mpu_min_inst_region_size_log2 = "12";
         mpu_use_limit = "0";
         hardware_divide_present = "0";
         gui_hardware_divide_setting = "0";
         hardware_multiply_present = "1";
         hardware_multiply_impl = "embedded_mul";
         shift_rot_impl = "fast_le_shift";
         gui_hardware_multiply_setting = "embedded_mul_fast_le_shift";
         reset_slave = "flash/s1";
         break_slave = "cpu/jtag_debug_module";
         exc_slave = "ssram/s1";
         reset_offset = "0x00000000";
         break_offset = "0x00000020";
         exc_offset = "0x00000000";
         cpu_reset = "0";
         CPU_Implementation = "fast";
         cpu_selection = "f";
         device_family_id = "CYCLONEIII";
         address_stall_present = "1";
         dsp_block_supports_shift = "0";
         mrams_present = "0";
         cpuid_value = "0";
         dont_overwrite_cpuid = "1";
         allow_legacy_sdk = "1";
         legacy_sdk_support = "1";
         inst_addr_width = "27";
         data_addr_width = "28";
         CPU_Architecture = "nios2";
         cache_icache_burst_type = "none";
         oci_sync_depth = "2";
         hardware_divide_impl = "variable_latency";
         hardware_multiply_omits_msw = "1";
         break_slave_override = "";
         break_offset_override = "0x20";
         altera_show_unreleased_features = "0";
         altera_show_unpublished_features = "0";
         altera_internal_test = "0";
         alt_log_port_base = "";
         alt_log_port_type = "";
         cpuid_sz = "1";
         gui_illegal_instructions_trap = "0";
         advanced_exc = "0";
         gui_illegal_memory_access_detection = "0";
         cache_omit_dcache = "0";
         cache_omit_icache = "0";
         omit_instruction_master = "0";
         omit_data_master = "0";
         ras_ptr_sz = "4";
         jtb_ptr_sz = "5";
         ibuf_ptr_sz = "4";
         always_bypass_dcache = "0";
         iss_trace_on = "0";
         iss_trace_warning = "1";
         iss_trace_info = "1";
         iss_trace_disassembly = "0";
         iss_trace_registers = "0";
         iss_trace_instr_count = "0";
         iss_software_debug = "0";
         iss_software_debug_port = "9996";
         iss_memory_dump_start = "";
         iss_memory_dump_end = "";
         Boot_Copier = "boot_loader_cfi.srec";
         Boot_Copier_EPCS = "boot_loader_epcs.srec";
         Boot_Copier_EPCS_SII_SIII_CIII = "boot_loader_epcs_sii_siii_ciii.srec";
         Boot_Copier_BE = "boot_loader_cfi_be.srec";
         Boot_Copier_EPCS_BE = "boot_loader_epcs_be.srec";
         Boot_Copier_EPCS_SII_SIII_CIII_BE = "boot_loader_epcs_sii_siii_ciii_be.srec";
         CONSTANTS
         {
            CONSTANT __nios_catch_irqs__
            {
               value = "1";
               comment = "Include panic handler for all irqs (needs uart)";
            }
            CONSTANT __nios_use_constructors__
            {
               value = "1";
               comment = "Call c++ static constructors";
            }
            CONSTANT __nios_use_small_printf__
            {
               value = "1";
               comment = "Smaller non-ANSI printf, with no floating point";
            }
            CONSTANT nasys_has_icache
            {
               value = "1";
               comment = "True if instruction cache present";
            }
            CONSTANT nasys_icache_size
            {
               value = "2048";
               comment = "Size in bytes of instruction cache";
            }
            CONSTANT nasys_icache_line_size
            {
               value = "32";
               comment = "Size in bytes of each icache line";
            }
            CONSTANT nasys_icache_line_size_log2
            {
               value = "5";
               comment = "Log2 size in bytes of each icache line";
            }
            CONSTANT nasys_has_dcache
            {
               value = "1";
               comment = "True if instruction cache present";
            }
            CONSTANT nasys_dcache_size
            {
               value = "4096";
               comment = "Size in bytes of data cache";
            }
            CONSTANT nasys_dcache_line_size
            {
               value = "32";
               comment = "Size in bytes of each dcache line";
            }
            CONSTANT nasys_dcache_line_size_log2
            {
               value = "5";
               comment = "Log2 size in bytes of each dcache line";
            }
         }
         license_status = "encrypted";
         mainmem_slave = "";
         datamem_slave = "";
         maincomm_slave = "";
         germs_monitor_id = "";
      }
      class = "altera_nios2";
      class_version = "7.08120";
      SYSTEM_BUILDER_INFO
      {
         Is_Enabled = "1";
         Clock_Source = "system_clk";
         Has_Clock = "1";
         Parameters_Signature = "";
         Is_CPU = "1";
         Instantiate_In_System_Module = "1";
         Required_Device_Family = "STRATIX,STRATIXGX,STRATIXII,STRATIXIIGX,STRATIXIIGXLITE,STRATIXIII,STRATIXIV,STRATIXV,CYCLONE,CYCLONEII,CYCLONEIII,CYCLONEIVE,CYCLONEV,HARDCOPYIII,ARRIAII,ARRIAIIGZ,ARRIAV,TARPON,HARDCOPYIV,STINGRAY";
         Default_Module_Name = "cpu";
         Top_Level_Ports_Are_Enumerated = "1";
         View
         {
            Settings_Summary = "Nios II/f
            <br>&nbsp;&nbsp;2-Kbyte Instruction Cache
            <br>&nbsp;&nbsp;4-Kbyte Data Cache
            <br>&nbsp;&nbsp;JTAG Debug Module
            ";
            MESSAGES
            {
            }
         }
      }
      iss_model_name = "altera_nios2";
      HDL_INFO
      {
         PLI_Files = "";
         Precompiled_Simulation_Library_Files = "";
         Simulation_HDL_Files = "";
         Synthesis_HDL_Files = "__PROJECT_DIRECTORY__/cpu_test_bench.v, __PROJECT_DIRECTORY__/cpu_mult_cell.v, __PROJECT_DIRECTORY__/cpu_oci_test_bench.v, __PROJECT_DIRECTORY__/cpu_jtag_debug_module_tck.v, __PROJECT_DIRECTORY__/cpu_jtag_debug_module_sysclk.v, __PROJECT_DIRECTORY__/cpu_jtag_debug_module_wrapper.v, __PROJECT_DIRECTORY__/cpu.v";
         Synthesis_Only_Files = "";
      }
      MASTER tightly_coupled_instruction_master_0
      {
         PORT_WIRING
         {
         }
         SYSTEM_BUILDER_INFO
         {
            Register_Incoming_Signals = "0";
            Bus_Type = "avalon";
            Data_Width = "32";
            Max_Address_Width = "31";
            Address_Width = "8";
            Is_Instruction_Master = "1";
            Has_IRQ = "0";
            Is_Enabled = "0";
            Is_Big_Endian = "0";
            Connection_Limit = "1";
            Is_Channel = "1";
         }
      }
      MASTER tightly_coupled_instruction_master_1
      {
         PORT_WIRING
         {
         }
         SYSTEM_BUILDER_INFO
         {
            Register_Incoming_Signals = "0";
            Bus_Type = "avalon";
            Data_Width = "32";
            Max_Address_Width = "31";
            Address_Width = "8";
            Address_Group = "0";
            Is_Instruction_Master = "1";
            Is_Readable = "1";
            Is_Writeable = "0";
            Has_IRQ = "0";
            Is_Enabled = "0";
            Is_Big_Endian = "0";
            Connection_Limit = "1";
            Is_Channel = "1";
         }
      }
      MASTER tightly_coupled_instruction_master_2
      {
         PORT_WIRING
         {
         }
         SYSTEM_BUILDER_INFO
         {
            Register_Incoming_Signals = "0";
            Bus_Type = "avalon";
            Data_Width = "32";
            Max_Address_Width = "31";
            Address_Width = "8";
            Address_Group = "0";
            Is_Instruction_Master = "1";
            Is_Readable = "1";
            Is_Writeable = "0";
            Has_IRQ = "0";
            Is_Enabled = "0";
            Is_Big_Endian = "0";
            Connection_Limit = "1";
            Is_Channel = "1";
         }
      }
      MASTER tightly_coupled_instruction_master_3
      {
         PORT_WIRING
         {
         }
         SYSTEM_BUILDER_INFO
         {
            Register_Incoming_Signals = "0";
            Bus_Type = "avalon";
            Data_Width = "32";
            Max_Address_Width = "31";
            Address_Width = "8";
            Address_Group = "0";
            Is_Instruction_Master = "1";
            Is_Readable = "1";
            Is_Writeable = "0";
            Has_IRQ = "0";
            Is_Enabled = "0";
            Is_Big_Endian = "0";
            Connection_Limit = "1";
            Is_Channel = "1";
         }
      }
      MASTER data_master2
      {
         PORT_WIRING
         {
         }
         SYSTEM_BUILDER_INFO
         {
            Register_Incoming_Signals = "1";
            Bus_Type = "avalon";
            Data_Width = "32";
            Max_Address_Width = "31";
            Address_Width = "8";
            Address_Group = "0";
            Is_Data_Master = "1";
            Is_Readable = "1";
            Is_Writeable = "1";
            Has_IRQ = "0";
            Is_Enabled = "0";
            Is_Big_Endian = "0";
         }
      }
      MASTER tightly_coupled_data_master_0
      {
         PORT_WIRING
         {
         }
         SYSTEM_BUILDER_INFO
         {
            Register_Incoming_Signals = "0";
            Bus_Type = "avalon";
            Data_Width = "32";
            Max_Address_Width = "31";
            Address_Width = "8";
            Address_Group = "0";
            Is_Data_Master = "1";
            Is_Readable = "1";
            Is_Writeable = "1";
            Has_IRQ = "0";
            Is_Enabled = "0";
            Is_Big_Endian = "0";
            Connection_Limit = "1";
            Is_Channel = "1";
         }
      }
      MASTER tightly_coupled_data_master_1
      {
         PORT_WIRING
         {
         }
         SYSTEM_BUILDER_INFO
         {
            Register_Incoming_Signals = "0";
            Bus_Type = "avalon";
            Data_Width = "32";
            Max_Address_Width = "31";
            Address_Width = "8";
            Address_Group = "0";
            Is_Data_Master = "1";
            Is_Readable = "1";
            Is_Writeable = "1";
            Has_IRQ = "0";
            Is_Enabled = "0";
            Is_Big_Endian = "0";
            Connection_Limit = "1";
            Is_Channel = "1";
         }
      }
      MASTER tightly_coupled_data_master_2
      {
         PORT_WIRING
         {
         }
         SYSTEM_BUILDER_INFO
         {
            Register_Incoming_Signals = "0";
            Bus_Type = "avalon";
            Data_Width = "32";
            Max_Address_Width = "31";
            Address_Width = "8";
            Address_Group = "0";
            Is_Data_Master = "1";
            Is_Readable = "1";
            Is_Writeable = "1";
            Has_IRQ = "0";
            Is_Enabled = "0";
            Is_Big_Endian = "0";
            Connection_Limit = "1";
            Is_Channel = "1";
         }
      }
      MASTER tightly_coupled_data_master_3
      {
         PORT_WIRING
         {
         }
         SYSTEM_BUILDER_INFO
         {
            Register_Incoming_Signals = "0";
            Bus_Type = "avalon";
            Data_Width = "32";
            Max_Address_Width = "31";
            Address_Width = "8";
            Address_Group = "0";
            Is_Data_Master = "1";
            Is_Readable = "1";
            Is_Writeable = "1";
            Has_IRQ = "0";
            Is_Enabled = "0";
            Is_Big_Endian = "0";
            Connection_Limit = "1";
            Is_Channel = "1";
         }
      }
      PORT_WIRING
      {
         PORT jtag_debug_trigout
         {
            width = "1";
            direction = "output";
            Is_Enabled = "0";
         }
         PORT jtag_debug_offchip_trace_clk
         {
            width = "1";
            direction = "output";
            Is_Enabled = "0";
         }
         PORT jtag_debug_offchip_trace_data
         {
            width = "18";
            direction = "output";
            Is_Enabled = "0";
         }
         PORT clkx2
         {
            width = "1";
            direction = "input";
            Is_Enabled = "0";
            visible = "0";
         }
      }
      SIMULATION
      {
         DISPLAY
         {
            SIGNAL aaa
            {
               format = "Logic";
               name = "i_readdata";
               radix = "hexadecimal";
            }
            SIGNAL aab
            {
               format = "Logic";
               name = "i_readdatavalid";
               radix = "hexadecimal";
            }
            SIGNAL aac
            {
               format = "Logic";
               name = "i_waitrequest";
               radix = "hexadecimal";
            }
            SIGNAL aad
            {
               format = "Logic";
               name = "i_address";
               radix = "hexadecimal";
            }
            SIGNAL aae
            {
               format = "Logic";
               name = "i_read";
               radix = "hexadecimal";
            }
            SIGNAL aaf
            {
               format = "Logic";
               name = "clk";
               radix = "hexadecimal";
            }
            SIGNAL aag
            {
               format = "Logic";
               name = "reset_n";
               radix = "hexadecimal";
            }
            SIGNAL aah
            {
               format = "Logic";
               name = "d_readdata";
               radix = "hexadecimal";
            }
            SIGNAL aai
            {
               format = "Logic";
               name = "d_waitrequest";
               radix = "hexadecimal";
            }
            SIGNAL aaj
            {
               format = "Logic";
               name = "d_address";
               radix = "hexadecimal";
            }
            SIGNAL aak
            {
               format = "Logic";
               name = "d_byteenable";
               radix = "hexadecimal";
            }
            SIGNAL aal
            {
               format = "Logic";
               name = "d_read";
               radix = "hexadecimal";
            }
            SIGNAL aam
            {
               format = "Logic";
               name = "d_write";
               radix = "hexadecimal";
            }
            SIGNAL aan
            {
               format = "Logic";
               name = "d_writedata";
               radix = "hexadecimal";
            }
            SIGNAL aao
            {
               format = "Logic";
               name = "d_irq";
               radix = "hexadecimal";
            }
            SIGNAL aap
            {
               format = "Logic";
               name = "d_readdatavalid";
               radix = "hexadecimal";
            }
            SIGNAL aaq
            {
               format = "Divider";
               name = "base pipeline";
               radix = "";
            }
            SIGNAL aar
            {
               format = "Logic";
               name = "clk";
               radix = "hexadecimal";
            }
            SIGNAL aas
            {
               format = "Logic";
               name = "reset_n";
               radix = "hexadecimal";
            }
            SIGNAL aat
            {
               format = "Logic";
               name = "D_stall";
               radix = "hexadecimal";
            }
            SIGNAL aau
            {
               format = "Logic";
               name = "A_stall";
               radix = "hexadecimal";
            }
            SIGNAL aav
            {
               format = "Logic";
               name = "F_pcb_nxt";
               radix = "hexadecimal";
            }
            SIGNAL aaw
            {
               format = "Logic";
               name = "F_pcb";
               radix = "hexadecimal";
            }
            SIGNAL aax
            {
               format = "Logic";
               name = "D_pcb";
               radix = "hexadecimal";
            }
            SIGNAL aay
            {
               format = "Logic";
               name = "E_pcb";
               radix = "hexadecimal";
            }
            SIGNAL aaz
            {
               format = "Logic";
               name = "M_pcb";
               radix = "hexadecimal";
            }
            SIGNAL aba
            {
               format = "Logic";
               name = "A_pcb";
               radix = "hexadecimal";
            }
            SIGNAL abb
            {
               format = "Logic";
               name = "W_pcb";
               radix = "hexadecimal";
            }
            SIGNAL abc
            {
               format = "Logic";
               name = "F_vinst";
               radix = "ascii";
            }
            SIGNAL abd
            {
               format = "Logic";
               name = "D_vinst";
               radix = "ascii";
            }
            SIGNAL abe
            {
               format = "Logic";
               name = "E_vinst";
               radix = "ascii";
            }
            SIGNAL abf
            {
               format = "Logic";
               name = "M_vinst";
               radix = "ascii";
            }
            SIGNAL abg
            {
               format = "Logic";
               name = "A_vinst";
               radix = "ascii";
            }
            SIGNAL abh
            {
               format = "Logic";
               name = "W_vinst";
               radix = "ascii";
            }
            SIGNAL abi
            {
               format = "Logic";
               name = "F_inst_ram_hit";
               radix = "hexadecimal";
            }
            SIGNAL abj
            {
               format = "Logic";
               name = "F_iw_valid";
               radix = "hexadecimal";
            }
            SIGNAL abk
            {
               format = "Logic";
               name = "F_issue";
               radix = "hexadecimal";
            }
            SIGNAL abl
            {
               format = "Logic";
               name = "F_kill";
               radix = "hexadecimal";
            }
            SIGNAL abm
            {
               format = "Logic";
               name = "D_kill";
               radix = "hexadecimal";
            }
            SIGNAL abn
            {
               format = "Logic";
               name = "D_refetch";
               radix = "hexadecimal";
            }
            SIGNAL abo
            {
               format = "Logic";
               name = "D_issue";
               radix = "hexadecimal";
            }
            SIGNAL abp
            {
               format = "Logic";
               name = "D_valid";
               radix = "hexadecimal";
            }
            SIGNAL abq
            {
               format = "Logic";
               name = "D_rdprs_stall";
               radix = "hexadecimal";
            }
            SIGNAL abr
            {
               format = "Logic";
               name = "D_rdprs_stall_done";
               radix = "hexadecimal";
            }
            SIGNAL abs
            {
               format = "Logic";
               name = "E_valid";
               radix = "hexadecimal";
            }
            SIGNAL abt
            {
               format = "Logic";
               name = "M_valid";
               radix = "hexadecimal";
            }
            SIGNAL abu
            {
               format = "Logic";
               name = "A_valid";
               radix = "hexadecimal";
            }
            SIGNAL abv
            {
               format = "Logic";
               name = "W_valid";
               radix = "hexadecimal";
            }
            SIGNAL abw
            {
               format = "Logic";
               name = "W_wr_dst_reg";
               radix = "hexadecimal";
            }
            SIGNAL abx
            {
               format = "Logic";
               name = "W_dst_regnum";
               radix = "hexadecimal";
            }
            SIGNAL aby
            {
               format = "Logic";
               name = "W_wr_data";
               radix = "hexadecimal";
            }
            SIGNAL abz
            {
               format = "Logic";
               name = "D_en";
               radix = "hexadecimal";
            }
            SIGNAL aca
            {
               format = "Logic";
               name = "E_en";
               radix = "hexadecimal";
            }
            SIGNAL acb
            {
               format = "Logic";
               name = "M_en";
               radix = "hexadecimal";
            }
            SIGNAL acc
            {
               format = "Logic";
               name = "A_en";
               radix = "hexadecimal";
            }
            SIGNAL acd
            {
               format = "Logic";
               name = "F_iw";
               radix = "hexadecimal";
            }
            SIGNAL ace
            {
               format = "Logic";
               name = "D_iw";
               radix = "hexadecimal";
            }
            SIGNAL acf
            {
               format = "Logic";
               name = "E_iw";
               radix = "hexadecimal";
            }
            SIGNAL acg
            {
               format = "Logic";
               name = "M_pipe_flush";
               radix = "hexadecimal";
            }
            SIGNAL ach
            {
               format = "Logic";
               name = "M_pipe_flush_baddr";
               radix = "hexadecimal";
            }
            SIGNAL aci
            {
               format = "Logic";
               name = "norm_intr_req";
               radix = "hexadecimal";
            }
            SIGNAL acj
            {
               format = "Logic";
               name = "A_status_reg";
               radix = "hexadecimal";
            }
            SIGNAL ack
            {
               format = "Logic";
               name = "A_status_reg_pie";
               radix = "hexadecimal";
            }
            SIGNAL acl
            {
               format = "Logic";
               name = "A_estatus_reg";
               radix = "hexadecimal";
            }
            SIGNAL acm
            {
               format = "Logic";
               name = "A_estatus_reg_pie";
               radix = "hexadecimal";
            }
            SIGNAL acn
            {
               format = "Logic";
               name = "A_bstatus_reg";
               radix = "hexadecimal";
            }
            SIGNAL aco
            {
               format = "Logic";
               name = "A_bstatus_reg_pie";
               radix = "hexadecimal";
            }
            SIGNAL acp
            {
               format = "Logic";
               name = "A_ienable_reg";
               radix = "hexadecimal";
            }
            SIGNAL acq
            {
               format = "Logic";
               name = "A_ienable_reg_irq0";
               radix = "hexadecimal";
            }
            SIGNAL acr
            {
               format = "Logic";
               name = "A_ienable_reg_irq1";
               radix = "hexadecimal";
            }
            SIGNAL acs
            {
               format = "Logic";
               name = "A_ienable_reg_irq2";
               radix = "hexadecimal";
            }
            SIGNAL act
            {
               format = "Logic";
               name = "A_ienable_reg_irq3";
               radix = "hexadecimal";
            }
            SIGNAL acu
            {
               format = "Logic";
               name = "A_ienable_reg_irq4";
               radix = "hexadecimal";
            }
            SIGNAL acv
            {
               format = "Logic";
               name = "A_ienable_reg_irq5";
               radix = "hexadecimal";
            }
            SIGNAL acw
            {
               format = "Logic";
               name = "A_ienable_reg_irq6";
               radix = "hexadecimal";
            }
            SIGNAL acx
            {
               format = "Logic";
               name = "A_ipending_reg";
               radix = "hexadecimal";
            }
            SIGNAL acy
            {
               format = "Logic";
               name = "A_ipending_reg_irq0";
               radix = "hexadecimal";
            }
            SIGNAL acz
            {
               format = "Logic";
               name = "A_ipending_reg_irq1";
               radix = "hexadecimal";
            }
            SIGNAL ada
            {
               format = "Logic";
               name = "A_ipending_reg_irq2";
               radix = "hexadecimal";
            }
            SIGNAL adb
            {
               format = "Logic";
               name = "A_ipending_reg_irq3";
               radix = "hexadecimal";
            }
            SIGNAL adc
            {
               format = "Logic";
               name = "A_ipending_reg_irq4";
               radix = "hexadecimal";
            }
            SIGNAL add
            {
               format = "Logic";
               name = "A_ipending_reg_irq5";
               radix = "hexadecimal";
            }
            SIGNAL ade
            {
               format = "Logic";
               name = "A_ipending_reg_irq6";
               radix = "hexadecimal";
            }
            SIGNAL adf
            {
               format = "Logic";
               name = "A_cpuid_reg";
               radix = "hexadecimal";
            }
            SIGNAL adg
            {
               format = "Logic";
               name = "E_valid_prior_to_hbreak";
               radix = "hexadecimal";
            }
         }
      }
      SOFTWARE_COMPONENT altera_plugs_library
      {
         class = "altera_plugs_library";
         class_version = "7.08120";
         WIZARD_SCRIPT_ARGUMENTS
         {
            CONSTANTS
            {
               CONSTANT PLUGS_PLUG_COUNT
               {
                  value = "5";
                  comment = "Maximum number of plugs";
               }
               CONSTANT PLUGS_ADAPTER_COUNT
               {
                  value = "2";
                  comment = "Maximum number of adapters";
               }
               CONSTANT PLUGS_DNS
               {
                  value = "1";
                  comment = "Have routines for DNS lookups";
               }
               CONSTANT PLUGS_PING
               {
                  value = "1";
                  comment = "Respond to icmp echo (ping) messages";
               }
               CONSTANT PLUGS_TCP
               {
                  value = "1";
                  comment = "Support tcp in/out connections";
               }
               CONSTANT PLUGS_IRQ
               {
                  value = "1";
                  comment = "Run at interrupte level";
               }
               CONSTANT PLUGS_DEBUG
               {
                  value = "1";
                  comment = "Support debug routines";
               }
            }
         }
         SYSTEM_BUILDER_INFO
         {
            Is_Enabled = "1";
         }
      }
   }
   MODULE tristate_bridge
   {
      SLAVE avalon_slave
      {
         PORT_WIRING
         {
         }
         SYSTEM_BUILDER_INFO
         {
            Bus_Type = "avalon";
            Write_Wait_States = "0cycles";
            Read_Wait_States = "1cycles";
            Hold_Time = "0cycles";
            Setup_Time = "0cycles";
            Is_Printable_Device = "0";
            Address_Alignment = "dynamic";
            Well_Behaved_Waitrequest = "0";
            Is_Nonvolatile_Storage = "0";
            Address_Span = "1";
            Read_Latency = "0";
            Is_Memory_Device = "0";
            Maximum_Pending_Read_Transactions = "0";
            Minimum_Uninterrupted_Run_Length = "1";
            Accepts_Internal_Connections = "1";
            Write_Latency = "0";
            Is_Flash = "0";
            Maximum_Burst_Size = "1";
            Register_Incoming_Signals = "1";
            Register_Outgoing_Signals = "1";
            Interleave_Bursts = "0";
            Linewrap_Bursts = "0";
            Burst_On_Burst_Boundaries_Only = "0";
            Always_Burst_Max_Burst = "0";
            Is_Big_Endian = "0";
            Is_Enabled = "1";
            MASTERED_BY flash_ssram_pipeline_bridge/m1
            {
               priority = "1";
               Offset_Address = "N/A";
               Base_Address = "N/A";
            }
            Bridges_To = "tristate_master";
            Base_Address = "N/A";
            Has_IRQ = "0";
            IRQ = "N/A";
            Address_Group = "0";
            Is_Base_Locked = "0";
         }
      }
      MASTER tristate_master
      {
         SYSTEM_BUILDER_INFO
         {
            Bus_Type = "avalon_tristate";
            Is_Asynchronous = "0";
            DBS_Big_Endian = "0";
            Adapts_To = "";
            Maximum_Burst_Size = "1";
            Register_Incoming_Signals = "0";
            Register_Outgoing_Signals = "0";
            Interleave_Bursts = "0";
            Linewrap_Bursts = "0";
            Burst_On_Burst_Boundaries_Only = "0";
            Always_Burst_Max_Burst = "0";
            Is_Big_Endian = "0";
            Is_Enabled = "1";
            Bridges_To = "avalon_slave";
         }
         PORT_WIRING
         {
         }
         MEMORY_MAP
         {
            Entry ssram/s1
            {
               address = "0x01000000";
               span = "0x00100000";
               is_bridge = "0";
            }
            Entry flash/s1
            {
               address = "0x00000000";
               span = "0x01000000";
               is_bridge = "0";
            }
         }
      }
      WIZARD_SCRIPT_ARGUMENTS
      {
      }
      class = "altera_avalon_tri_state_bridge";
      class_version = "7.08120";
      SYSTEM_BUILDER_INFO
      {
         Is_Enabled = "1";
         Clock_Source = "system_clk";
         Has_Clock = "1";
         Instantiate_In_System_Module = "1";
         Is_Bridge = "1";
         Top_Level_Ports_Are_Enumerated = "1";
         View
         {
            MESSAGES
            {
            }
         }
      }
   }
   MODULE ssram
   {
      SLAVE s1
      {
         PORT_WIRING
         {
            PORT clk
            {
               type = "clk";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
               is_shared = "1";
               visible = "0";
            }
            PORT reset_n
            {
               type = "reset_n";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT address
            {
               type = "address";
               width = "18";
               direction = "input";
               Is_Enabled = "1";
               is_shared = "1";
            }
            PORT adsc_n
            {
               type = "begintransfer_n";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
               is_shared = "0";
            }
            PORT bw_n
            {
               type = "byteenable_n";
               width = "4";
               direction = "input";
               Is_Enabled = "1";
               is_shared = "0";
            }
            PORT bwe_n
            {
               type = "write_n";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
               is_shared = "0";
            }
            PORT chipenable1_n
            {
               type = "chipselect_n";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
               is_shared = "0";
            }
            PORT data
            {
               type = "data";
               width = "32";
               direction = "inout";
               Is_Enabled = "1";
               is_shared = "1";
            }
            PORT outputenable_n
            {
               type = "outputenable_n";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
               is_shared = "0";
            }
         }
         SYSTEM_BUILDER_INFO
         {
            Bus_Type = "avalon_tristate";
            Write_Wait_States = "0cycles";
            Read_Wait_States = "0cycles";
            Hold_Time = "0cycles";
            Setup_Time = "0cycles";
            Is_Printable_Device = "0";
            Address_Alignment = "dynamic";
            Well_Behaved_Waitrequest = "0";
            Is_Nonvolatile_Storage = "0";
            Address_Span = "1048576";
            Read_Latency = "2";
            Is_Memory_Device = "1";
            Maximum_Pending_Read_Transactions = "0";
            Minimum_Uninterrupted_Run_Length = "1";
            Accepts_Internal_Connections = "1";
            Write_Latency = "0";
            Is_Flash = "0";
            Active_CS_Through_Read_Latency = "1";
            Data_Width = "32";
            Address_Width = "18";
            Maximum_Burst_Size = "1";
            Register_Incoming_Signals = "0";
            Register_Outgoing_Signals = "0";
            Interleave_Bursts = "0";
            Linewrap_Bursts = "0";
            Burst_On_Burst_Boundaries_Only = "0";
            Always_Burst_Max_Burst = "0";
            Is_Big_Endian = "0";
            Is_Enabled = "1";
            MASTERED_BY tristate_bridge/tristate_master
            {
               priority = "1";
               Offset_Address = "0x01000000";
            }
            Base_Address = "0x03000000";
            Has_IRQ = "0";
            Address_Group = "0";
            Is_Base_Locked = "0";
         }
      }
      WIZARD_SCRIPT_ARGUMENTS
      {
         sram_memory_size = "1";
         sram_memory_units = "1048576";
         ssram_data_width = "32";
         ssram_read_latency = "2";
         simulation_model_num_lanes = "4";
         MAKE
         {
            TARGET delete_placeholder_warning
            {
               ssram
               {
                  Command1 = "rm -f $(SIMDIR)/contents_file_warning.txt";
                  Is_Phony = "1";
                  Target_File = "do_delete_placeholder_warning";
               }
            }
            TARGET sim
            {
               ssram
               {
                  Command1 = "if [ ! -d $(SIMDIR) ]; then mkdir $(SIMDIR) ; fi";
                  Command2 = "@echo Hardware simulation is not enabled for the target SOPC Builder system. Skipping creation of hardware simulation model contents and simulation symbol files. \(Note: This does not affect the instruction set simulator.\)";
                  Command3 = "touch $(SIMDIR)/dummy_file";
                  Dependency = "$(ELF)";
                  Target_File = "$(SIMDIR)/dummy_file";
               }
            }
         }
      }
      class = "altera_avalon_cy7c1380_ssram";
      class_version = "7.08120";
      SYSTEM_BUILDER_INFO
      {
         Is_Enabled = "1";
         Clock_Source = "system_clk";
         Has_Clock = "1";
         Instantiate_In_System_Module = "0";
         Default_Module_Name = "ssram";
         Make_Memory_Model = "1";
         Top_Level_Ports_Are_Enumerated = "1";
         View
         {
            MESSAGES
            {
            }
         }
      }
      iss_model_name = "altera_memory";
      HDL_INFO
      {
      }
   }
   MODULE flash
   {
      SLAVE s1
      {
         PORT_WIRING
         {
            PORT data
            {
               type = "data";
               width = "16";
               direction = "inout";
               Is_Enabled = "1";
               is_shared = "1";
            }
            PORT address
            {
               type = "address";
               width = "23";
               direction = "input";
               Is_Enabled = "1";
               is_shared = "1";
            }
            PORT read_n
            {
               type = "read_n";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
               is_shared = "0";
            }
            PORT write_n
            {
               type = "write_n";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
               is_shared = "0";
            }
            PORT select_n
            {
               type = "chipselect_n";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
               is_shared = "0";
            }
         }
         SYSTEM_BUILDER_INFO
         {
            Bus_Type = "avalon_tristate";
            Write_Wait_States = "70ns";
            Read_Wait_States = "70ns";
            Hold_Time = "20ns";
            Setup_Time = "25ns";
            Is_Printable_Device = "0";
            Address_Alignment = "dynamic";
            Well_Behaved_Waitrequest = "0";
            Is_Nonvolatile_Storage = "1";
            Address_Span = "16777216";
            Read_Latency = "0";
            Is_Memory_Device = "1";
            Maximum_Pending_Read_Transactions = "0";
            Minimum_Uninterrupted_Run_Length = "1";
            Accepts_Internal_Connections = "1";
            Write_Latency = "0";
            Is_Flash = "1";
            Active_CS_Through_Read_Latency = "0";
            Data_Width = "16";
            Address_Width = "23";
            Maximum_Burst_Size = "1";
            Register_Incoming_Signals = "0";
            Register_Outgoing_Signals = "0";
            Interleave_Bursts = "0";
            Linewrap_Bursts = "0";
            Burst_On_Burst_Boundaries_Only = "0";
            Always_Burst_Max_Burst = "0";
            Is_Big_Endian = "0";
            Is_Enabled = "1";
            MASTERED_BY tristate_bridge/tristate_master
            {
               priority = "1";
               Offset_Address = "0x00000000";
            }
            Base_Address = "0x02000000";
            Has_IRQ = "0";
            Simulation_Num_Lanes = "1";
            Convert_Xs_To_0 = "1";
            Address_Group = "0";
            Is_Base_Locked = "0";
         }
         WIZARD_SCRIPT_ARGUMENTS
         {
            class = "altera_avalon_cfi_flash";
            Supports_Flash_File_System = "1";
            flash_reference_designator = "";
         }
      }
      WIZARD_SCRIPT_ARGUMENTS
      {
         Setup_Value = "25";
         Wait_Value = "70";
         Hold_Value = "20";
         Timing_Units = "ns";
         Unit_Multiplier = "1";
         Size = "16777216";
         MAKE
         {
            MACRO
            {
               FLASH_FLASHTARGET_ALT_SIM_PREFIX = "$(FLASH_FLASHTARGET_TMP1:0=)";
               FLASH_FLASHTARGET_TMP1 = "$(ALT_SIM_OPTIMIZE:1=RUN_ON_HDL_SIMULATOR_ONLY_)";
            }
            MASTER cpu
            {
               MACRO
               {
                  BOOT_COPIER = "boot_loader_cfi.srec";
                  CPU_CLASS = "altera_nios2";
                  CPU_RESET_ADDRESS = "0x2000000";
               }
            }
            TARGET delete_placeholder_warning
            {
               flash
               {
                  Command1 = "rm -f $(SIMDIR)/contents_file_warning.txt";
                  Is_Phony = "1";
                  Target_File = "do_delete_placeholder_warning";
               }
            }
            TARGET flashfiles
            {
               flash
               {
                  Command1 = "@echo Post-processing to create $(notdir $@)";
                  Command2 = "elf2flash --input=$(ELF) --flash= --boot=$(DBL_QUOTE)$(shell $(DBL_QUOTE)$(QUARTUS_ROOTDIR)/sopc_builder/bin/find_sopc_component_dir$(DBL_QUOTE) $(CPU_CLASS) $(QUARTUS_PROJECT_DIR))/$(BOOT_COPIER)$(DBL_QUOTE) --outfile=$(FLASH_FLASHTARGET_ALT_SIM_PREFIX)flash.flash --sim_optimize=$(ALT_SIM_OPTIMIZE) --base=0x2000000 --end=0x2FFFFFF --reset=$(CPU_RESET_ADDRESS) ";
                  Dependency = "$(ELF)";
                  Target_File = "$(FLASH_FLASHTARGET_ALT_SIM_PREFIX)flash.flash";
               }
            }
            TARGET sim
            {
               flash
               {
                  Command1 = "if [ ! -d $(SIMDIR) ]; then mkdir $(SIMDIR) ; fi";
                  Command2 = "@echo Hardware simulation is not enabled for the target SOPC Builder system. Skipping creation of hardware simulation model contents and simulation symbol files. \(Note: This does not affect the instruction set simulator.\)";
                  Command3 = "touch $(SIMDIR)/dummy_file";
                  Dependency = "$(ELF)";
                  Target_File = "$(SIMDIR)/dummy_file";
               }
            }
         }
      }
      SYSTEM_BUILDER_INFO
      {
         Simulation_Num_Lanes = "2";
         Is_Enabled = "1";
         Clock_Source = "system_clk";
         Has_Clock = "1";
         Make_Memory_Model = "1";
         Instantiate_In_System_Module = "0";
         Top_Level_Ports_Are_Enumerated = "1";
         View
         {
            MESSAGES
            {
            }
         }
      }
      class = "altera_avalon_cfi_flash";
      class_version = "7.08120";
      iss_model_name = "altera_avalon_flash";
      HDL_INFO
      {
      }
   }
   MODULE frame_buffer
   {
      PORT_WIRING
      {
         PORT pll_ref_clk
         {
            type = "clk";
            width = "1";
            direction = "input";
            Is_Enabled = "1";
         }
         PORT soft_reset_n
         {
            type = "reset_n";
            width = "1";
            direction = "input";
            Is_Enabled = "1";
         }
         PORT aux_full_rate_clk
         {
            type = "out_clk";
            width = "1";
            direction = "output";
            Is_Enabled = "1";
         }
         PORT aux_half_rate_clk
         {
            type = "out_clk";
            width = "1";
            direction = "output";
            Is_Enabled = "1";
         }
         PORT mem_clk
         {
            type = "export";
            width = "1";
            direction = "inout";
            Is_Enabled = "1";
            declare_one_bit_as_std_logic_vector = "1";
         }
         PORT mem_clk_n
         {
            type = "export";
            width = "1";
            direction = "inout";
            Is_Enabled = "1";
            declare_one_bit_as_std_logic_vector = "1";
         }
         PORT mem_cs_n
         {
            type = "export";
            width = "1";
            direction = "output";
            Is_Enabled = "1";
            declare_one_bit_as_std_logic_vector = "1";
         }
         PORT mem_cke
         {
            type = "export";
            width = "1";
            direction = "output";
            Is_Enabled = "1";
            declare_one_bit_as_std_logic_vector = "1";
         }
         PORT mem_addr
         {
            type = "export";
            width = "13";
            direction = "output";
            Is_Enabled = "1";
         }
         PORT mem_ba
         {
            type = "export";
            width = "2";
            direction = "output";
            Is_Enabled = "1";
         }
         PORT mem_ras_n
         {
            type = "export";
            width = "1";
            direction = "output";
            Is_Enabled = "1";
         }
         PORT mem_cas_n
         {
            type = "export";
            width = "1";
            direction = "output";
            Is_Enabled = "1";
         }
         PORT mem_we_n
         {
            type = "export";
            width = "1";
            direction = "output";
            Is_Enabled = "1";
         }
         PORT mem_dq
         {
            type = "export";
            width = "16";
            direction = "inout";
            Is_Enabled = "1";
         }
         PORT mem_dqs
         {
            type = "export";
            width = "2";
            direction = "inout";
            Is_Enabled = "1";
         }
         PORT mem_dm
         {
            type = "export";
            width = "2";
            direction = "output";
            Is_Enabled = "1";
         }
         PORT global_reset_n
         {
            type = "export";
            width = "1";
            direction = "input";
            Is_Enabled = "1";
         }
         PORT local_refresh_ack
         {
            type = "export";
            width = "1";
            direction = "output";
            Is_Enabled = "1";
         }
         PORT local_wdata_req
         {
            type = "export";
            width = "1";
            direction = "output";
            Is_Enabled = "1";
         }
         PORT local_init_done
         {
            type = "export";
            width = "1";
            direction = "output";
            Is_Enabled = "1";
         }
         PORT reset_phy_clk_n
         {
            type = "export";
            width = "1";
            direction = "output";
            Is_Enabled = "1";
         }
      }
      SLAVE s1
      {
         PORT_WIRING
         {
            PORT phy_clk
            {
               type = "out_clk";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT local_address
            {
               type = "address";
               width = "23";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT local_write_req
            {
               type = "write";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT local_read_req
            {
               type = "read";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT local_burstbegin
            {
               type = "beginbursttransfer";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT local_ready
            {
               type = "waitrequest_n";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT local_rdata
            {
               type = "readdata";
               width = "32";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT local_rdata_valid
            {
               type = "readdatavalid";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT local_wdata
            {
               type = "writedata";
               width = "32";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT local_be
            {
               type = "byteenable";
               width = "4";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT local_size
            {
               type = "burstcount";
               width = "2";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT reset_request_n
            {
               type = "resetrequest_n";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
         }
         SYSTEM_BUILDER_INFO
         {
            Bus_Type = "avalon";
            Read_Wait_States = "peripheral_controlled";
            Write_Wait_States = "peripheral_controlled";
            Hold_Time = "0cycles";
            Setup_Time = "0cycles";
            Is_Printable_Device = "0";
            Address_Alignment = "dynamic";
            Well_Behaved_Waitrequest = "0";
            Is_Nonvolatile_Storage = "0";
            Address_Span = "33554432";
            Read_Latency = "0";
            Is_Memory_Device = "1";
            Maximum_Pending_Read_Transactions = "32";
            Minimum_Uninterrupted_Run_Length = "1";
            Accepts_Internal_Connections = "1";
            Write_Latency = "0";
            Is_Flash = "0";
            Data_Width = "32";
            Address_Width = "23";
            Maximum_Burst_Size = "2";
            Register_Incoming_Signals = "0";
            Register_Outgoing_Signals = "0";
            Interleave_Bursts = "0";
            Linewrap_Bursts = "1";
            Burst_On_Burst_Boundaries_Only = "0";
            Always_Burst_Max_Burst = "0";
            Is_Big_Endian = "0";
            Is_Enabled = "1";
            Clock_Source = "frame_buffer_phy_clk_out";
            Has_Clock = "1";
            MASTERED_BY ddr_sdram_clock_crossing_bridge/m1
            {
               priority = "1";
               Offset_Address = "0x00000000";
            }
            Base_Address = "0x00000000";
            Address_Group = "0";
            Is_Base_Locked = "0";
         }
      }
      iss_model_name = "altera_memory";
      class = "ddr_high_perf";
      WIZARD_SCRIPT_ARGUMENTS
      {
         device_family = "Cyclone III";
         datawidth = "16";
         memtype = "DDR SDRAM";
         local_burst_length = "2";
         num_chipselects = "1";
         cas_latency = "3.0";
         addr_width = "13";
         ba_width = "2";
         row_width = "13";
         col_width = "9";
         clockspeed = "6667";
         data_width_ratio = "2";
         reg_dimm = "false";
         dq_per_dqs = "8";
         phy_if_type_afi = "true";
         ngv110 = "false";
         ddrx = "false";
      }
      SYSTEM_BUILDER_INFO
      {
         Instantiate_In_System_Module = "1";
         Is_Enabled = "1";
         Clock_Source = "ext_clk_one";
         Has_Clock = "1";
         Default_Module_Name = "ddr_sdram";
         Required_Device_Family = "STRATIXIIGXLITE,STRATIXIIGX,STRATIXII,STRATIXIII,CYCLONEIII,STINGRAY,STRATIXIV,ARRIAII,TARPON,HARDCOPYIII,HARDCOPYIV,CYCLONEIVE";
         Pins_Assigned_Automatically = "1";
         View
         {
            MESSAGES
            {
            }
         }
      }
      class_version = "8.1";
      SIMULATION
      {
         DISPLAY
         {
            SIGNAL a
            {
               name = "pll_ref_clk";
               radix = "hexadecimal";
               format = "Logic";
            }
            SIGNAL b
            {
               name = "soft_reset_n";
               radix = "hexadecimal";
               format = "Logic";
            }
            SIGNAL c
            {
               name = "global_reset_n";
               radix = "hexadecimal";
               format = "Logic";
            }
            SIGNAL d
            {
               name = "reset_phy_clk_n";
               radix = "hexadecimal";
               format = "Logic";
            }
            SIGNAL e
            {
               name = "reset_request_n";
               radix = "hexadecimal";
               format = "Logic";
            }
            SIGNAL f
            {
               name = "phy_clk";
               radix = "hexadecimal";
               format = "Logic";
            }
            SIGNAL g
            {
               name = "local_address";
               radix = "hexadecimal";
               format = "Logic";
            }
            SIGNAL h
            {
               name = "local_size";
               radix = "hexadecimal";
               format = "Logic";
            }
            SIGNAL i
            {
               name = "local_burstbegin";
               radix = "hexadecimal";
               format = "Logic";
            }
            SIGNAL j
            {
               name = "local_read_req";
               radix = "hexadecimal";
               format = "Logic";
            }
            SIGNAL k
            {
               name = "local_write_req";
               radix = "hexadecimal";
               format = "Logic";
            }
            SIGNAL l
            {
               name = "local_ready";
               radix = "hexadecimal";
               format = "Logic";
            }
            SIGNAL m
            {
               name = "local_wdata";
               radix = "hexadecimal";
               format = "Logic";
            }
            SIGNAL n
            {
               name = "local_be";
               radix = "hexadecimal";
               format = "Logic";
            }
            SIGNAL o
            {
               name = "local_rdata_valid";
               radix = "hexadecimal";
               format = "Logic";
            }
            SIGNAL p
            {
               name = "local_rdata";
               radix = "hexadecimal";
               format = "Logic";
            }
            SIGNAL q
            {
               name = "mem_clk";
               radix = "hexadecimal";
               format = "Logic";
            }
            SIGNAL r
            {
               name = "mem_cs_n";
               radix = "hexadecimal";
               format = "Logic";
            }
            SIGNAL s
            {
               name = "mem_addr";
               radix = "hexadecimal";
               format = "Logic";
            }
            SIGNAL t
            {
               name = "mem_ba";
               radix = "hexadecimal";
               format = "Logic";
            }
            SIGNAL u
            {
               name = "mem_ras_n";
               radix = "hexadecimal";
               format = "Logic";
            }
            SIGNAL v
            {
               name = "mem_cas_n";
               radix = "hexadecimal";
               format = "Logic";
            }
            SIGNAL w
            {
               name = "mem_we_n";
               radix = "hexadecimal";
               format = "Logic";
            }
            SIGNAL x
            {
               name = "mem_dm";
               radix = "hexadecimal";
               format = "Logic";
            }
            SIGNAL y
            {
               name = "mem_dq";
               radix = "hexadecimal";
               format = "Logic";
            }
            SIGNAL z
            {
               name = "mem_dqs";
               radix = "hexadecimal";
               format = "Logic";
            }
            SIGNAL aa
            {
               name = "mem_cke";
               radix = "hexadecimal";
               format = "Logic";
            }
         }
      }
   }
   MODULE ddr_sdram_clock_crossing_bridge
   {
      SLAVE s1
      {
         PORT_WIRING
         {
            PORT slave_clk
            {
               type = "clk";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT slave_reset_n
            {
               type = "reset_n";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT slave_address
            {
               type = "address";
               width = "23";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT slave_nativeaddress
            {
               type = "nativeaddress";
               width = "23";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT slave_read
            {
               type = "read";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT slave_write
            {
               type = "write";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT slave_writedata
            {
               type = "writedata";
               width = "32";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT slave_byteenable
            {
               type = "byteenable";
               width = "4";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT slave_readdata
            {
               type = "readdata";
               width = "32";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT slave_readdatavalid
            {
               type = "readdatavalid";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT slave_waitrequest
            {
               type = "waitrequest";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT slave_endofpacket
            {
               Is_Enabled = "1";
               direction = "output";
               type = "endofpacket";
               width = "1";
            }
         }
         SYSTEM_BUILDER_INFO
         {
            Bus_Type = "avalon";
            Read_Wait_States = "peripheral_controlled";
            Write_Wait_States = "peripheral_controlled";
            Hold_Time = "0cycles";
            Setup_Time = "0cycles";
            Is_Printable_Device = "0";
            Address_Alignment = "dynamic";
            Well_Behaved_Waitrequest = "0";
            Is_Nonvolatile_Storage = "0";
            Address_Span = "33554432";
            Read_Latency = "0";
            Is_Memory_Device = "0";
            Maximum_Pending_Read_Transactions = "48";
            Minimum_Uninterrupted_Run_Length = "1";
            Accepts_Internal_Connections = "1";
            Write_Latency = "0";
            Is_Flash = "0";
            Data_Width = "32";
            Address_Width = "23";
            Opaque_Bridges_To = "m1";
            Maximum_Burst_Size = "1";
            Register_Incoming_Signals = "0";
            Register_Outgoing_Signals = "0";
            Interleave_Bursts = "0";
            Linewrap_Bursts = "0";
            Burst_On_Burst_Boundaries_Only = "0";
            Always_Burst_Max_Burst = "0";
            Is_Big_Endian = "0";
            Is_Enabled = "1";
            MASTERED_BY frame_buffer_pipeline_bridge/m1
            {
               priority = "1";
               Offset_Address = "0x00000000";
            }
            Clock_Source = "system_clk";
            Has_Clock = "1";
            Base_Address = "0x00000000";
            Address_Group = "0";
            Is_Base_Locked = "0";
         }
      }
      MASTER m1
      {
         PORT_WIRING
         {
            PORT master_clk
            {
               type = "clk";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT master_reset_n
            {
               type = "reset_n";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT master_address
            {
               type = "address";
               width = "25";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT master_nativeaddress
            {
               type = "nativeaddress";
               width = "23";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT master_read
            {
               type = "read";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT master_write
            {
               type = "write";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT master_writedata
            {
               type = "writedata";
               width = "32";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT master_byteenable
            {
               type = "byteenable";
               width = "4";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT master_readdata
            {
               type = "readdata";
               width = "32";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT master_readdatavalid
            {
               type = "readdatavalid";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT master_waitrequest
            {
               type = "waitrequest";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT master_endofpacket
            {
               Is_Enabled = "1";
               direction = "input";
               type = "endofpacket";
               width = "1";
            }
         }
         SYSTEM_BUILDER_INFO
         {
            Bus_Type = "avalon";
            Is_Asynchronous = "0";
            DBS_Big_Endian = "0";
            Adapts_To = "";
            Do_Stream_Reads = "0";
            Do_Stream_Writes = "0";
            Max_Address_Width = "32";
            Data_Width = "32";
            Address_Width = "25";
            Opaque_Bridges_To = "s1";
            Maximum_Burst_Size = "1";
            Register_Incoming_Signals = "0";
            Register_Outgoing_Signals = "0";
            Interleave_Bursts = "0";
            Linewrap_Bursts = "0";
            Burst_On_Burst_Boundaries_Only = "0";
            Always_Burst_Max_Burst = "0";
            Is_Big_Endian = "0";
            Is_Enabled = "1";
            Clock_Source = "frame_buffer_phy_clk_out";
            Has_Clock = "1";
         }
         MEMORY_MAP
         {
            Entry frame_buffer/s1
            {
               address = "0x00000000";
               span = "0x02000000";
               is_bridge = "0";
            }
         }
      }
      class = "altera_avalon_clock_crossing";
      class_version = "7.08120";
      iss_model_name = "altera_avalon_clock_crossing";
      WIZARD_SCRIPT_ARGUMENTS
      {
         Upstream_FIFO_Depth = "64";
         Downstream_FIFO_Depth = "8";
         Data_Width = "32";
         Native_Address_Width = "23";
         Use_Byte_Enable = "1";
         Use_Burst_Count = "0";
         Maximum_Burst_Size = "8";
         Upstream_Use_Register = "0";
         Downstream_Use_Register = "0";
         Slave_Synchronizer_Depth = "3";
         Master_Synchronizer_Depth = "3";
         Device_Family = "CYCLONEIII";
      }
      SYSTEM_BUILDER_INFO
      {
         Instantiate_In_System_Module = "1";
         Is_Enabled = "1";
         Top_Level_Ports_Are_Enumerated = "1";
         Has_Clock = "0";
         Is_Bridge = "1";
         View
         {
            MESSAGES
            {
            }
         }
      }
      HDL_INFO
      {
         Precompiled_Simulation_Library_Files = "";
         Simulation_HDL_Files = "";
         Synthesis_HDL_Files = "__PROJECT_DIRECTORY__/ddr_sdram_clock_crossing_bridge.v";
         Synthesis_Only_Files = "";
      }
      PORT_WIRING
      {
      }
   }
   MODULE pipeline_bridge
   {
      SLAVE s1
      {
         PORT_WIRING
         {
            PORT clk
            {
               type = "clk";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT reset_n
            {
               type = "reset_n";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT s1_address
            {
               type = "address";
               width = "25";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT s1_nativeaddress
            {
               type = "nativeaddress";
               width = "25";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT s1_burstcount
            {
               type = "burstcount";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT s1_byteenable
            {
               type = "byteenable";
               width = "4";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT s1_chipselect
            {
               type = "chipselect";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT s1_debugaccess
            {
               type = "debugaccess";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT s1_read
            {
               type = "read";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT s1_write
            {
               type = "write";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT s1_writedata
            {
               type = "writedata";
               width = "32";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT s1_endofpacket
            {
               type = "endofpacket";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT s1_readdata
            {
               type = "readdata";
               width = "32";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT s1_readdatavalid
            {
               type = "readdatavalid";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT s1_waitrequest
            {
               type = "waitrequest";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT s1_arbiterlock
            {
               Is_Enabled = "1";
               direction = "input";
               type = "arbiterlock";
               width = "1";
            }
            PORT s1_arbiterlock2
            {
               Is_Enabled = "1";
               direction = "input";
               type = "arbiterlock2";
               width = "1";
            }
            PORT s1_clk
            {
               Is_Enabled = "0";
               direction = "input";
               type = "clk";
               width = "1";
            }
            PORT s1_flush
            {
               Is_Enabled = "0";
               direction = "input";
               type = "flush";
               width = "1";
            }
            PORT s1_reset_n
            {
               Is_Enabled = "0";
               direction = "input";
               type = "reset_n";
               width = "1";
            }
         }
         SYSTEM_BUILDER_INFO
         {
            Bus_Type = "avalon";
            Read_Wait_States = "peripheral_controlled";
            Write_Wait_States = "peripheral_controlled";
            Hold_Time = "0cycles";
            Setup_Time = "0cycles";
            Is_Printable_Device = "0";
            Address_Alignment = "dynamic";
            Well_Behaved_Waitrequest = "0";
            Is_Nonvolatile_Storage = "0";
            Address_Span = "134217728";
            Read_Latency = "0";
            Is_Memory_Device = "0";
            Maximum_Pending_Read_Transactions = "54";
            Minimum_Uninterrupted_Run_Length = "1";
            Accepts_Internal_Connections = "1";
            Write_Latency = "0";
            Is_Flash = "0";
            Data_Width = "32";
            Address_Width = "25";
            Opaque_Bridges_To = "m1";
            Maximum_Burst_Size = "1";
            Register_Incoming_Signals = "0";
            Register_Outgoing_Signals = "0";
            Interleave_Bursts = "0";
            Linewrap_Bursts = "0";
            Burst_On_Burst_Boundaries_Only = "0";
            Always_Burst_Max_Burst = "0";
            Is_Big_Endian = "0";
            Is_Enabled = "1";
            MASTERED_BY cpu/data_master
            {
               priority = "8";
               Offset_Address = "0x00000000";
            }
            MASTERED_BY cpu/instruction_master
            {
               priority = "8";
               Offset_Address = "0x00000000";
            }
            Base_Address = "0x00000000";
            Has_IRQ = "0";
            Address_Group = "0";
            IRQ_MASTER cpu/data_master
            {
               IRQ_Number = "NC";
            }
            Is_Base_Locked = "0";
         }
      }
      MASTER m1
      {
         SYSTEM_BUILDER_INFO
         {
            Bus_Type = "avalon";
            Is_Asynchronous = "0";
            DBS_Big_Endian = "0";
            Adapts_To = "";
            Do_Stream_Reads = "0";
            Do_Stream_Writes = "0";
            Max_Address_Width = "32";
            Data_Width = "32";
            Address_Width = "27";
            Opaque_Bridges_To = "s1";
            Maximum_Burst_Size = "1";
            Register_Incoming_Signals = "0";
            Register_Outgoing_Signals = "0";
            Interleave_Bursts = "0";
            Linewrap_Bursts = "0";
            Burst_On_Burst_Boundaries_Only = "0";
            Always_Burst_Max_Burst = "0";
            Is_Big_Endian = "0";
            Is_Enabled = "1";
         }
         PORT_WIRING
         {
            PORT m1_address
            {
               type = "address";
               width = "27";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT m1_nativeaddress
            {
               type = "nativeaddress";
               width = "25";
               direction = "output";
               Is_Enabled = "0";
            }
            PORT m1_burstcount
            {
               type = "burstcount";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT m1_byteenable
            {
               type = "byteenable";
               width = "4";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT m1_chipselect
            {
               type = "chipselect";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT m1_debugaccess
            {
               type = "debugaccess";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT m1_read
            {
               type = "read";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT m1_write
            {
               type = "write";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT m1_writedata
            {
               type = "writedata";
               width = "32";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT m1_endofpacket
            {
               type = "endofpacket";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT m1_readdata
            {
               type = "readdata";
               width = "32";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT m1_readdatavalid
            {
               type = "readdatavalid";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT m1_waitrequest
            {
               type = "waitrequest";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT m1_arbiterlock
            {
               Is_Enabled = "0";
               direction = "output";
               type = "arbiterlock";
               width = "1";
            }
            PORT m1_arbiterlock2
            {
               Is_Enabled = "0";
               direction = "output";
               type = "arbiterlock2";
               width = "1";
            }
            PORT m1_clk
            {
               Is_Enabled = "0";
               direction = "input";
               type = "clk";
               width = "1";
            }
            PORT m1_reset_n
            {
               Is_Enabled = "0";
               direction = "input";
               type = "reset_n";
               width = "1";
            }
         }
         MEMORY_MAP
         {
            Entry lcd_sgdma/csr
            {
               address = "0x04401800";
               span = "0x00000040";
               is_bridge = "0";
            }
            Entry cpu/jtag_debug_module
            {
               address = "0x04401000";
               span = "0x00000800";
               is_bridge = "0";
            }
            Entry flash_ssram_pipeline_bridge/s1
            {
               address = "0x02000000";
               span = "0x02000000";
               is_bridge = "1";
            }
            Entry ssram/s1
            {
               address = "0x03000000";
               span = "0x00100000";
               is_bridge = "0";
            }
            Entry flash/s1
            {
               address = "0x02000000";
               span = "0x01000000";
               is_bridge = "0";
            }
            Entry descriptor_memory/s1
            {
               address = "0x04400000";
               span = "0x00001000";
               is_bridge = "0";
            }
            Entry frame_buffer_pipeline_bridge/s1
            {
               address = "0x00000000";
               span = "0x02000000";
               is_bridge = "1";
            }
            Entry ddr_sdram_clock_crossing_bridge/s1
            {
               address = "0x00000000";
               span = "0x02000000";
               is_bridge = "1";
            }
            Entry frame_buffer/s1
            {
               address = "0x00000000";
               span = "0x02000000";
               is_bridge = "0";
            }
            Entry clock_crossing_bridge/s1
            {
               address = "0x04000000";
               span = "0x00000800";
               is_bridge = "1";
            }
            Entry jtag_uart/avalon_jtag_slave
            {
               address = "0x04000580";
               span = "0x00000040";
               is_bridge = "0";
            }
            Entry push_buttons/s1
            {
               address = "0x04000200";
               span = "0x00000080";
               is_bridge = "0";
            }
            Entry system_tick/s1
            {
               address = "0x04000000";
               span = "0x00000100";
               is_bridge = "0";
            }
            Entry sysid/control_slave
            {
               address = "0x040005c0";
               span = "0x00000040";
               is_bridge = "0";
            }
            Entry touchPanel_spi/spi_control_port
            {
               address = "0x04000100";
               span = "0x00000100";
               is_bridge = "0";
            }
            Entry touchPanel_irq_n/s1
            {
               address = "0x04000280";
               span = "0x00000080";
               is_bridge = "0";
            }
            Entry lcd_i2c_scl/s1
            {
               address = "0x04000300";
               span = "0x00000080";
               is_bridge = "0";
            }
            Entry lcd_i2c_cs/s1
            {
               address = "0x04000380";
               span = "0x00000080";
               is_bridge = "0";
            }
            Entry lcd_i2c_dat/s1
            {
               address = "0x04000400";
               span = "0x00000080";
               is_bridge = "0";
            }
            Entry pio_id_eeprom_dat/s1
            {
               address = "0x04000480";
               span = "0x00000080";
               is_bridge = "0";
            }
            Entry pio_id_eeprom_scl/s1
            {
               address = "0x04000500";
               span = "0x00000080";
               is_bridge = "0";
            }
            Entry colour_lookup_table/s1
            {
               address = "0x04401c00";
               span = "0x00000400";
               is_bridge = "0";
            }
         }
      }
      WIZARD_SCRIPT_ARGUMENTS
      {
         Is_Downstream = "1";
         Is_Upstream = "1";
         Is_Waitrequest = "1";
         Enable_Arbiterlock = "0";
      }
      class = "altera_avalon_pipeline_bridge";
      class_version = "7.08120";
      SYSTEM_BUILDER_INFO
      {
         Is_Enabled = "1";
         Clock_Source = "system_clk";
         Has_Clock = "1";
         Instantiate_In_System_Module = "1";
         Is_Bridge = "1";
         Top_Level_Ports_Are_Enumerated = "1";
         View
         {
            MESSAGES
            {
            }
         }
      }
      HDL_INFO
      {
         Precompiled_Simulation_Library_Files = "";
         Simulation_HDL_Files = "";
         Synthesis_HDL_Files = "__PROJECT_DIRECTORY__/pipeline_bridge.v";
         Synthesis_Only_Files = "";
      }
      PORT_WIRING
      {
      }
   }
   MODULE flash_ssram_pipeline_bridge
   {
      SLAVE s1
      {
         PORT_WIRING
         {
            PORT clk
            {
               type = "clk";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT reset_n
            {
               type = "reset_n";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT s1_address
            {
               type = "address";
               width = "20";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT s1_nativeaddress
            {
               type = "nativeaddress";
               width = "20";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT s1_burstcount
            {
               type = "burstcount";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT s1_byteenable
            {
               type = "byteenable";
               width = "32";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT s1_chipselect
            {
               type = "chipselect";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT s1_debugaccess
            {
               type = "debugaccess";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT s1_read
            {
               type = "read";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT s1_write
            {
               type = "write";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT s1_writedata
            {
               type = "writedata";
               width = "256";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT s1_endofpacket
            {
               type = "endofpacket";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT s1_readdata
            {
               type = "readdata";
               width = "256";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT s1_readdatavalid
            {
               type = "readdatavalid";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT s1_waitrequest
            {
               type = "waitrequest";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT s1_arbiterlock
            {
               Is_Enabled = "1";
               direction = "input";
               type = "arbiterlock";
               width = "1";
            }
            PORT s1_arbiterlock2
            {
               Is_Enabled = "1";
               direction = "input";
               type = "arbiterlock2";
               width = "1";
            }
            PORT s1_clk
            {
               Is_Enabled = "0";
               direction = "input";
               type = "clk";
               width = "1";
            }
            PORT s1_flush
            {
               Is_Enabled = "0";
               direction = "input";
               type = "flush";
               width = "1";
            }
            PORT s1_reset_n
            {
               Is_Enabled = "0";
               direction = "input";
               type = "reset_n";
               width = "1";
            }
         }
         SYSTEM_BUILDER_INFO
         {
            Bus_Type = "avalon";
            Read_Wait_States = "peripheral_controlled";
            Write_Wait_States = "peripheral_controlled";
            Hold_Time = "0cycles";
            Setup_Time = "0cycles";
            Is_Printable_Device = "0";
            Address_Alignment = "dynamic";
            Well_Behaved_Waitrequest = "0";
            Is_Nonvolatile_Storage = "0";
            Address_Span = "33554432";
            Read_Latency = "0";
            Is_Memory_Device = "0";
            Maximum_Pending_Read_Transactions = "7";
            Minimum_Uninterrupted_Run_Length = "1";
            Accepts_Internal_Connections = "1";
            Write_Latency = "0";
            Is_Flash = "0";
            Data_Width = "256";
            Address_Width = "20";
            Opaque_Bridges_To = "m1";
            Maximum_Burst_Size = "1";
            Register_Incoming_Signals = "0";
            Register_Outgoing_Signals = "0";
            Interleave_Bursts = "0";
            Linewrap_Bursts = "0";
            Burst_On_Burst_Boundaries_Only = "0";
            Always_Burst_Max_Burst = "0";
            Is_Big_Endian = "0";
            Is_Enabled = "1";
            MASTERED_BY pipeline_bridge/m1
            {
               priority = "1";
               Offset_Address = "0x02000000";
            }
            Base_Address = "0x02000000";
            Has_IRQ = "0";
            Address_Group = "0";
            Is_Base_Locked = "0";
         }
      }
      MASTER m1
      {
         SYSTEM_BUILDER_INFO
         {
            Bus_Type = "avalon";
            Is_Asynchronous = "0";
            DBS_Big_Endian = "0";
            Adapts_To = "";
            Do_Stream_Reads = "0";
            Do_Stream_Writes = "0";
            Max_Address_Width = "32";
            Data_Width = "256";
            Address_Width = "25";
            Opaque_Bridges_To = "s1";
            Maximum_Burst_Size = "1";
            Register_Incoming_Signals = "0";
            Register_Outgoing_Signals = "0";
            Interleave_Bursts = "0";
            Linewrap_Bursts = "0";
            Burst_On_Burst_Boundaries_Only = "0";
            Always_Burst_Max_Burst = "0";
            Is_Big_Endian = "0";
            Is_Enabled = "1";
         }
         PORT_WIRING
         {
            PORT m1_address
            {
               type = "address";
               width = "25";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT m1_nativeaddress
            {
               type = "nativeaddress";
               width = "20";
               direction = "output";
               Is_Enabled = "0";
            }
            PORT m1_burstcount
            {
               type = "burstcount";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT m1_byteenable
            {
               type = "byteenable";
               width = "32";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT m1_chipselect
            {
               type = "chipselect";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT m1_debugaccess
            {
               type = "debugaccess";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT m1_read
            {
               type = "read";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT m1_write
            {
               type = "write";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT m1_writedata
            {
               type = "writedata";
               width = "256";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT m1_endofpacket
            {
               type = "endofpacket";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT m1_readdata
            {
               type = "readdata";
               width = "256";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT m1_readdatavalid
            {
               type = "readdatavalid";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT m1_waitrequest
            {
               type = "waitrequest";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT m1_arbiterlock
            {
               Is_Enabled = "0";
               direction = "output";
               type = "arbiterlock";
               width = "1";
            }
            PORT m1_arbiterlock2
            {
               Is_Enabled = "0";
               direction = "output";
               type = "arbiterlock2";
               width = "1";
            }
            PORT m1_clk
            {
               Is_Enabled = "0";
               direction = "input";
               type = "clk";
               width = "1";
            }
            PORT m1_reset_n
            {
               Is_Enabled = "0";
               direction = "input";
               type = "reset_n";
               width = "1";
            }
         }
         MEMORY_MAP
         {
            Entry ssram/s1
            {
               address = "0x01000000";
               span = "0x00100000";
               is_bridge = "0";
            }
            Entry flash/s1
            {
               address = "0x00000000";
               span = "0x01000000";
               is_bridge = "0";
            }
         }
      }
      WIZARD_SCRIPT_ARGUMENTS
      {
         Is_Downstream = "1";
         Is_Upstream = "1";
         Is_Waitrequest = "1";
         Enable_Arbiterlock = "0";
      }
      class = "altera_avalon_pipeline_bridge";
      class_version = "7.08120";
      SYSTEM_BUILDER_INFO
      {
         Is_Enabled = "1";
         Clock_Source = "system_clk";
         Has_Clock = "1";
         Instantiate_In_System_Module = "1";
         Is_Bridge = "1";
         Top_Level_Ports_Are_Enumerated = "1";
         View
         {
            MESSAGES
            {
            }
         }
      }
      HDL_INFO
      {
         Precompiled_Simulation_Library_Files = "";
         Simulation_HDL_Files = "";
         Synthesis_HDL_Files = "__PROJECT_DIRECTORY__/flash_ssram_pipeline_bridge.v";
         Synthesis_Only_Files = "";
      }
      PORT_WIRING
      {
      }
   }
   MODULE jtag_uart
   {
      SLAVE avalon_jtag_slave
      {
         PORT_WIRING
         {
            PORT clk
            {
               type = "clk";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT rst_n
            {
               type = "reset_n";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT av_irq
            {
               type = "irq";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT av_chipselect
            {
               type = "chipselect";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT av_address
            {
               type = "address";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT av_read_n
            {
               type = "read_n";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT av_readdata
            {
               type = "readdata";
               width = "32";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT av_write_n
            {
               type = "write_n";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT av_writedata
            {
               type = "writedata";
               width = "32";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT av_waitrequest
            {
               type = "waitrequest";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT dataavailable
            {
               type = "dataavailable";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT readyfordata
            {
               type = "readyfordata";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
         }
         SYSTEM_BUILDER_INFO
         {
            Has_IRQ = "1";
            Bus_Type = "avalon";
            Read_Wait_States = "peripheral_controlled";
            Write_Wait_States = "peripheral_controlled";
            Hold_Time = "0cycles";
            Setup_Time = "0cycles";
            Is_Printable_Device = "1";
            Address_Alignment = "native";
            Well_Behaved_Waitrequest = "0";
            Is_Nonvolatile_Storage = "0";
            Read_Latency = "0";
            Is_Memory_Device = "0";
            Maximum_Pending_Read_Transactions = "0";
            Minimum_Uninterrupted_Run_Length = "1";
            Accepts_Internal_Connections = "1";
            Write_Latency = "0";
            Is_Flash = "0";
            Data_Width = "32";
            Address_Width = "1";
            Maximum_Burst_Size = "1";
            Register_Incoming_Signals = "0";
            Register_Outgoing_Signals = "0";
            Interleave_Bursts = "0";
            Linewrap_Bursts = "0";
            Burst_On_Burst_Boundaries_Only = "0";
            Always_Burst_Max_Burst = "0";
            Is_Big_Endian = "0";
            Is_Enabled = "1";
            JTAG_Hub_Base_Id = "262254";
            JTAG_Hub_Instance_Id = "0";
            Connection_Limit = "1";
            IRQ_MASTER cpu/data_master
            {
               IRQ_Number = "0";
            }
            MASTERED_BY clock_crossing_bridge/m1
            {
               priority = "1";
               Offset_Address = "0x00000580";
            }
            Base_Address = "0x04000580";
            Address_Group = "0";
            Is_Base_Locked = "0";
         }
      }
      class = "altera_avalon_jtag_uart";
      class_version = "7.08120";
      iss_model_name = "altera_avalon_jtag_uart";
      WIZARD_SCRIPT_ARGUMENTS
      {
         allow_legacy_signals = "1";
         write_depth = "64";
         read_depth = "64";
         write_threshold = "8";
         read_threshold = "8";
         read_char_stream = "";
         showascii = "1";
         relativepath = "1";
         read_le = "0";
         write_le = "0";
         altera_show_unreleased_jtag_uart_features = "1";
      }
      SIMULATION
      {
         DISPLAY
         {
            SIGNAL av_chipselect
            {
               name = "av_chipselect";
            }
            SIGNAL av_address
            {
               name = "av_address";
               radix = "hexadecimal";
            }
            SIGNAL av_read_n
            {
               name = "av_read_n";
            }
            SIGNAL av_readdata
            {
               name = "av_readdata";
               radix = "hexadecimal";
            }
            SIGNAL av_write_n
            {
               name = "av_write_n";
            }
            SIGNAL av_writedata
            {
               name = "av_writedata";
               radix = "hexadecimal";
            }
            SIGNAL av_waitrequest
            {
               name = "av_waitrequest";
            }
            SIGNAL dataavailable
            {
               name = "dataavailable";
            }
            SIGNAL readyfordata
            {
               name = "readyfordata";
            }
            SIGNAL av_irq
            {
               name = "av_irq";
            }
         }
         INTERACTIVE_IN drive
         {
            enable = "0";
            file = "_input_data_stream.dat";
            mutex = "_input_data_mutex.dat";
            log = "_in.log";
            rate = "100";
            signals = "temp,list";
            exe = "nios2-terminal";
         }
         INTERACTIVE_OUT log
         {
            enable = "1";
            exe = "perl -- atail-f.pl";
            file = "_output_stream.dat";
            radix = "ascii";
            signals = "temp,list";
         }
         Fix_Me_Up = "";
      }
      SYSTEM_BUILDER_INFO
      {
         Is_Enabled = "1";
         Clock_Source = "slow_clk";
         Has_Clock = "1";
         Instantiate_In_System_Module = "1";
         Iss_Launch_Telnet = "0";
         Top_Level_Ports_Are_Enumerated = "1";
         View
         {
            MESSAGES
            {
            }
            Settings_Summary = "<br>Write Depth: 64; Write IRQ Threshold: 8
                <br>Read  Depth: 64; Read  IRQ Threshold: 8";
         }
      }
      HDL_INFO
      {
         Precompiled_Simulation_Library_Files = "";
         Simulation_HDL_Files = "";
         Synthesis_HDL_Files = "__PROJECT_DIRECTORY__/jtag_uart.v";
         Synthesis_Only_Files = "";
      }
      PORT_WIRING
      {
      }
   }
   MODULE push_buttons
   {
      SLAVE s1
      {
         PORT_WIRING
         {
            PORT clk
            {
               type = "clk";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT reset_n
            {
               type = "reset_n";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT irq
            {
               type = "irq";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT address
            {
               type = "address";
               width = "2";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT write_n
            {
               type = "write_n";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT writedata
            {
               type = "writedata";
               width = "32";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT chipselect
            {
               type = "chipselect";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT readdata
            {
               type = "readdata";
               width = "32";
               direction = "output";
               Is_Enabled = "1";
            }
         }
         SYSTEM_BUILDER_INFO
         {
            Has_IRQ = "1";
            Bus_Type = "avalon";
            Write_Wait_States = "0cycles";
            Read_Wait_States = "1cycles";
            Hold_Time = "0cycles";
            Setup_Time = "0cycles";
            Is_Printable_Device = "0";
            Address_Alignment = "native";
            Well_Behaved_Waitrequest = "0";
            Is_Nonvolatile_Storage = "0";
            Read_Latency = "0";
            Is_Memory_Device = "0";
            Maximum_Pending_Read_Transactions = "0";
            Minimum_Uninterrupted_Run_Length = "1";
            Accepts_Internal_Connections = "1";
            Write_Latency = "0";
            Is_Flash = "0";
            Data_Width = "32";
            Address_Width = "2";
            Maximum_Burst_Size = "1";
            Register_Incoming_Signals = "0";
            Register_Outgoing_Signals = "0";
            Interleave_Bursts = "0";
            Linewrap_Bursts = "0";
            Burst_On_Burst_Boundaries_Only = "0";
            Always_Burst_Max_Burst = "0";
            Is_Big_Endian = "0";
            Is_Enabled = "1";
            IRQ_MASTER cpu/data_master
            {
               IRQ_Number = "1";
            }
            MASTERED_BY clock_crossing_bridge/m1
            {
               priority = "1";
               Offset_Address = "0x00000200";
            }
            Base_Address = "0x04000200";
            Address_Group = "0";
            Is_Readable = "1";
            Is_Writable = "1";
            Is_Base_Locked = "0";
         }
      }
      PORT_WIRING
      {
         PORT in_port
         {
            type = "export";
            width = "4";
            direction = "input";
            Is_Enabled = "1";
            test_bench_value = "15";
         }
         PORT out_port
         {
            direction = "output";
            Is_Enabled = "0";
            width = "32";
         }
         PORT bidir_port
         {
            direction = "inout";
            Is_Enabled = "0";
            width = "32";
         }
      }
      class = "altera_avalon_pio";
      class_version = "7.08120";
      SYSTEM_BUILDER_INFO
      {
         Is_Enabled = "1";
         Instantiate_In_System_Module = "1";
         Wire_Test_Bench_Values = "1";
         Top_Level_Ports_Are_Enumerated = "1";
         Clock_Source = "slow_clk";
         Has_Clock = "1";
         Date_Modified = "";
         View
         {
            MESSAGES
            {
            }
            Settings_Summary = " 32-bit PIO using <br>
					
					 input pins with edge type RISING and interrupt source EDGE
					";
         }
      }
      WIZARD_SCRIPT_ARGUMENTS
      {
         Do_Test_Bench_Wiring = "1";
         Driven_Sim_Value = "15";
         has_tri = "0";
         has_out = "0";
         has_in = "1";
         capture = "1";
         Data_Width = "4";
         reset_value = "0";
         edge_type = "RISING";
         irq_type = "EDGE";
         bit_clearing_edge_register = "0";
         bit_modifying_output_register = "0";
      }
      HDL_INFO
      {
         Precompiled_Simulation_Library_Files = "";
         Simulation_HDL_Files = "";
         Synthesis_HDL_Files = "__PROJECT_DIRECTORY__/push_buttons.v";
         Synthesis_Only_Files = "";
      }
   }
   MODULE system_tick
   {
      SLAVE s1
      {
         PORT_WIRING
         {
            PORT clk
            {
               type = "clk";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT reset_n
            {
               type = "reset_n";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT irq
            {
               type = "irq";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT address
            {
               type = "address";
               width = "3";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT writedata
            {
               type = "writedata";
               width = "16";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT readdata
            {
               type = "readdata";
               width = "16";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT chipselect
            {
               type = "chipselect";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT write_n
            {
               type = "write_n";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
         }
         SYSTEM_BUILDER_INFO
         {
            Has_IRQ = "1";
            Bus_Type = "avalon";
            Write_Wait_States = "0cycles";
            Read_Wait_States = "1cycles";
            Hold_Time = "0cycles";
            Setup_Time = "0cycles";
            Is_Printable_Device = "0";
            Address_Alignment = "native";
            Well_Behaved_Waitrequest = "0";
            Is_Nonvolatile_Storage = "0";
            Read_Latency = "0";
            Is_Memory_Device = "0";
            Maximum_Pending_Read_Transactions = "0";
            Minimum_Uninterrupted_Run_Length = "1";
            Accepts_Internal_Connections = "1";
            Write_Latency = "0";
            Is_Flash = "0";
            Data_Width = "16";
            Address_Width = "3";
            Maximum_Burst_Size = "1";
            Register_Incoming_Signals = "0";
            Register_Outgoing_Signals = "0";
            Interleave_Bursts = "0";
            Linewrap_Bursts = "0";
            Burst_On_Burst_Boundaries_Only = "0";
            Always_Burst_Max_Burst = "0";
            Is_Big_Endian = "0";
            Is_Enabled = "1";
            IRQ_MASTER cpu/data_master
            {
               IRQ_Number = "2";
            }
            MASTERED_BY clock_crossing_bridge/m1
            {
               priority = "1";
               Offset_Address = "0x00000000";
            }
            Base_Address = "0x04000000";
            Address_Group = "0";
            Is_Base_Locked = "0";
         }
      }
      class = "altera_avalon_timer";
      class_version = "7.08120";
      iss_model_name = "altera_avalon_timer";
      SYSTEM_BUILDER_INFO
      {
         Instantiate_In_System_Module = "1";
         Is_Enabled = "1";
         Top_Level_Ports_Are_Enumerated = "1";
         View
         {
            Settings_Summary = "Timer with 10 ms timeout period.";
            Is_Collapsed = "1";
            MESSAGES
            {
            }
         }
         Clock_Source = "slow_clk";
         Has_Clock = "1";
      }
      WIZARD_SCRIPT_ARGUMENTS
      {
         always_run = "0";
         fixed_period = "0";
         snapshot = "1";
         period = "10.0";
         period_units = "ms";
         reset_output = "0";
         timeout_pulse_output = "0";
         load_value = "499999";
         counter_size = "32";
         mult = "0.0010";
         ticks_per_sec = "100";
      }
      HDL_INFO
      {
         Precompiled_Simulation_Library_Files = "";
         Simulation_HDL_Files = "";
         Synthesis_HDL_Files = "__PROJECT_DIRECTORY__/system_tick.v";
         Synthesis_Only_Files = "";
      }
      PORT_WIRING
      {
      }
   }
   MODULE sysid
   {
      SLAVE control_slave
      {
         PORT_WIRING
         {
            PORT clock
            {
               type = "clock";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT reset_n
            {
               type = "reset_n";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT address
            {
               type = "address";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT readdata
            {
               type = "readdata";
               width = "32";
               direction = "output";
               Is_Enabled = "1";
            }
         }
         SYSTEM_BUILDER_INFO
         {
            Bus_Type = "avalon";
            Write_Wait_States = "0cycles";
            Read_Wait_States = "1cycles";
            Hold_Time = "0cycles";
            Setup_Time = "0cycles";
            Is_Printable_Device = "0";
            Address_Alignment = "native";
            Well_Behaved_Waitrequest = "0";
            Is_Nonvolatile_Storage = "0";
            Read_Latency = "0";
            Is_Memory_Device = "0";
            Maximum_Pending_Read_Transactions = "0";
            Minimum_Uninterrupted_Run_Length = "1";
            Accepts_Internal_Connections = "1";
            Write_Latency = "0";
            Is_Flash = "0";
            Data_Width = "32";
            Address_Width = "1";
            Maximum_Burst_Size = "1";
            Register_Incoming_Signals = "0";
            Register_Outgoing_Signals = "0";
            Interleave_Bursts = "0";
            Linewrap_Bursts = "0";
            Burst_On_Burst_Boundaries_Only = "0";
            Always_Burst_Max_Burst = "0";
            Is_Big_Endian = "0";
            Is_Enabled = "1";
            MASTERED_BY clock_crossing_bridge/m1
            {
               priority = "1";
               Offset_Address = "0x000005c0";
            }
            Base_Address = "0x040005c0";
            Has_IRQ = "0";
            Address_Group = "0";
            Is_Base_Locked = "0";
         }
      }
      class = "altera_avalon_sysid";
      class_version = "7.08120";
      SYSTEM_BUILDER_INFO
      {
         Date_Modified = "";
         Is_Enabled = "1";
         Instantiate_In_System_Module = "1";
         Fixed_Module_Name = "sysid";
         Top_Level_Ports_Are_Enumerated = "1";
         Clock_Source = "slow_clk";
         Has_Clock = "1";
         View
         {
            Settings_Summary = "System ID (at last Generate):<br> <b>00000000</b>    (unique ID tag) <br> <b>50CE8A7D</b> (timestamp: Mon Dec 17, 2012 @10:59 AM)";
            MESSAGES
            {
            }
         }
      }
      WIZARD_SCRIPT_ARGUMENTS
      {
         id = "0u";
         timestamp = "1355713149u";
         regenerate_values = "0";
         MAKE
         {
            TARGET verifysysid
            {
               verifysysid
               {
                  All_Depends_On = "0";
                  Command = "nios2-download $(JTAG_CABLE)                                --sidp=0x040005c0 --id=0 --timestamp=1355713149";
                  Is_Phony = "1";
                  Target_File = "dummy_verifysysid_file";
               }
            }
         }
      }
      HDL_INFO
      {
         Precompiled_Simulation_Library_Files = "";
         Simulation_HDL_Files = "";
         Synthesis_HDL_Files = "__PROJECT_DIRECTORY__/sysid.v";
         Synthesis_Only_Files = "";
      }
      PORT_WIRING
      {
      }
   }
   MODULE lcd_sgdma
   {
      SLAVE csr
      {
         PORT_WIRING
         {
            PORT clk
            {
               type = "clk";
               width = "1";
               direction = "input";
               Is_Enabled = "0";
            }
            PORT system_reset_n
            {
               type = "reset_n";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT csr_irq
            {
               type = "irq";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT csr_chipselect
            {
               type = "chipselect";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT csr_address
            {
               type = "address";
               width = "4";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT csr_read
            {
               type = "read";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT csr_write
            {
               type = "write";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT csr_writedata
            {
               type = "writedata";
               width = "32";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT csr_readdata
            {
               type = "readdata";
               width = "32";
               direction = "output";
               Is_Enabled = "1";
            }
         }
         SYSTEM_BUILDER_INFO
         {
            Has_IRQ = "1";
            Bus_Type = "avalon";
            Write_Wait_States = "0cycles";
            Read_Wait_States = "1cycles";
            Hold_Time = "0cycles";
            Setup_Time = "0cycles";
            Is_Printable_Device = "0";
            Address_Alignment = "dynamic";
            Well_Behaved_Waitrequest = "0";
            Is_Nonvolatile_Storage = "0";
            Address_Span = "64";
            Read_Latency = "0";
            Is_Memory_Device = "0";
            Maximum_Pending_Read_Transactions = "0";
            Minimum_Uninterrupted_Run_Length = "1";
            Accepts_Internal_Connections = "1";
            Write_Latency = "0";
            Is_Flash = "0";
            Data_Width = "32";
            Address_Width = "4";
            Maximum_Burst_Size = "1";
            Register_Incoming_Signals = "0";
            Register_Outgoing_Signals = "0";
            Interleave_Bursts = "0";
            Linewrap_Bursts = "0";
            Burst_On_Burst_Boundaries_Only = "0";
            Always_Burst_Max_Burst = "0";
            Is_Big_Endian = "0";
            Is_Enabled = "1";
            MASTERED_BY pipeline_bridge/m1
            {
               priority = "1";
               Offset_Address = "0x04401800";
            }
            IRQ_MASTER cpu/data_master
            {
               IRQ_Number = "3";
            }
            Base_Address = "0x04401800";
            Address_Group = "0";
            Is_Base_Locked = "0";
         }
      }
      MASTER out
      {
         SYSTEM_BUILDER_INFO
         {
            Bus_Type = "atlantic";
         }
         PORT_WIRING
         {
            PORT out_data
            {
               type = "data";
               width = "32";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT out_valid
            {
               type = "valid";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT out_ready
            {
               type = "ready";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT out_endofpacket
            {
               type = "endofpacket";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT out_startofpacket
            {
               type = "startofpacket";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT out_empty
            {
               type = "empty";
               width = "2";
               direction = "output";
               Is_Enabled = "1";
            }
         }
      }
      MASTER m_read
      {
         SYSTEM_BUILDER_INFO
         {
            Bus_Type = "avalon";
            Is_Asynchronous = "0";
            DBS_Big_Endian = "0";
            Adapts_To = "";
            Do_Stream_Reads = "0";
            Do_Stream_Writes = "0";
            Max_Address_Width = "32";
            Data_Width = "32";
            Address_Width = "32";
            Maximum_Burst_Size = "1";
            Register_Incoming_Signals = "0";
            Register_Outgoing_Signals = "0";
            Interleave_Bursts = "0";
            Linewrap_Bursts = "0";
            Burst_On_Burst_Boundaries_Only = "0";
            Always_Burst_Max_Burst = "0";
            Is_Big_Endian = "0";
            Is_Enabled = "1";
         }
         PORT_WIRING
         {
            PORT m_read_readdata
            {
               type = "readdata";
               width = "32";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT m_read_readdatavalid
            {
               type = "readdatavalid";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT m_read_waitrequest
            {
               type = "waitrequest";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT m_read_address
            {
               type = "address";
               width = "32";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT m_read_read
            {
               type = "read";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT clk
            {
               Is_Enabled = "0";
               direction = "input";
               type = "clk";
               width = "1";
            }
            PORT reset_n
            {
               Is_Enabled = "0";
               direction = "input";
               type = "reset_n";
               width = "1";
            }
         }
         MEMORY_MAP
         {
            Entry frame_buffer_pipeline_bridge/s1
            {
               address = "0x00000000";
               span = "0x02000000";
               is_bridge = "1";
            }
            Entry ddr_sdram_clock_crossing_bridge/s1
            {
               address = "0x00000000";
               span = "0x02000000";
               is_bridge = "1";
            }
            Entry frame_buffer/s1
            {
               address = "0x00000000";
               span = "0x02000000";
               is_bridge = "0";
            }
         }
      }
      MASTER descriptor_write
      {
         SYSTEM_BUILDER_INFO
         {
            Bus_Type = "avalon";
            Is_Asynchronous = "0";
            DBS_Big_Endian = "0";
            Adapts_To = "";
            Do_Stream_Reads = "0";
            Do_Stream_Writes = "0";
            Max_Address_Width = "32";
            Data_Width = "32";
            Address_Width = "32";
            Maximum_Burst_Size = "1";
            Register_Incoming_Signals = "0";
            Register_Outgoing_Signals = "0";
            Interleave_Bursts = "0";
            Linewrap_Bursts = "0";
            Burst_On_Burst_Boundaries_Only = "0";
            Always_Burst_Max_Burst = "0";
            Is_Big_Endian = "0";
            Is_Enabled = "1";
         }
         PORT_WIRING
         {
            PORT descriptor_write_waitrequest
            {
               type = "waitrequest";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT descriptor_write_address
            {
               type = "address";
               width = "32";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT descriptor_write_write
            {
               type = "write";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT descriptor_write_writedata
            {
               type = "writedata";
               width = "32";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT clk
            {
               Is_Enabled = "0";
               direction = "input";
               type = "clk";
               width = "1";
            }
            PORT reset_n
            {
               Is_Enabled = "0";
               direction = "input";
               type = "reset_n";
               width = "1";
            }
         }
         MEMORY_MAP
         {
            Entry descriptor_memory/s2
            {
               address = "0x04400000";
               span = "0x00001000";
               is_bridge = "0";
            }
         }
      }
      MASTER descriptor_read
      {
         SYSTEM_BUILDER_INFO
         {
            Bus_Type = "avalon";
            Is_Asynchronous = "0";
            DBS_Big_Endian = "0";
            Adapts_To = "";
            Do_Stream_Reads = "0";
            Do_Stream_Writes = "0";
            Max_Address_Width = "32";
            Data_Width = "32";
            Address_Width = "32";
            Maximum_Burst_Size = "1";
            Register_Incoming_Signals = "0";
            Register_Outgoing_Signals = "0";
            Interleave_Bursts = "0";
            Linewrap_Bursts = "0";
            Burst_On_Burst_Boundaries_Only = "0";
            Always_Burst_Max_Burst = "0";
            Is_Big_Endian = "0";
            Is_Enabled = "1";
         }
         PORT_WIRING
         {
            PORT descriptor_read_readdata
            {
               type = "readdata";
               width = "32";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT descriptor_read_readdatavalid
            {
               type = "readdatavalid";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT descriptor_read_waitrequest
            {
               type = "waitrequest";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT descriptor_read_address
            {
               type = "address";
               width = "32";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT descriptor_read_read
            {
               type = "read";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT clk
            {
               Is_Enabled = "1";
               direction = "input";
               type = "clk";
               width = "1";
            }
            PORT reset
            {
               Is_Enabled = "0";
               direction = "input";
               type = "reset";
               width = "1";
            }
            PORT reset_n
            {
               Is_Enabled = "0";
               direction = "input";
               type = "reset_n";
               width = "1";
            }
         }
         MEMORY_MAP
         {
            Entry descriptor_memory/s2
            {
               address = "0x04400000";
               span = "0x00001000";
               is_bridge = "0";
            }
         }
      }
      iss_model_name = "altera_avalon_sgdma";
      WIZARD_SCRIPT_ARGUMENTS
      {
         read_block_data_width = "32";
         write_block_data_width = "32";
         stream_data_width = "32";
         address_width = "32";
         has_read_block = "1";
         has_write_block = "0";
         read_burstcount_width = "4";
         write_burstcount_width = "4";
         burst_transfer = "0";
         always_do_max_burst = "1";
         descriptor_read_burst = "0";
         unaligned_transfer = "0";
         avalon_mm_byte_reorder_mode = "0";
         control_slave_data_width = "32";
         control_slave_address_width = "4";
         desc_data_width = "32";
         descriptor_writeback_data_width = "32";
         status_token_data_width = "24";
         bytes_to_transfer_data_width = "16";
         burst_data_width = "8";
         control_data_width = "8";
         status_data_width = "8";
         atlantic_channel_data_width = "4";
         command_fifo_data_width = "104";
         symbols_per_beat = "4";
         in_error_width = "0";
         out_error_width = "0";
         Device_Family = "CYCLONEIII";
      }
      SIMULATION
      {
         DISPLAY
         {
            SIGNAL a
            {
               name = "csr_read";
               conditional = "1";
            }
            SIGNAL b
            {
               name = "csr_write";
               conditional = "1";
            }
            SIGNAL c
            {
               name = "csr_address";
               conditional = "1";
            }
            SIGNAL d
            {
               name = "csr_chipselect";
               conditional = "1";
            }
            SIGNAL e
            {
               name = "csr_writedata";
               conditional = "1";
            }
            SIGNAL f
            {
               name = "csr_readdata";
               conditional = "1";
            }
         }
      }
      SYSTEM_BUILDER_INFO
      {
         Instantiate_In_System_Module = "1";
         Is_Enabled = "1";
         Default_Module_Name = "sg_dma";
         Top_Level_Ports_Are_Enumerated = "1";
         Clock_Source = "system_clk";
         Has_Clock = "1";
         View
         {
            MESSAGES
            {
            }
         }
      }
      class = "altera_avalon_sgdma";
      class_version = "7.08120";
      HDL_INFO
      {
         Precompiled_Simulation_Library_Files = "";
         Simulation_HDL_Files = "";
         Synthesis_HDL_Files = "__PROJECT_DIRECTORY__/lcd_sgdma.v";
         Synthesis_Only_Files = "";
      }
      PORT_WIRING
      {
      }
   }
   MODULE lcd_pixel_converter
   {
      SLAVE in
      {
         PORT_WIRING
         {
            PORT clk
            {
               type = "clk";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT reset_n
            {
               type = "reset_n";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT ready_out
            {
               type = "ready";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT valid_in
            {
               type = "valid";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT data_in
            {
               type = "data";
               width = "32";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT eop_in
            {
               type = "endofpacket";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT sop_in
            {
               type = "startofpacket";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT empty_in
            {
               type = "empty";
               width = "2";
               direction = "input";
               Is_Enabled = "1";
            }
         }
         SYSTEM_BUILDER_INFO
         {
            Bus_Type = "atlantic";
            Accepts_Internal_Connections = "1";
            MASTERED_BY lcd_sgdma/out
            {
               priority = "0";
            }
            Address_Group = "0";
            Base_Address = "0x00000000";
            Is_Base_Locked = "0";
         }
      }
      MASTER out
      {
         SYSTEM_BUILDER_INFO
         {
            Bus_Type = "atlantic";
         }
         PORT_WIRING
         {
            PORT ready_in
            {
               type = "ready";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT valid_out
            {
               type = "valid";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT data_out
            {
               type = "data";
               width = "24";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT eop_out
            {
               type = "endofpacket";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT sop_out
            {
               type = "startofpacket";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT empty_out
            {
               type = "empty";
               width = "2";
               direction = "output";
               Is_Enabled = "1";
            }
         }
      }
      class = "no_legacy_module";
      class_version = "7.08120";
      gtf_class_name = "altera_avalon_pixel_converter";
      gtf_class_version = "10.1";
      SYSTEM_BUILDER_INFO
      {
         Do_Not_Generate = "1";
         Instantiate_In_System_Module = "1";
         Is_Bridge = "0";
         Is_Enabled = "1";
         Clock_Source = "system_clk";
         Has_Clock = "1";
         View
         {
            MESSAGES
            {
            }
         }
      }
      HDL_INFO
      {
         Simulation_HDL_Files = "__PROJECT_DIRECTORY__/lcd_pixel_converter.vo";
      }
      WIZARD_SCRIPT_ARGUMENTS
      {
      }
   }
   MODULE lcd_data_format_adapter
   {
      SLAVE in
      {
         PORT_WIRING
         {
            PORT clk
            {
               type = "clk";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT reset_n
            {
               type = "reset_n";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT in_ready
            {
               type = "ready";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT in_valid
            {
               type = "valid";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT in_data
            {
               type = "data";
               width = "24";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT in_startofpacket
            {
               type = "startofpacket";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT in_endofpacket
            {
               type = "endofpacket";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT in_empty
            {
               type = "empty";
               width = "2";
               direction = "input";
               Is_Enabled = "1";
            }
         }
         SYSTEM_BUILDER_INFO
         {
            Bus_Type = "atlantic";
            Accepts_Internal_Connections = "1";
            MASTERED_BY lcd_pixel_converter/out
            {
               priority = "0";
            }
            Address_Group = "0";
            Base_Address = "0x00000000";
            Is_Base_Locked = "0";
         }
      }
      MASTER out
      {
         SYSTEM_BUILDER_INFO
         {
            Bus_Type = "atlantic";
         }
         PORT_WIRING
         {
            PORT out_ready
            {
               type = "ready";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT out_valid
            {
               type = "valid";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT out_data
            {
               type = "data";
               width = "8";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT out_startofpacket
            {
               type = "startofpacket";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT out_endofpacket
            {
               type = "endofpacket";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
         }
      }
      class = "no_legacy_module";
      class_version = "7.08120";
      gtf_class_name = "data_format_adapter";
      gtf_class_version = "12.1";
      SYSTEM_BUILDER_INFO
      {
         Do_Not_Generate = "1";
         Instantiate_In_System_Module = "1";
         Is_Enabled = "1";
         Clock_Source = "system_clk";
         Has_Clock = "1";
         View
         {
            MESSAGES
            {
            }
         }
      }
      SIMULATION
      {
         DISPLAY
         {
            SIGNAL aaa
            {
               name = "clk";
               radix = "binary";
               conditional = "1";
            }
            SIGNAL aab
            {
               name = "reset_n";
               radix = "binary";
               conditional = "1";
            }
            SIGNAL aac
            {
               name = "in_ready";
               radix = "binary";
               conditional = "1";
            }
            SIGNAL aad
            {
               name = "in_valid";
               radix = "binary";
               conditional = "1";
            }
            SIGNAL aae
            {
               name = "in_data";
               radix = "hexadecimal";
               conditional = "1";
            }
            SIGNAL aaf
            {
               name = "in_startofpacket";
               radix = "binary";
               conditional = "1";
            }
            SIGNAL aag
            {
               name = "in_endofpacket";
               radix = "binary";
               conditional = "1";
            }
            SIGNAL aah
            {
               name = "in_empty";
               radix = "hexadecimal";
               conditional = "1";
            }
            SIGNAL aai
            {
               name = "out_ready";
               radix = "binary";
               conditional = "1";
            }
            SIGNAL aaj
            {
               name = "out_valid";
               radix = "binary";
               conditional = "1";
            }
            SIGNAL aak
            {
               name = "out_data";
               radix = "hexadecimal";
               conditional = "1";
            }
            SIGNAL aal
            {
               name = "out_startofpacket";
               radix = "binary";
               conditional = "1";
            }
            SIGNAL aam
            {
               name = "out_endofpacket";
               radix = "binary";
               conditional = "1";
            }
         }
      }
      HDL_INFO
      {
         Simulation_HDL_Files = "";
         Synthesis_HDL_Files = "__PROJECT_DIRECTORY__/lcd_data_format_adapter.v,__PROJECT_DIRECTORY__/lcd_data_format_adapter_state_ram.v,__PROJECT_DIRECTORY__/lcd_data_format_adapter_data_ram.v";
         Synthesis_Only_Files = "__PROJECT_DIRECTORY__/lcd_data_format_adapter.v,__PROJECT_DIRECTORY__/lcd_data_format_adapter_state_ram.v,__PROJECT_DIRECTORY__/lcd_data_format_adapter_data_ram.v";
      }
      WIZARD_SCRIPT_ARGUMENTS
      {
      }
   }
   MODULE lcd_ta_formatter_to_fifo
   {
      SLAVE in
      {
         PORT_WIRING
         {
            PORT clk
            {
               type = "clk";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT reset_n
            {
               type = "reset_n";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT in_ready
            {
               type = "ready";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT in_valid
            {
               type = "valid";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT in_data
            {
               type = "data";
               width = "8";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT in_startofpacket
            {
               type = "startofpacket";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT in_endofpacket
            {
               type = "endofpacket";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
         }
         SYSTEM_BUILDER_INFO
         {
            Bus_Type = "atlantic";
            Accepts_Internal_Connections = "1";
            MASTERED_BY lcd_data_format_adapter/out
            {
               priority = "0";
            }
            Address_Group = "0";
            Base_Address = "0x00000000";
            Is_Base_Locked = "0";
         }
      }
      MASTER out
      {
         SYSTEM_BUILDER_INFO
         {
            Bus_Type = "atlantic";
         }
         PORT_WIRING
         {
            PORT out_ready
            {
               type = "ready";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT out_valid
            {
               type = "valid";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT out_data
            {
               type = "data";
               width = "8";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT out_startofpacket
            {
               type = "startofpacket";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT out_endofpacket
            {
               type = "endofpacket";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
         }
      }
      class = "no_legacy_module";
      class_version = "7.08120";
      gtf_class_name = "timing_adapter";
      gtf_class_version = "12.1";
      SYSTEM_BUILDER_INFO
      {
         Do_Not_Generate = "1";
         Instantiate_In_System_Module = "1";
         Is_Enabled = "1";
         Clock_Source = "system_clk";
         Has_Clock = "1";
         View
         {
            MESSAGES
            {
            }
         }
      }
      SIMULATION
      {
         DISPLAY
         {
            SIGNAL aaa
            {
               name = "clk";
               radix = "binary";
               conditional = "1";
            }
            SIGNAL aab
            {
               name = "reset_n";
               radix = "binary";
               conditional = "1";
            }
            SIGNAL aac
            {
               name = "in_ready";
               radix = "binary";
               conditional = "1";
            }
            SIGNAL aad
            {
               name = "in_valid";
               radix = "binary";
               conditional = "1";
            }
            SIGNAL aae
            {
               name = "in_data";
               radix = "hexadecimal";
               conditional = "1";
            }
            SIGNAL aaf
            {
               name = "in_startofpacket";
               radix = "binary";
               conditional = "1";
            }
            SIGNAL aag
            {
               name = "in_endofpacket";
               radix = "binary";
               conditional = "1";
            }
            SIGNAL aah
            {
               name = "out_ready";
               radix = "binary";
               conditional = "1";
            }
            SIGNAL aai
            {
               name = "out_valid";
               radix = "binary";
               conditional = "1";
            }
            SIGNAL aaj
            {
               name = "out_data";
               radix = "hexadecimal";
               conditional = "1";
            }
            SIGNAL aak
            {
               name = "out_startofpacket";
               radix = "binary";
               conditional = "1";
            }
            SIGNAL aal
            {
               name = "out_endofpacket";
               radix = "binary";
               conditional = "1";
            }
         }
      }
      HDL_INFO
      {
         Simulation_HDL_Files = "";
         Synthesis_HDL_Files = "__PROJECT_DIRECTORY__/lcd_ta_formatter_to_fifo.v";
         Synthesis_Only_Files = "__PROJECT_DIRECTORY__/lcd_ta_formatter_to_fifo.v";
      }
      WIZARD_SCRIPT_ARGUMENTS
      {
      }
   }
   MODULE lcd_on_chip_memory_fifo
   {
      SLAVE in
      {
         PORT_WIRING
         {
            PORT wrclock
            {
               type = "clk";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT wrreset_n
            {
               type = "reset_n";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT avalonst_sink_valid
            {
               type = "valid";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT avalonst_sink_data
            {
               type = "data";
               width = "8";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT avalonst_sink_startofpacket
            {
               type = "startofpacket";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT avalonst_sink_endofpacket
            {
               type = "endofpacket";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT avalonst_sink_ready
            {
               type = "ready";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
         }
         SYSTEM_BUILDER_INFO
         {
            Bus_Type = "atlantic";
            Accepts_Internal_Connections = "1";
            MASTERED_BY lcd_ta_formatter_to_fifo/out
            {
               priority = "0";
            }
            Clock_Source = "system_clk";
            Has_Clock = "1";
            Address_Group = "0";
            Base_Address = "0x00000000";
            Is_Base_Locked = "0";
         }
      }
      MASTER out
      {
         PORT_WIRING
         {
            PORT rdclock
            {
               type = "clk";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT rdreset_n
            {
               type = "reset_n";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT avalonst_source_valid
            {
               type = "valid";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT avalonst_source_data
            {
               type = "data";
               width = "8";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT avalonst_source_startofpacket
            {
               type = "startofpacket";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT avalonst_source_endofpacket
            {
               type = "endofpacket";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT avalonst_source_ready
            {
               type = "ready";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
         }
         SYSTEM_BUILDER_INFO
         {
            Bus_Type = "atlantic";
            Clock_Source = "video_clk";
            Has_Clock = "1";
         }
      }
      class = "altera_avalon_fifo";
      class_version = "7.08120";
      iss_model_name = "altera_avalon_fifo";
      WIZARD_SCRIPT_ARGUMENTS
      {
         Device_Family = "CYCLONEIII";
         Use_Register = "0";
         Single_Clock_Mode = "0";
         FIFO_Depth = "1024";
         Use_Write_Control = "0";
         Use_Read_Control = "0";
         Use_IRQ = "0";
         Use_AvalonMM_Write_Slave = "0";
         Use_AvalonMM_Read_Slave = "0";
         Use_AvalonST_Sink = "1";
         Use_AvalonST_Source = "1";
         Use_Backpressure = "1";
         AvalonMM_AvalonMM_Data_Width = "32";
         Bits_Per_Symbol = "8";
         Symbols_Per_Beat = "1";
         AvalonMM_AvalonST_Data_Width = "32";
         Error_Width = "0";
         Channel_Width = "0";
         Use_Packet = "1";
      }
      SIMULATION
      {
         DISPLAY
         {
            SIGNAL signal_0
            {
               name = "wrclock";
               conditional = "1";
            }
            SIGNAL signal_1
            {
               name = "wrreset_n";
               conditional = "1";
            }
            SIGNAL signal_2
            {
               name = "avalonst_sink_valid";
               conditional = "1";
            }
            SIGNAL signal_3
            {
               name = "avalonst_sink_data";
               conditional = "1";
               radix = "hexadecimal";
            }
            SIGNAL signal_4
            {
               name = "avalonst_sink_startofpacket";
               conditional = "1";
            }
            SIGNAL signal_5
            {
               name = "avalonst_sink_endofpacket";
               conditional = "1";
            }
            SIGNAL signal_6
            {
               name = "avalonst_sink_ready";
               conditional = "1";
            }
            SIGNAL signal_7
            {
               name = "rdclock";
               conditional = "1";
            }
            SIGNAL signal_8
            {
               name = "rdreset_n";
               conditional = "1";
            }
            SIGNAL signal_9
            {
               name = "avalonst_source_valid";
               conditional = "1";
            }
            SIGNAL signal_10
            {
               name = "avalonst_source_data";
               conditional = "1";
               radix = "hexadecimal";
            }
            SIGNAL signal_11
            {
               name = "avalonst_source_startofpacket";
               conditional = "1";
            }
            SIGNAL signal_12
            {
               name = "avalonst_source_endofpacket";
               conditional = "1";
            }
            SIGNAL signal_13
            {
               name = "avalonst_source_ready";
               conditional = "1";
            }
         }
      }
      SYSTEM_BUILDER_INFO
      {
         Is_Enabled = "1";
         Instantiate_In_System_Module = "1";
         Top_Level_Ports_Are_Enumerated = "1";
         Has_Clock = "1";
         Clock_Source = "ext_clk_one";
         View
         {
            MESSAGES
            {
            }
         }
      }
      HDL_INFO
      {
         Precompiled_Simulation_Library_Files = "";
         Simulation_HDL_Files = "";
         Synthesis_HDL_Files = "__PROJECT_DIRECTORY__/lcd_on_chip_memory_fifo.v";
         Synthesis_Only_Files = "";
      }
      PORT_WIRING
      {
      }
   }
   MODULE lcd_ta_fifo_to_sequencer
   {
      SLAVE in
      {
         PORT_WIRING
         {
            PORT clk
            {
               type = "clk";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT reset_n
            {
               type = "reset_n";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT in_ready
            {
               type = "ready";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT in_valid
            {
               type = "valid";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT in_data
            {
               type = "data";
               width = "8";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT in_startofpacket
            {
               type = "startofpacket";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT in_endofpacket
            {
               type = "endofpacket";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
         }
         SYSTEM_BUILDER_INFO
         {
            Bus_Type = "atlantic";
            Accepts_Internal_Connections = "1";
            MASTERED_BY lcd_on_chip_memory_fifo/out
            {
               priority = "0";
            }
            Address_Group = "0";
            Base_Address = "0x00000000";
            Is_Base_Locked = "0";
         }
      }
      MASTER out
      {
         SYSTEM_BUILDER_INFO
         {
            Bus_Type = "atlantic";
         }
         PORT_WIRING
         {
            PORT out_ready
            {
               type = "ready";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT out_valid
            {
               type = "valid";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT out_data
            {
               type = "data";
               width = "8";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT out_startofpacket
            {
               type = "startofpacket";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT out_endofpacket
            {
               type = "endofpacket";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
         }
      }
      class = "no_legacy_module";
      class_version = "7.08120";
      gtf_class_name = "timing_adapter";
      gtf_class_version = "12.1";
      SYSTEM_BUILDER_INFO
      {
         Do_Not_Generate = "1";
         Instantiate_In_System_Module = "1";
         Is_Enabled = "1";
         Clock_Source = "video_clk";
         Has_Clock = "1";
         View
         {
            MESSAGES
            {
            }
         }
      }
      SIMULATION
      {
         DISPLAY
         {
            SIGNAL aaa
            {
               name = "clk";
               radix = "binary";
               conditional = "1";
            }
            SIGNAL aab
            {
               name = "reset_n";
               radix = "binary";
               conditional = "1";
            }
            SIGNAL aac
            {
               name = "in_ready";
               radix = "binary";
               conditional = "1";
            }
            SIGNAL aad
            {
               name = "in_valid";
               radix = "binary";
               conditional = "1";
            }
            SIGNAL aae
            {
               name = "in_data";
               radix = "hexadecimal";
               conditional = "1";
            }
            SIGNAL aaf
            {
               name = "in_startofpacket";
               radix = "binary";
               conditional = "1";
            }
            SIGNAL aag
            {
               name = "in_endofpacket";
               radix = "binary";
               conditional = "1";
            }
            SIGNAL aah
            {
               name = "out_ready";
               radix = "binary";
               conditional = "1";
            }
            SIGNAL aai
            {
               name = "out_valid";
               radix = "binary";
               conditional = "1";
            }
            SIGNAL aaj
            {
               name = "out_data";
               radix = "hexadecimal";
               conditional = "1";
            }
            SIGNAL aak
            {
               name = "out_startofpacket";
               radix = "binary";
               conditional = "1";
            }
            SIGNAL aal
            {
               name = "out_endofpacket";
               radix = "binary";
               conditional = "1";
            }
         }
      }
      HDL_INFO
      {
         Simulation_HDL_Files = "";
         Synthesis_HDL_Files = "__PROJECT_DIRECTORY__/lcd_ta_fifo_to_sequencer.v,__PROJECT_DIRECTORY__/lcd_ta_fifo_to_sequencer_fifo.v";
         Synthesis_Only_Files = "__PROJECT_DIRECTORY__/lcd_ta_fifo_to_sequencer.v,__PROJECT_DIRECTORY__/lcd_ta_fifo_to_sequencer_fifo.v";
      }
      WIZARD_SCRIPT_ARGUMENTS
      {
      }
   }
   MODULE lcd_video_sequencer
   {
      SLAVE in
      {
         PORT_WIRING
         {
            PORT clk
            {
               type = "clk";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT reset_n
            {
               type = "reset_n";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT ready
            {
               type = "ready";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT valid
            {
               type = "valid";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT data
            {
               type = "data";
               width = "8";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT eop
            {
               type = "endofpacket";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT sop
            {
               type = "startofpacket";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT empty
            {
               type = "empty";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
         }
         SYSTEM_BUILDER_INFO
         {
            Bus_Type = "atlantic";
            Accepts_Internal_Connections = "1";
            MASTERED_BY lcd_data_format_adapter_1/out
            {
               priority = "0";
            }
            Address_Group = "0";
            Base_Address = "0x00000000";
            Is_Base_Locked = "0";
         }
      }
      PORT_WIRING
      {
         PORT RGB_OUT
         {
            type = "export";
            width = "8";
            direction = "output";
            Is_Enabled = "1";
         }
         PORT HD
         {
            type = "export";
            width = "1";
            direction = "output";
            Is_Enabled = "1";
         }
         PORT VD
         {
            type = "export";
            width = "1";
            direction = "output";
            Is_Enabled = "1";
         }
         PORT DEN
         {
            type = "export";
            width = "1";
            direction = "output";
            Is_Enabled = "1";
         }
      }
      class = "no_legacy_module";
      class_version = "7.08120";
      gtf_class_name = "altera_avalon_video_sync_generator";
      gtf_class_version = "10.1";
      SYSTEM_BUILDER_INFO
      {
         Do_Not_Generate = "1";
         Instantiate_In_System_Module = "1";
         Is_Bridge = "0";
         Is_Enabled = "1";
         Clock_Source = "video_clk";
         Has_Clock = "1";
         View
         {
            MESSAGES
            {
            }
         }
      }
      HDL_INFO
      {
         Simulation_HDL_Files = "__PROJECT_DIRECTORY__/lcd_video_sequencer.vo";
      }
      WIZARD_SCRIPT_ARGUMENTS
      {
      }
   }
   MODULE touchPanel_spi
   {
      SLAVE spi_control_port
      {
         PORT_WIRING
         {
            PORT clk
            {
               type = "clk";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT reset_n
            {
               type = "reset_n";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT irq
            {
               type = "irq";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT data_from_cpu
            {
               type = "writedata";
               width = "16";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT data_to_cpu
            {
               type = "readdata";
               width = "16";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT mem_addr
            {
               type = "address";
               width = "3";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT read_n
            {
               type = "read_n";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT spi_select
            {
               type = "chipselect";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT write_n
            {
               type = "write_n";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT dataavailable
            {
               type = "dataavailable";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT endofpacket
            {
               type = "endofpacket";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT readyfordata
            {
               type = "readyfordata";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
         }
         SYSTEM_BUILDER_INFO
         {
            Has_IRQ = "1";
            Bus_Type = "avalon";
            Write_Wait_States = "1cycles";
            Read_Wait_States = "1cycles";
            Hold_Time = "0cycles";
            Setup_Time = "0cycles";
            Is_Printable_Device = "0";
            Address_Alignment = "native";
            Well_Behaved_Waitrequest = "0";
            Is_Nonvolatile_Storage = "0";
            Read_Latency = "0";
            Is_Memory_Device = "0";
            Maximum_Pending_Read_Transactions = "0";
            Minimum_Uninterrupted_Run_Length = "1";
            Accepts_Internal_Connections = "1";
            Write_Latency = "0";
            Is_Flash = "0";
            Data_Width = "16";
            Address_Width = "3";
            Maximum_Burst_Size = "1";
            Register_Incoming_Signals = "0";
            Register_Outgoing_Signals = "0";
            Interleave_Bursts = "0";
            Linewrap_Bursts = "0";
            Burst_On_Burst_Boundaries_Only = "0";
            Always_Burst_Max_Burst = "0";
            Is_Big_Endian = "0";
            Is_Enabled = "1";
            IRQ_MASTER cpu/data_master
            {
               IRQ_Number = "4";
            }
            MASTERED_BY clock_crossing_bridge/m1
            {
               priority = "1";
               Offset_Address = "0x00000100";
            }
            Base_Address = "0x04000100";
            Address_Group = "0";
            Is_Base_Locked = "0";
         }
      }
      PORT_WIRING
      {
         PORT MISO
         {
            type = "export";
            width = "1";
            direction = "input";
            Is_Enabled = "1";
         }
         PORT MOSI
         {
            type = "export";
            width = "1";
            direction = "output";
            Is_Enabled = "1";
         }
         PORT SCLK
         {
            type = "export";
            width = "1";
            direction = "output";
            Is_Enabled = "1";
         }
         PORT SS_n
         {
            type = "export";
            width = "1";
            direction = "output";
            Is_Enabled = "1";
         }
      }
      WIZARD_SCRIPT_ARGUMENTS
      {
         databits = "8";
         datawidth = "16";
         targetclock = "32000";
         clockunits = "Hz";
         clockmult = "1";
         numslaves = "1";
         ismaster = "1";
         allow_legacy_signals = "1";
         clockpolarity = "0";
         clockphase = "0";
         lsbfirst = "0";
         extradelay = "0";
         insert_sync = "0";
         sync_reg_depth = "2";
         disableAvalonFlowControl = "0";
         targetssdelay = "0.0";
         delayunits = "ns";
         delaymult = "1e-009";
         prefix = "spi_";
         clockunit = "kHz";
         delayunit = "us";
      }
      class = "altera_avalon_spi";
      class_version = "7.08120";
      SYSTEM_BUILDER_INFO
      {
         Is_Enabled = "1";
         Clock_Source = "slow_clk";
         Has_Clock = "1";
         Instantiate_In_System_Module = "1";
         Top_Level_Ports_Are_Enumerated = "1";
         View
         {
            MESSAGES
            {
            }
         }
      }
      HDL_INFO
      {
         Precompiled_Simulation_Library_Files = "";
         Simulation_HDL_Files = "";
         Synthesis_HDL_Files = "__PROJECT_DIRECTORY__/touchPanel_spi.v";
         Synthesis_Only_Files = "";
      }
   }
   MODULE touchPanel_irq_n
   {
      SLAVE s1
      {
         PORT_WIRING
         {
            PORT clk
            {
               type = "clk";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT reset_n
            {
               type = "reset_n";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT irq
            {
               type = "irq";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT address
            {
               type = "address";
               width = "2";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT write_n
            {
               type = "write_n";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT writedata
            {
               type = "writedata";
               width = "32";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT chipselect
            {
               type = "chipselect";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT readdata
            {
               type = "readdata";
               width = "32";
               direction = "output";
               Is_Enabled = "1";
            }
         }
         SYSTEM_BUILDER_INFO
         {
            Has_IRQ = "1";
            Bus_Type = "avalon";
            Write_Wait_States = "0cycles";
            Read_Wait_States = "1cycles";
            Hold_Time = "0cycles";
            Setup_Time = "0cycles";
            Is_Printable_Device = "0";
            Address_Alignment = "native";
            Well_Behaved_Waitrequest = "0";
            Is_Nonvolatile_Storage = "0";
            Read_Latency = "0";
            Is_Memory_Device = "0";
            Maximum_Pending_Read_Transactions = "0";
            Minimum_Uninterrupted_Run_Length = "1";
            Accepts_Internal_Connections = "1";
            Write_Latency = "0";
            Is_Flash = "0";
            Data_Width = "32";
            Address_Width = "2";
            Maximum_Burst_Size = "1";
            Register_Incoming_Signals = "0";
            Register_Outgoing_Signals = "0";
            Interleave_Bursts = "0";
            Linewrap_Bursts = "0";
            Burst_On_Burst_Boundaries_Only = "0";
            Always_Burst_Max_Burst = "0";
            Is_Big_Endian = "0";
            Is_Enabled = "1";
            IRQ_MASTER cpu/data_master
            {
               IRQ_Number = "5";
            }
            MASTERED_BY clock_crossing_bridge/m1
            {
               priority = "1";
               Offset_Address = "0x00000280";
            }
            Base_Address = "0x04000280";
            Address_Group = "0";
            Is_Readable = "1";
            Is_Writable = "1";
            Is_Base_Locked = "0";
         }
      }
      PORT_WIRING
      {
         PORT in_port
         {
            type = "export";
            width = "1";
            direction = "input";
            Is_Enabled = "1";
         }
         PORT out_port
         {
            direction = "output";
            Is_Enabled = "0";
            width = "32";
         }
         PORT bidir_port
         {
            direction = "inout";
            Is_Enabled = "0";
            width = "32";
         }
      }
      class = "altera_avalon_pio";
      class_version = "7.08120";
      SYSTEM_BUILDER_INFO
      {
         Is_Enabled = "1";
         Instantiate_In_System_Module = "1";
         Wire_Test_Bench_Values = "1";
         Top_Level_Ports_Are_Enumerated = "1";
         Clock_Source = "slow_clk";
         Has_Clock = "1";
         Date_Modified = "";
         View
         {
            MESSAGES
            {
            }
            Settings_Summary = " 32-bit PIO using <br>
					
					 input pins with edge type FALLING and interrupt source EDGE
					";
         }
      }
      WIZARD_SCRIPT_ARGUMENTS
      {
         Do_Test_Bench_Wiring = "0";
         Driven_Sim_Value = "0";
         has_tri = "0";
         has_out = "0";
         has_in = "1";
         capture = "1";
         Data_Width = "1";
         reset_value = "0";
         edge_type = "FALLING";
         irq_type = "EDGE";
         bit_clearing_edge_register = "0";
         bit_modifying_output_register = "0";
      }
      HDL_INFO
      {
         Precompiled_Simulation_Library_Files = "";
         Simulation_HDL_Files = "";
         Synthesis_HDL_Files = "__PROJECT_DIRECTORY__/touchPanel_irq_n.v";
         Synthesis_Only_Files = "";
      }
   }
   MODULE lcd_i2c_scl
   {
      SLAVE s1
      {
         PORT_WIRING
         {
            PORT clk
            {
               type = "clk";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT reset_n
            {
               type = "reset_n";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT address
            {
               type = "address";
               width = "2";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT write_n
            {
               type = "write_n";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT writedata
            {
               type = "writedata";
               width = "32";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT chipselect
            {
               type = "chipselect";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT readdata
            {
               type = "readdata";
               width = "32";
               direction = "output";
               Is_Enabled = "1";
            }
         }
         SYSTEM_BUILDER_INFO
         {
            Bus_Type = "avalon";
            Write_Wait_States = "0cycles";
            Read_Wait_States = "1cycles";
            Hold_Time = "0cycles";
            Setup_Time = "0cycles";
            Is_Printable_Device = "0";
            Address_Alignment = "native";
            Well_Behaved_Waitrequest = "0";
            Is_Nonvolatile_Storage = "0";
            Read_Latency = "0";
            Is_Memory_Device = "0";
            Maximum_Pending_Read_Transactions = "0";
            Minimum_Uninterrupted_Run_Length = "1";
            Accepts_Internal_Connections = "1";
            Write_Latency = "0";
            Is_Flash = "0";
            Data_Width = "32";
            Address_Width = "2";
            Maximum_Burst_Size = "1";
            Register_Incoming_Signals = "0";
            Register_Outgoing_Signals = "0";
            Interleave_Bursts = "0";
            Linewrap_Bursts = "0";
            Burst_On_Burst_Boundaries_Only = "0";
            Always_Burst_Max_Burst = "0";
            Is_Big_Endian = "0";
            Is_Enabled = "1";
            MASTERED_BY clock_crossing_bridge/m1
            {
               priority = "1";
               Offset_Address = "0x00000300";
            }
            Base_Address = "0x04000300";
            Has_IRQ = "0";
            Address_Group = "0";
            Is_Readable = "0";
            Is_Writable = "1";
            Is_Base_Locked = "0";
         }
      }
      PORT_WIRING
      {
         PORT out_port
         {
            type = "export";
            width = "1";
            direction = "output";
            Is_Enabled = "1";
         }
         PORT in_port
         {
            direction = "input";
            Is_Enabled = "0";
            width = "32";
         }
         PORT bidir_port
         {
            direction = "inout";
            Is_Enabled = "0";
            width = "32";
         }
      }
      class = "altera_avalon_pio";
      class_version = "7.08120";
      SYSTEM_BUILDER_INFO
      {
         Is_Enabled = "1";
         Instantiate_In_System_Module = "1";
         Wire_Test_Bench_Values = "1";
         Top_Level_Ports_Are_Enumerated = "1";
         Clock_Source = "slow_clk";
         Has_Clock = "1";
         Date_Modified = "";
         View
         {
            MESSAGES
            {
            }
            Settings_Summary = " 32-bit PIO using <br>
					
					
					 output pins";
         }
      }
      WIZARD_SCRIPT_ARGUMENTS
      {
         Do_Test_Bench_Wiring = "0";
         Driven_Sim_Value = "0";
         has_tri = "0";
         has_out = "1";
         has_in = "0";
         capture = "0";
         Data_Width = "1";
         reset_value = "0";
         edge_type = "NONE";
         irq_type = "NONE";
         bit_clearing_edge_register = "0";
         bit_modifying_output_register = "0";
      }
      HDL_INFO
      {
         Precompiled_Simulation_Library_Files = "";
         Simulation_HDL_Files = "";
         Synthesis_HDL_Files = "__PROJECT_DIRECTORY__/lcd_i2c_scl.v";
         Synthesis_Only_Files = "";
      }
   }
   MODULE lcd_i2c_cs
   {
      SLAVE s1
      {
         PORT_WIRING
         {
            PORT clk
            {
               type = "clk";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT reset_n
            {
               type = "reset_n";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT address
            {
               type = "address";
               width = "2";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT write_n
            {
               type = "write_n";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT writedata
            {
               type = "writedata";
               width = "32";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT chipselect
            {
               type = "chipselect";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT readdata
            {
               type = "readdata";
               width = "32";
               direction = "output";
               Is_Enabled = "1";
            }
         }
         SYSTEM_BUILDER_INFO
         {
            Bus_Type = "avalon";
            Write_Wait_States = "0cycles";
            Read_Wait_States = "1cycles";
            Hold_Time = "0cycles";
            Setup_Time = "0cycles";
            Is_Printable_Device = "0";
            Address_Alignment = "native";
            Well_Behaved_Waitrequest = "0";
            Is_Nonvolatile_Storage = "0";
            Read_Latency = "0";
            Is_Memory_Device = "0";
            Maximum_Pending_Read_Transactions = "0";
            Minimum_Uninterrupted_Run_Length = "1";
            Accepts_Internal_Connections = "1";
            Write_Latency = "0";
            Is_Flash = "0";
            Data_Width = "32";
            Address_Width = "2";
            Maximum_Burst_Size = "1";
            Register_Incoming_Signals = "0";
            Register_Outgoing_Signals = "0";
            Interleave_Bursts = "0";
            Linewrap_Bursts = "0";
            Burst_On_Burst_Boundaries_Only = "0";
            Always_Burst_Max_Burst = "0";
            Is_Big_Endian = "0";
            Is_Enabled = "1";
            MASTERED_BY clock_crossing_bridge/m1
            {
               priority = "1";
               Offset_Address = "0x00000380";
            }
            Base_Address = "0x04000380";
            Has_IRQ = "0";
            Address_Group = "0";
            Is_Readable = "0";
            Is_Writable = "1";
            Is_Base_Locked = "0";
         }
      }
      PORT_WIRING
      {
         PORT out_port
         {
            type = "export";
            width = "1";
            direction = "output";
            Is_Enabled = "1";
         }
         PORT in_port
         {
            direction = "input";
            Is_Enabled = "0";
            width = "32";
         }
         PORT bidir_port
         {
            direction = "inout";
            Is_Enabled = "0";
            width = "32";
         }
      }
      class = "altera_avalon_pio";
      class_version = "7.08120";
      SYSTEM_BUILDER_INFO
      {
         Is_Enabled = "1";
         Instantiate_In_System_Module = "1";
         Wire_Test_Bench_Values = "1";
         Top_Level_Ports_Are_Enumerated = "1";
         Clock_Source = "slow_clk";
         Has_Clock = "1";
         Date_Modified = "";
         View
         {
            MESSAGES
            {
            }
            Settings_Summary = " 32-bit PIO using <br>
					
					
					 output pins";
         }
      }
      WIZARD_SCRIPT_ARGUMENTS
      {
         Do_Test_Bench_Wiring = "0";
         Driven_Sim_Value = "0";
         has_tri = "0";
         has_out = "1";
         has_in = "0";
         capture = "0";
         Data_Width = "1";
         reset_value = "0";
         edge_type = "NONE";
         irq_type = "NONE";
         bit_clearing_edge_register = "0";
         bit_modifying_output_register = "0";
      }
      HDL_INFO
      {
         Precompiled_Simulation_Library_Files = "";
         Simulation_HDL_Files = "";
         Synthesis_HDL_Files = "__PROJECT_DIRECTORY__/lcd_i2c_cs.v";
         Synthesis_Only_Files = "";
      }
   }
   MODULE lcd_i2c_dat
   {
      SLAVE s1
      {
         PORT_WIRING
         {
            PORT clk
            {
               type = "clk";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT reset_n
            {
               type = "reset_n";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT address
            {
               type = "address";
               width = "2";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT write_n
            {
               type = "write_n";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT writedata
            {
               type = "writedata";
               width = "32";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT chipselect
            {
               type = "chipselect";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT readdata
            {
               type = "readdata";
               width = "32";
               direction = "output";
               Is_Enabled = "1";
            }
         }
         SYSTEM_BUILDER_INFO
         {
            Bus_Type = "avalon";
            Write_Wait_States = "0cycles";
            Read_Wait_States = "1cycles";
            Hold_Time = "0cycles";
            Setup_Time = "0cycles";
            Is_Printable_Device = "0";
            Address_Alignment = "native";
            Well_Behaved_Waitrequest = "0";
            Is_Nonvolatile_Storage = "0";
            Read_Latency = "0";
            Is_Memory_Device = "0";
            Maximum_Pending_Read_Transactions = "0";
            Minimum_Uninterrupted_Run_Length = "1";
            Accepts_Internal_Connections = "1";
            Write_Latency = "0";
            Is_Flash = "0";
            Data_Width = "32";
            Address_Width = "2";
            Maximum_Burst_Size = "1";
            Register_Incoming_Signals = "0";
            Register_Outgoing_Signals = "0";
            Interleave_Bursts = "0";
            Linewrap_Bursts = "0";
            Burst_On_Burst_Boundaries_Only = "0";
            Always_Burst_Max_Burst = "0";
            Is_Big_Endian = "0";
            Is_Enabled = "1";
            MASTERED_BY clock_crossing_bridge/m1
            {
               priority = "1";
               Offset_Address = "0x00000400";
            }
            Base_Address = "0x04000400";
            Has_IRQ = "0";
            Address_Group = "0";
            Is_Readable = "1";
            Is_Writable = "1";
            Is_Base_Locked = "0";
         }
      }
      PORT_WIRING
      {
         PORT bidir_port
         {
            type = "export";
            width = "1";
            direction = "inout";
            Is_Enabled = "1";
         }
         PORT in_port
         {
            direction = "input";
            Is_Enabled = "0";
            width = "32";
         }
         PORT out_port
         {
            direction = "output";
            Is_Enabled = "0";
            width = "32";
         }
      }
      class = "altera_avalon_pio";
      class_version = "7.08120";
      SYSTEM_BUILDER_INFO
      {
         Is_Enabled = "1";
         Instantiate_In_System_Module = "1";
         Wire_Test_Bench_Values = "1";
         Top_Level_Ports_Are_Enumerated = "1";
         Clock_Source = "slow_clk";
         Has_Clock = "1";
         Date_Modified = "";
         View
         {
            MESSAGES
            {
            }
            Settings_Summary = " 32-bit PIO using <br>
					 tri-state pins with edge type NONE and interrupt source NONE
					
					";
         }
      }
      WIZARD_SCRIPT_ARGUMENTS
      {
         Do_Test_Bench_Wiring = "0";
         Driven_Sim_Value = "0";
         has_tri = "1";
         has_out = "0";
         has_in = "0";
         capture = "0";
         Data_Width = "1";
         reset_value = "0";
         edge_type = "NONE";
         irq_type = "NONE";
         bit_clearing_edge_register = "0";
         bit_modifying_output_register = "0";
      }
      HDL_INFO
      {
         Precompiled_Simulation_Library_Files = "";
         Simulation_HDL_Files = "";
         Synthesis_HDL_Files = "__PROJECT_DIRECTORY__/lcd_i2c_dat.v";
         Synthesis_Only_Files = "";
      }
   }
   MODULE pio_id_eeprom_dat
   {
      SLAVE s1
      {
         PORT_WIRING
         {
            PORT clk
            {
               type = "clk";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT reset_n
            {
               type = "reset_n";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT address
            {
               type = "address";
               width = "2";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT write_n
            {
               type = "write_n";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT writedata
            {
               type = "writedata";
               width = "32";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT chipselect
            {
               type = "chipselect";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT readdata
            {
               type = "readdata";
               width = "32";
               direction = "output";
               Is_Enabled = "1";
            }
         }
         SYSTEM_BUILDER_INFO
         {
            Bus_Type = "avalon";
            Write_Wait_States = "0cycles";
            Read_Wait_States = "1cycles";
            Hold_Time = "0cycles";
            Setup_Time = "0cycles";
            Is_Printable_Device = "0";
            Address_Alignment = "native";
            Well_Behaved_Waitrequest = "0";
            Is_Nonvolatile_Storage = "0";
            Read_Latency = "0";
            Is_Memory_Device = "0";
            Maximum_Pending_Read_Transactions = "0";
            Minimum_Uninterrupted_Run_Length = "1";
            Accepts_Internal_Connections = "1";
            Write_Latency = "0";
            Is_Flash = "0";
            Data_Width = "32";
            Address_Width = "2";
            Maximum_Burst_Size = "1";
            Register_Incoming_Signals = "0";
            Register_Outgoing_Signals = "0";
            Interleave_Bursts = "0";
            Linewrap_Bursts = "0";
            Burst_On_Burst_Boundaries_Only = "0";
            Always_Burst_Max_Burst = "0";
            Is_Big_Endian = "0";
            Is_Enabled = "1";
            MASTERED_BY clock_crossing_bridge/m1
            {
               priority = "1";
               Offset_Address = "0x00000480";
            }
            Base_Address = "0x04000480";
            Has_IRQ = "0";
            Address_Group = "0";
            Is_Readable = "1";
            Is_Writable = "1";
            Is_Base_Locked = "0";
         }
      }
      PORT_WIRING
      {
         PORT bidir_port
         {
            type = "export";
            width = "1";
            direction = "inout";
            Is_Enabled = "1";
         }
         PORT in_port
         {
            direction = "input";
            Is_Enabled = "0";
            width = "32";
         }
         PORT out_port
         {
            direction = "output";
            Is_Enabled = "0";
            width = "32";
         }
      }
      class = "altera_avalon_pio";
      class_version = "7.08120";
      SYSTEM_BUILDER_INFO
      {
         Is_Enabled = "1";
         Instantiate_In_System_Module = "1";
         Wire_Test_Bench_Values = "1";
         Top_Level_Ports_Are_Enumerated = "1";
         Clock_Source = "slow_clk";
         Has_Clock = "1";
         Date_Modified = "";
         View
         {
            MESSAGES
            {
            }
            Settings_Summary = " 32-bit PIO using <br>
					 tri-state pins with edge type NONE and interrupt source NONE
					
					";
         }
      }
      WIZARD_SCRIPT_ARGUMENTS
      {
         Do_Test_Bench_Wiring = "0";
         Driven_Sim_Value = "0";
         has_tri = "1";
         has_out = "0";
         has_in = "0";
         capture = "0";
         Data_Width = "1";
         reset_value = "0";
         edge_type = "NONE";
         irq_type = "NONE";
         bit_clearing_edge_register = "0";
         bit_modifying_output_register = "0";
      }
      HDL_INFO
      {
         Precompiled_Simulation_Library_Files = "";
         Simulation_HDL_Files = "";
         Synthesis_HDL_Files = "__PROJECT_DIRECTORY__/pio_id_eeprom_dat.v";
         Synthesis_Only_Files = "";
      }
   }
   MODULE pio_id_eeprom_scl
   {
      SLAVE s1
      {
         PORT_WIRING
         {
            PORT clk
            {
               type = "clk";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT reset_n
            {
               type = "reset_n";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT address
            {
               type = "address";
               width = "2";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT write_n
            {
               type = "write_n";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT writedata
            {
               type = "writedata";
               width = "32";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT chipselect
            {
               type = "chipselect";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT readdata
            {
               type = "readdata";
               width = "32";
               direction = "output";
               Is_Enabled = "1";
            }
         }
         SYSTEM_BUILDER_INFO
         {
            Bus_Type = "avalon";
            Write_Wait_States = "0cycles";
            Read_Wait_States = "1cycles";
            Hold_Time = "0cycles";
            Setup_Time = "0cycles";
            Is_Printable_Device = "0";
            Address_Alignment = "native";
            Well_Behaved_Waitrequest = "0";
            Is_Nonvolatile_Storage = "0";
            Read_Latency = "0";
            Is_Memory_Device = "0";
            Maximum_Pending_Read_Transactions = "0";
            Minimum_Uninterrupted_Run_Length = "1";
            Accepts_Internal_Connections = "1";
            Write_Latency = "0";
            Is_Flash = "0";
            Data_Width = "32";
            Address_Width = "2";
            Maximum_Burst_Size = "1";
            Register_Incoming_Signals = "0";
            Register_Outgoing_Signals = "0";
            Interleave_Bursts = "0";
            Linewrap_Bursts = "0";
            Burst_On_Burst_Boundaries_Only = "0";
            Always_Burst_Max_Burst = "0";
            Is_Big_Endian = "0";
            Is_Enabled = "1";
            MASTERED_BY clock_crossing_bridge/m1
            {
               priority = "1";
               Offset_Address = "0x00000500";
            }
            Base_Address = "0x04000500";
            Has_IRQ = "0";
            Address_Group = "0";
            Is_Readable = "0";
            Is_Writable = "1";
            Is_Base_Locked = "0";
         }
      }
      PORT_WIRING
      {
         PORT out_port
         {
            type = "export";
            width = "1";
            direction = "output";
            Is_Enabled = "1";
         }
         PORT in_port
         {
            direction = "input";
            Is_Enabled = "0";
            width = "32";
         }
         PORT bidir_port
         {
            direction = "inout";
            Is_Enabled = "0";
            width = "32";
         }
      }
      class = "altera_avalon_pio";
      class_version = "7.08120";
      SYSTEM_BUILDER_INFO
      {
         Is_Enabled = "1";
         Instantiate_In_System_Module = "1";
         Wire_Test_Bench_Values = "1";
         Top_Level_Ports_Are_Enumerated = "1";
         Clock_Source = "slow_clk";
         Has_Clock = "1";
         Date_Modified = "";
         View
         {
            MESSAGES
            {
            }
            Settings_Summary = " 32-bit PIO using <br>
					
					
					 output pins";
         }
      }
      WIZARD_SCRIPT_ARGUMENTS
      {
         Do_Test_Bench_Wiring = "0";
         Driven_Sim_Value = "0";
         has_tri = "0";
         has_out = "1";
         has_in = "0";
         capture = "0";
         Data_Width = "1";
         reset_value = "0";
         edge_type = "NONE";
         irq_type = "NONE";
         bit_clearing_edge_register = "0";
         bit_modifying_output_register = "0";
      }
      HDL_INFO
      {
         Precompiled_Simulation_Library_Files = "";
         Simulation_HDL_Files = "";
         Synthesis_HDL_Files = "__PROJECT_DIRECTORY__/pio_id_eeprom_scl.v";
         Synthesis_Only_Files = "";
      }
   }
   MODULE descriptor_memory
   {
      SLAVE s1
      {
         PORT_WIRING
         {
            PORT clk
            {
               type = "clk";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT reset
            {
               type = "reset";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT address
            {
               type = "address";
               width = "10";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT chipselect
            {
               type = "chipselect";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT clken
            {
               type = "clken";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
               default_value = "1'b1";
            }
            PORT readdata
            {
               type = "readdata";
               width = "32";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT write
            {
               type = "write";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT writedata
            {
               type = "writedata";
               width = "32";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT byteenable
            {
               type = "byteenable";
               width = "4";
               direction = "input";
               Is_Enabled = "1";
            }
         }
         SYSTEM_BUILDER_INFO
         {
            Bus_Type = "avalon";
            Write_Wait_States = "0cycles";
            Read_Wait_States = "0cycles";
            Hold_Time = "0cycles";
            Setup_Time = "0cycles";
            Is_Printable_Device = "0";
            Address_Alignment = "dynamic";
            Well_Behaved_Waitrequest = "0";
            Is_Nonvolatile_Storage = "0";
            Address_Span = "4096";
            Read_Latency = "1";
            Is_Memory_Device = "1";
            Maximum_Pending_Read_Transactions = "0";
            Minimum_Uninterrupted_Run_Length = "1";
            Accepts_Internal_Connections = "1";
            Write_Latency = "0";
            Is_Flash = "0";
            Data_Width = "32";
            Address_Width = "10";
            Maximum_Burst_Size = "1";
            Register_Incoming_Signals = "0";
            Register_Outgoing_Signals = "0";
            Interleave_Bursts = "0";
            Linewrap_Bursts = "0";
            Burst_On_Burst_Boundaries_Only = "0";
            Always_Burst_Max_Burst = "0";
            Is_Big_Endian = "0";
            Is_Enabled = "1";
            MASTERED_BY pipeline_bridge/m1
            {
               priority = "1";
               Offset_Address = "0x04400000";
            }
            Clock_Source = "system_clk";
            Has_Clock = "1";
            Base_Address = "0x04400000";
            Address_Group = "0";
            Has_IRQ = "0";
            Is_Channel = "1";
            Is_Writable = "1";
            Is_Base_Locked = "0";
         }
      }
      SLAVE s2
      {
         PORT_WIRING
         {
            PORT clk2
            {
               type = "clk";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT reset2
            {
               type = "reset";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT address2
            {
               type = "address";
               width = "10";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT chipselect2
            {
               type = "chipselect";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT clken2
            {
               type = "clken";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
               default_value = "1'b1";
            }
            PORT readdata2
            {
               type = "readdata";
               width = "32";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT write2
            {
               type = "write";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT writedata2
            {
               type = "writedata";
               width = "32";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT byteenable2
            {
               type = "byteenable";
               width = "4";
               direction = "input";
               Is_Enabled = "1";
            }
         }
         SYSTEM_BUILDER_INFO
         {
            Bus_Type = "avalon";
            Write_Wait_States = "0cycles";
            Read_Wait_States = "0cycles";
            Hold_Time = "0cycles";
            Setup_Time = "0cycles";
            Is_Printable_Device = "0";
            Address_Alignment = "dynamic";
            Well_Behaved_Waitrequest = "0";
            Is_Nonvolatile_Storage = "0";
            Address_Span = "4096";
            Read_Latency = "1";
            Is_Memory_Device = "1";
            Maximum_Pending_Read_Transactions = "0";
            Minimum_Uninterrupted_Run_Length = "1";
            Accepts_Internal_Connections = "1";
            Write_Latency = "0";
            Is_Flash = "0";
            Data_Width = "32";
            Address_Width = "10";
            Maximum_Burst_Size = "1";
            Register_Incoming_Signals = "0";
            Register_Outgoing_Signals = "0";
            Interleave_Bursts = "0";
            Linewrap_Bursts = "0";
            Burst_On_Burst_Boundaries_Only = "0";
            Always_Burst_Max_Burst = "0";
            Is_Big_Endian = "0";
            Is_Enabled = "1";
            MASTERED_BY lcd_sgdma/descriptor_read
            {
               priority = "1";
               Offset_Address = "0x04400000";
            }
            MASTERED_BY lcd_sgdma/descriptor_write
            {
               priority = "1";
               Offset_Address = "0x04400000";
            }
            Clock_Source = "system_clk";
            Has_Clock = "1";
            Base_Address = "0x00000000";
            Address_Group = "0";
            Has_IRQ = "0";
            Is_Channel = "1";
            Is_Writable = "1";
         }
      }
      iss_model_name = "altera_memory";
      WIZARD_SCRIPT_ARGUMENTS
      {
         allow_mram_sim_contents_only_file = "0";
         ram_block_type = "AUTO";
         init_contents_file = "descriptor_memory";
         non_default_init_file_enabled = "0";
         gui_ram_block_type = "Automatic";
         device_family = "Cyclone III";
         Writeable = "1";
         dual_port = "1";
         single_clock_operation = "0";
         Size_Value = "4096";
         Size_Multiple = "1";
         use_shallow_mem_blocks = "0";
         init_mem_content = "0";
         allow_in_system_memory_content_editor = "0";
         instance_id = "NONE";
         read_during_write_mode = "DONT_CARE";
         sim_meminit_only_filename = "0";
         ignore_auto_block_type_assignment = "1";
         MAKE
         {
            TARGET delete_placeholder_warning
            {
               descriptor_memory
               {
                  Command1 = "rm -f $(SIMDIR)/contents_file_warning.txt";
                  Is_Phony = "1";
                  Target_File = "do_delete_placeholder_warning";
               }
            }
            TARGET hex
            {
               descriptor_memory
               {
                  Command1 = "@echo Post-processing to create $(notdir $@)";
                  Command2 = "elf2hex $(ELF) 0x04400000 0x4400FFF --width=32 $(QUARTUS_PROJECT_DIR)/descriptor_memory.hex --create-lanes=0 ";
                  Dependency = "$(ELF)";
                  Target_File = "$(QUARTUS_PROJECT_DIR)/descriptor_memory.hex";
               }
            }
            TARGET sim
            {
               descriptor_memory
               {
                  Command1 = "if [ ! -d $(SIMDIR) ]; then mkdir $(SIMDIR) ; fi";
                  Command2 = "@echo Hardware simulation is not enabled for the target SOPC Builder system. Skipping creation of hardware simulation model contents and simulation symbol files. \(Note: This does not affect the instruction set simulator.\)";
                  Command3 = "touch $(SIMDIR)/dummy_file";
                  Dependency = "$(ELF)";
                  Target_File = "$(SIMDIR)/dummy_file";
               }
            }
         }
         contents_info = "";
      }
      SIMULATION
      {
         DISPLAY
         {
            SIGNAL a
            {
               name = "chipselect";
               conditional = "1";
            }
            SIGNAL c
            {
               name = "address";
               radix = "hexadecimal";
            }
            SIGNAL d
            {
               name = "byteenable";
               radix = "binary";
               conditional = "1";
            }
            SIGNAL e
            {
               name = "readdata";
               radix = "hexadecimal";
            }
            SIGNAL b
            {
               name = "write";
               conditional = "1";
            }
            SIGNAL f
            {
               name = "writedata";
               radix = "hexadecimal";
               conditional = "1";
            }
            SIGNAL g
            {
               name = "chipselect2";
               conditional = "1";
            }
            SIGNAL i
            {
               name = "address2";
               radix = "hexadecimal";
            }
            SIGNAL j
            {
               name = "byteenable2";
               radix = "binary";
               conditional = "1";
            }
            SIGNAL k
            {
               name = "readdata2";
               radix = "hexadecimal";
            }
            SIGNAL h
            {
               name = "write2";
               conditional = "1";
            }
            SIGNAL l
            {
               name = "writedata2";
               radix = "hexadecimal";
               conditional = "1";
            }
         }
      }
      SYSTEM_BUILDER_INFO
      {
         Prohibited_Device_Family = "MERCURY, APEX20K, APEX20KE, APEX20KC, APEXII, ACEX1K, FLEX10KE, EXCALIBUR_ARM, MAXII";
         Instantiate_In_System_Module = "1";
         Is_Enabled = "1";
         Default_Module_Name = "onchip_memory";
         Top_Level_Ports_Are_Enumerated = "1";
         Clock_Source = "ext_clk_one";
         View
         {
            MESSAGES
            {
            }
         }
      }
      class = "altera_avalon_onchip_memory2";
      class_version = "7.08120";
      HDL_INFO
      {
         Precompiled_Simulation_Library_Files = "";
         Simulation_HDL_Files = "";
         Synthesis_HDL_Files = "__PROJECT_DIRECTORY__/descriptor_memory.v";
         Synthesis_Only_Files = "";
      }
      PORT_WIRING
      {
      }
   }
   MODULE frame_buffer_pipeline_bridge
   {
      SLAVE s1
      {
         PORT_WIRING
         {
            PORT clk
            {
               type = "clk";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT reset_n
            {
               type = "reset_n";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT s1_address
            {
               type = "address";
               width = "23";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT s1_nativeaddress
            {
               type = "nativeaddress";
               width = "23";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT s1_burstcount
            {
               type = "burstcount";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT s1_byteenable
            {
               type = "byteenable";
               width = "4";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT s1_chipselect
            {
               type = "chipselect";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT s1_debugaccess
            {
               type = "debugaccess";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT s1_read
            {
               type = "read";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT s1_write
            {
               type = "write";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT s1_writedata
            {
               type = "writedata";
               width = "32";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT s1_endofpacket
            {
               type = "endofpacket";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT s1_readdata
            {
               type = "readdata";
               width = "32";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT s1_readdatavalid
            {
               type = "readdatavalid";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT s1_waitrequest
            {
               type = "waitrequest";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT s1_arbiterlock
            {
               Is_Enabled = "1";
               direction = "input";
               type = "arbiterlock";
               width = "1";
            }
            PORT s1_arbiterlock2
            {
               Is_Enabled = "1";
               direction = "input";
               type = "arbiterlock2";
               width = "1";
            }
            PORT s1_clk
            {
               Is_Enabled = "0";
               direction = "input";
               type = "clk";
               width = "1";
            }
            PORT s1_flush
            {
               Is_Enabled = "0";
               direction = "input";
               type = "flush";
               width = "1";
            }
            PORT s1_reset_n
            {
               Is_Enabled = "0";
               direction = "input";
               type = "reset_n";
               width = "1";
            }
         }
         SYSTEM_BUILDER_INFO
         {
            Bus_Type = "avalon";
            Read_Wait_States = "peripheral_controlled";
            Write_Wait_States = "peripheral_controlled";
            Hold_Time = "0cycles";
            Setup_Time = "0cycles";
            Is_Printable_Device = "0";
            Address_Alignment = "dynamic";
            Well_Behaved_Waitrequest = "0";
            Is_Nonvolatile_Storage = "0";
            Address_Span = "33554432";
            Read_Latency = "0";
            Is_Memory_Device = "0";
            Maximum_Pending_Read_Transactions = "51";
            Minimum_Uninterrupted_Run_Length = "1";
            Accepts_Internal_Connections = "1";
            Write_Latency = "0";
            Is_Flash = "0";
            Data_Width = "32";
            Address_Width = "23";
            Opaque_Bridges_To = "m1";
            Maximum_Burst_Size = "1";
            Register_Incoming_Signals = "0";
            Register_Outgoing_Signals = "0";
            Interleave_Bursts = "0";
            Linewrap_Bursts = "0";
            Burst_On_Burst_Boundaries_Only = "0";
            Always_Burst_Max_Burst = "0";
            Is_Big_Endian = "0";
            Is_Enabled = "1";
            MASTERED_BY lcd_sgdma/m_read
            {
               priority = "100";
               Offset_Address = "0x00000000";
            }
            MASTERED_BY pipeline_bridge/m1
            {
               priority = "1";
               Offset_Address = "0x00000000";
            }
            MASTERED_BY accelerator_mandelbrot_hw_draw_int_mandelbrot_managed_instance/accelerator_mandelbrot_hw_draw_int_mandelbrot_master_resource1
            {
               priority = "1";
               Offset_Address = "0x00000000";
            }
            Base_Address = "0x00000000";
            Has_IRQ = "0";
            Address_Group = "0";
            Is_Base_Locked = "0";
            MASTERED_BY accelerator_mandelbrot_hw_draw_int_mandelbrot/accelerator_mandelbrot_hw_draw_int_mandelbrot_master_resource1
            {
               priority = "1";
            }
         }
      }
      MASTER m1
      {
         SYSTEM_BUILDER_INFO
         {
            Bus_Type = "avalon";
            Is_Asynchronous = "0";
            DBS_Big_Endian = "0";
            Adapts_To = "";
            Do_Stream_Reads = "0";
            Do_Stream_Writes = "0";
            Max_Address_Width = "32";
            Data_Width = "32";
            Address_Width = "25";
            Opaque_Bridges_To = "s1";
            Maximum_Burst_Size = "1";
            Register_Incoming_Signals = "0";
            Register_Outgoing_Signals = "0";
            Interleave_Bursts = "0";
            Linewrap_Bursts = "0";
            Burst_On_Burst_Boundaries_Only = "0";
            Always_Burst_Max_Burst = "0";
            Is_Big_Endian = "0";
            Is_Enabled = "1";
         }
         PORT_WIRING
         {
            PORT m1_address
            {
               type = "address";
               width = "25";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT m1_nativeaddress
            {
               type = "nativeaddress";
               width = "23";
               direction = "output";
               Is_Enabled = "0";
            }
            PORT m1_burstcount
            {
               type = "burstcount";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT m1_byteenable
            {
               type = "byteenable";
               width = "4";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT m1_chipselect
            {
               type = "chipselect";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT m1_debugaccess
            {
               type = "debugaccess";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT m1_read
            {
               type = "read";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT m1_write
            {
               type = "write";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT m1_writedata
            {
               type = "writedata";
               width = "32";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT m1_endofpacket
            {
               type = "endofpacket";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT m1_readdata
            {
               type = "readdata";
               width = "32";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT m1_readdatavalid
            {
               type = "readdatavalid";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT m1_waitrequest
            {
               type = "waitrequest";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT m1_arbiterlock
            {
               Is_Enabled = "0";
               direction = "output";
               type = "arbiterlock";
               width = "1";
            }
            PORT m1_arbiterlock2
            {
               Is_Enabled = "0";
               direction = "output";
               type = "arbiterlock2";
               width = "1";
            }
            PORT m1_clk
            {
               Is_Enabled = "0";
               direction = "input";
               type = "clk";
               width = "1";
            }
            PORT m1_reset_n
            {
               Is_Enabled = "0";
               direction = "input";
               type = "reset_n";
               width = "1";
            }
         }
         MEMORY_MAP
         {
            Entry ddr_sdram_clock_crossing_bridge/s1
            {
               address = "0x00000000";
               span = "0x02000000";
               is_bridge = "1";
            }
            Entry frame_buffer/s1
            {
               address = "0x00000000";
               span = "0x02000000";
               is_bridge = "0";
            }
         }
      }
      WIZARD_SCRIPT_ARGUMENTS
      {
         Is_Downstream = "1";
         Is_Upstream = "1";
         Is_Waitrequest = "1";
         Enable_Arbiterlock = "0";
      }
      class = "altera_avalon_pipeline_bridge";
      class_version = "7.08120";
      SYSTEM_BUILDER_INFO
      {
         Is_Enabled = "1";
         Clock_Source = "system_clk";
         Has_Clock = "1";
         Instantiate_In_System_Module = "1";
         Is_Bridge = "1";
         Top_Level_Ports_Are_Enumerated = "1";
         View
         {
            MESSAGES
            {
            }
         }
      }
      HDL_INFO
      {
         Precompiled_Simulation_Library_Files = "";
         Simulation_HDL_Files = "";
         Synthesis_HDL_Files = "__PROJECT_DIRECTORY__/frame_buffer_pipeline_bridge.v";
         Synthesis_Only_Files = "";
      }
      PORT_WIRING
      {
      }
   }
   MODULE clock_crossing_bridge
   {
      SLAVE s1
      {
         PORT_WIRING
         {
            PORT slave_clk
            {
               type = "clk";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT slave_reset_n
            {
               type = "reset_n";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT slave_address
            {
               type = "address";
               width = "9";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT slave_nativeaddress
            {
               type = "nativeaddress";
               width = "9";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT slave_read
            {
               type = "read";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT slave_write
            {
               type = "write";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT slave_writedata
            {
               type = "writedata";
               width = "32";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT slave_byteenable
            {
               type = "byteenable";
               width = "4";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT slave_readdata
            {
               type = "readdata";
               width = "32";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT slave_readdatavalid
            {
               type = "readdatavalid";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT slave_waitrequest
            {
               type = "waitrequest";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT slave_endofpacket
            {
               Is_Enabled = "1";
               direction = "output";
               type = "endofpacket";
               width = "1";
            }
         }
         SYSTEM_BUILDER_INFO
         {
            Bus_Type = "avalon";
            Read_Wait_States = "peripheral_controlled";
            Write_Wait_States = "peripheral_controlled";
            Hold_Time = "0cycles";
            Setup_Time = "0cycles";
            Is_Printable_Device = "0";
            Address_Alignment = "dynamic";
            Well_Behaved_Waitrequest = "0";
            Is_Nonvolatile_Storage = "0";
            Address_Span = "2048";
            Read_Latency = "0";
            Is_Memory_Device = "0";
            Maximum_Pending_Read_Transactions = "16";
            Minimum_Uninterrupted_Run_Length = "1";
            Accepts_Internal_Connections = "1";
            Write_Latency = "0";
            Is_Flash = "0";
            Data_Width = "32";
            Address_Width = "9";
            Opaque_Bridges_To = "m1";
            Maximum_Burst_Size = "1";
            Register_Incoming_Signals = "0";
            Register_Outgoing_Signals = "0";
            Interleave_Bursts = "0";
            Linewrap_Bursts = "0";
            Burst_On_Burst_Boundaries_Only = "0";
            Always_Burst_Max_Burst = "0";
            Is_Big_Endian = "0";
            Is_Enabled = "1";
            MASTERED_BY pipeline_bridge/m1
            {
               priority = "1";
               Offset_Address = "0x04000000";
            }
            Clock_Source = "system_clk";
            Has_Clock = "1";
            Base_Address = "0x04000000";
            Address_Group = "0";
            Is_Base_Locked = "0";
         }
      }
      MASTER m1
      {
         PORT_WIRING
         {
            PORT master_clk
            {
               type = "clk";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT master_reset_n
            {
               type = "reset_n";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT master_address
            {
               type = "address";
               width = "11";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT master_nativeaddress
            {
               type = "nativeaddress";
               width = "9";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT master_read
            {
               type = "read";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT master_write
            {
               type = "write";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT master_writedata
            {
               type = "writedata";
               width = "32";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT master_byteenable
            {
               type = "byteenable";
               width = "4";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT master_readdata
            {
               type = "readdata";
               width = "32";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT master_readdatavalid
            {
               type = "readdatavalid";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT master_waitrequest
            {
               type = "waitrequest";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT master_endofpacket
            {
               Is_Enabled = "1";
               direction = "input";
               type = "endofpacket";
               width = "1";
            }
         }
         SYSTEM_BUILDER_INFO
         {
            Bus_Type = "avalon";
            Is_Asynchronous = "0";
            DBS_Big_Endian = "0";
            Adapts_To = "";
            Do_Stream_Reads = "0";
            Do_Stream_Writes = "0";
            Max_Address_Width = "32";
            Data_Width = "32";
            Address_Width = "11";
            Opaque_Bridges_To = "s1";
            Maximum_Burst_Size = "1";
            Register_Incoming_Signals = "0";
            Register_Outgoing_Signals = "0";
            Interleave_Bursts = "0";
            Linewrap_Bursts = "0";
            Burst_On_Burst_Boundaries_Only = "0";
            Always_Burst_Max_Burst = "0";
            Is_Big_Endian = "0";
            Is_Enabled = "1";
            Clock_Source = "slow_clk";
            Has_Clock = "1";
         }
         MEMORY_MAP
         {
            Entry jtag_uart/avalon_jtag_slave
            {
               address = "0x00000580";
               span = "0x00000040";
               is_bridge = "0";
            }
            Entry push_buttons/s1
            {
               address = "0x00000200";
               span = "0x00000080";
               is_bridge = "0";
            }
            Entry system_tick/s1
            {
               address = "0x00000000";
               span = "0x00000100";
               is_bridge = "0";
            }
            Entry sysid/control_slave
            {
               address = "0x000005c0";
               span = "0x00000040";
               is_bridge = "0";
            }
            Entry touchPanel_spi/spi_control_port
            {
               address = "0x00000100";
               span = "0x00000100";
               is_bridge = "0";
            }
            Entry touchPanel_irq_n/s1
            {
               address = "0x00000280";
               span = "0x00000080";
               is_bridge = "0";
            }
            Entry lcd_i2c_scl/s1
            {
               address = "0x00000300";
               span = "0x00000080";
               is_bridge = "0";
            }
            Entry lcd_i2c_cs/s1
            {
               address = "0x00000380";
               span = "0x00000080";
               is_bridge = "0";
            }
            Entry lcd_i2c_dat/s1
            {
               address = "0x00000400";
               span = "0x00000080";
               is_bridge = "0";
            }
            Entry pio_id_eeprom_dat/s1
            {
               address = "0x00000480";
               span = "0x00000080";
               is_bridge = "0";
            }
            Entry pio_id_eeprom_scl/s1
            {
               address = "0x00000500";
               span = "0x00000080";
               is_bridge = "0";
            }
         }
      }
      class = "altera_avalon_clock_crossing";
      class_version = "7.08120";
      iss_model_name = "altera_avalon_clock_crossing";
      WIZARD_SCRIPT_ARGUMENTS
      {
         Upstream_FIFO_Depth = "8";
         Downstream_FIFO_Depth = "8";
         Data_Width = "32";
         Native_Address_Width = "9";
         Use_Byte_Enable = "1";
         Use_Burst_Count = "0";
         Maximum_Burst_Size = "8";
         Upstream_Use_Register = "0";
         Downstream_Use_Register = "0";
         Slave_Synchronizer_Depth = "3";
         Master_Synchronizer_Depth = "3";
         Device_Family = "CYCLONEIII";
      }
      SYSTEM_BUILDER_INFO
      {
         Instantiate_In_System_Module = "1";
         Is_Enabled = "1";
         Top_Level_Ports_Are_Enumerated = "1";
         Has_Clock = "0";
         Is_Bridge = "1";
         View
         {
            MESSAGES
            {
            }
         }
      }
      HDL_INFO
      {
         Precompiled_Simulation_Library_Files = "";
         Simulation_HDL_Files = "";
         Synthesis_HDL_Files = "__PROJECT_DIRECTORY__/clock_crossing_bridge.v";
         Synthesis_Only_Files = "";
      }
      PORT_WIRING
      {
      }
   }
   MODULE dummy_master_inst
   {
      MASTER m0
      {
         PORT_WIRING
         {
            PORT address
            {
               type = "address";
               width = "32";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT writedata
            {
               type = "writedata";
               width = "32";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT write
            {
               type = "write";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT waitrequest
            {
               type = "waitrequest";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
         }
         SYSTEM_BUILDER_INFO
         {
            Bus_Type = "avalon";
            Is_Asynchronous = "0";
            DBS_Big_Endian = "0";
            Adapts_To = "";
            Do_Stream_Reads = "0";
            Do_Stream_Writes = "0";
            Max_Address_Width = "32";
            Data_Width = "32";
            Address_Width = "32";
            Maximum_Burst_Size = "1";
            Register_Incoming_Signals = "0";
            Register_Outgoing_Signals = "0";
            Interleave_Bursts = "0";
            Linewrap_Bursts = "0";
            Burst_On_Burst_Boundaries_Only = "0";
            Always_Burst_Max_Burst = "0";
            Is_Big_Endian = "0";
            Is_Enabled = "1";
         }
         MEMORY_MAP
         {
            Entry colour_lookup_table/s2
            {
               address = "0x04401c00";
               span = "0x00000400";
               is_bridge = "0";
            }
         }
      }
      class = "no_legacy_module";
      class_version = "7.08120";
      gtf_class_name = "dummy_master";
      gtf_class_version = "1.0";
      SYSTEM_BUILDER_INFO
      {
         Do_Not_Generate = "1";
         Instantiate_In_System_Module = "1";
         Is_Bridge = "0";
         Is_Enabled = "1";
         Clock_Source = "system_clk";
         Has_Clock = "1";
         View
         {
            MESSAGES
            {
            }
         }
      }
      HDL_INFO
      {
         Simulation_HDL_Files = "__PROJECT_DIRECTORY__/dummy_master/dummy_master.v,__PROJECT_DIRECTORY__/dummy_master_inst.v";
      }
      WIZARD_SCRIPT_ARGUMENTS
      {
      }
   }
   MODULE colour_lookup_table
   {
      SLAVE s1
      {
         PORT_WIRING
         {
            PORT clk
            {
               type = "clk";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT reset
            {
               type = "reset";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT address
            {
               type = "address";
               width = "8";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT chipselect
            {
               type = "chipselect";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT clken
            {
               type = "clken";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
               default_value = "1'b1";
            }
            PORT readdata
            {
               type = "readdata";
               width = "32";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT write
            {
               type = "write";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT writedata
            {
               type = "writedata";
               width = "32";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT byteenable
            {
               type = "byteenable";
               width = "4";
               direction = "input";
               Is_Enabled = "1";
            }
         }
         SYSTEM_BUILDER_INFO
         {
            Bus_Type = "avalon";
            Write_Wait_States = "0cycles";
            Read_Wait_States = "0cycles";
            Hold_Time = "0cycles";
            Setup_Time = "0cycles";
            Is_Printable_Device = "0";
            Address_Alignment = "dynamic";
            Well_Behaved_Waitrequest = "0";
            Is_Nonvolatile_Storage = "0";
            Address_Span = "1024";
            Read_Latency = "1";
            Is_Memory_Device = "1";
            Maximum_Pending_Read_Transactions = "0";
            Minimum_Uninterrupted_Run_Length = "1";
            Accepts_Internal_Connections = "1";
            Write_Latency = "0";
            Is_Flash = "0";
            Data_Width = "32";
            Address_Width = "8";
            Maximum_Burst_Size = "1";
            Register_Incoming_Signals = "0";
            Register_Outgoing_Signals = "0";
            Interleave_Bursts = "0";
            Linewrap_Bursts = "0";
            Burst_On_Burst_Boundaries_Only = "0";
            Always_Burst_Max_Burst = "0";
            Is_Big_Endian = "0";
            Is_Enabled = "1";
            MASTERED_BY pipeline_bridge/m1
            {
               priority = "1";
               Offset_Address = "0x04401c00";
            }
            Clock_Source = "system_clk";
            Has_Clock = "1";
            Base_Address = "0x04401c00";
            Address_Group = "0";
            Has_IRQ = "0";
            Is_Channel = "1";
            Is_Writable = "1";
            Is_Base_Locked = "0";
         }
      }
      SLAVE s2
      {
         PORT_WIRING
         {
            PORT clk2
            {
               type = "clk";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT reset2
            {
               type = "reset";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT address2
            {
               type = "address";
               width = "8";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT chipselect2
            {
               type = "chipselect";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT clken2
            {
               type = "clken";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
               default_value = "1'b1";
            }
            PORT readdata2
            {
               type = "readdata";
               width = "32";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT write2
            {
               type = "write";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT writedata2
            {
               type = "writedata";
               width = "32";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT byteenable2
            {
               type = "byteenable";
               width = "4";
               direction = "input";
               Is_Enabled = "1";
            }
         }
         SYSTEM_BUILDER_INFO
         {
            Bus_Type = "avalon";
            Write_Wait_States = "0cycles";
            Read_Wait_States = "0cycles";
            Hold_Time = "0cycles";
            Setup_Time = "0cycles";
            Is_Printable_Device = "0";
            Address_Alignment = "dynamic";
            Well_Behaved_Waitrequest = "0";
            Is_Nonvolatile_Storage = "0";
            Address_Span = "1024";
            Read_Latency = "1";
            Is_Memory_Device = "1";
            Maximum_Pending_Read_Transactions = "0";
            Minimum_Uninterrupted_Run_Length = "1";
            Accepts_Internal_Connections = "1";
            Write_Latency = "0";
            Is_Flash = "0";
            Data_Width = "32";
            Address_Width = "8";
            Maximum_Burst_Size = "1";
            Register_Incoming_Signals = "0";
            Register_Outgoing_Signals = "0";
            Interleave_Bursts = "0";
            Linewrap_Bursts = "0";
            Burst_On_Burst_Boundaries_Only = "0";
            Always_Burst_Max_Burst = "0";
            Is_Big_Endian = "0";
            Is_Enabled = "1";
            MASTERED_BY dummy_master_inst/m0
            {
               priority = "1";
               Offset_Address = "0x04401c00";
            }
            Clock_Source = "system_clk";
            Has_Clock = "1";
            MASTERED_BY accelerator_mandelbrot_hw_draw_int_mandelbrot_managed_instance/accelerator_mandelbrot_hw_draw_int_mandelbrot_master_resource0
            {
               priority = "1";
               Offset_Address = "0x04401c00";
            }
            Base_Address = "0x00000000";
            Address_Group = "0";
            Has_IRQ = "0";
            Is_Channel = "1";
            Is_Writable = "1";
            MASTERED_BY accelerator_mandelbrot_hw_draw_int_mandelbrot/accelerator_mandelbrot_hw_draw_int_mandelbrot_master_resource0
            {
               priority = "1";
            }
         }
      }
      iss_model_name = "altera_memory";
      WIZARD_SCRIPT_ARGUMENTS
      {
         allow_mram_sim_contents_only_file = "0";
         ram_block_type = "AUTO";
         init_contents_file = "colour_lookup_table";
         non_default_init_file_enabled = "0";
         gui_ram_block_type = "Automatic";
         device_family = "Cyclone III";
         Writeable = "1";
         dual_port = "1";
         single_clock_operation = "0";
         Size_Value = "1024";
         Size_Multiple = "1";
         use_shallow_mem_blocks = "0";
         init_mem_content = "1";
         allow_in_system_memory_content_editor = "0";
         instance_id = "NONE";
         read_during_write_mode = "DONT_CARE";
         sim_meminit_only_filename = "0";
         ignore_auto_block_type_assignment = "1";
         MAKE
         {
            TARGET delete_placeholder_warning
            {
               colour_lookup_table
               {
                  Command1 = "rm -f $(SIMDIR)/contents_file_warning.txt";
                  Is_Phony = "1";
                  Target_File = "do_delete_placeholder_warning";
               }
            }
            TARGET hex
            {
               colour_lookup_table
               {
                  Command1 = "@echo Post-processing to create $(notdir $@)";
                  Command2 = "elf2hex $(ELF) 0x04401c00 0x4401FFF --width=32 $(QUARTUS_PROJECT_DIR)/colour_lookup_table.hex --create-lanes=0 ";
                  Dependency = "$(ELF)";
                  Target_File = "$(QUARTUS_PROJECT_DIR)/colour_lookup_table.hex";
               }
            }
            TARGET sim
            {
               colour_lookup_table
               {
                  Command1 = "if [ ! -d $(SIMDIR) ]; then mkdir $(SIMDIR) ; fi";
                  Command2 = "@echo Hardware simulation is not enabled for the target SOPC Builder system. Skipping creation of hardware simulation model contents and simulation symbol files. \(Note: This does not affect the instruction set simulator.\)";
                  Command3 = "touch $(SIMDIR)/dummy_file";
                  Dependency = "$(ELF)";
                  Target_File = "$(SIMDIR)/dummy_file";
               }
            }
         }
         contents_info = "";
      }
      SIMULATION
      {
         DISPLAY
         {
            SIGNAL a
            {
               name = "chipselect";
               conditional = "1";
            }
            SIGNAL c
            {
               name = "address";
               radix = "hexadecimal";
            }
            SIGNAL d
            {
               name = "byteenable";
               radix = "binary";
               conditional = "1";
            }
            SIGNAL e
            {
               name = "readdata";
               radix = "hexadecimal";
            }
            SIGNAL b
            {
               name = "write";
               conditional = "1";
            }
            SIGNAL f
            {
               name = "writedata";
               radix = "hexadecimal";
               conditional = "1";
            }
            SIGNAL g
            {
               name = "chipselect2";
               conditional = "1";
            }
            SIGNAL i
            {
               name = "address2";
               radix = "hexadecimal";
            }
            SIGNAL j
            {
               name = "byteenable2";
               radix = "binary";
               conditional = "1";
            }
            SIGNAL k
            {
               name = "readdata2";
               radix = "hexadecimal";
            }
            SIGNAL h
            {
               name = "write2";
               conditional = "1";
            }
            SIGNAL l
            {
               name = "writedata2";
               radix = "hexadecimal";
               conditional = "1";
            }
         }
      }
      SYSTEM_BUILDER_INFO
      {
         Prohibited_Device_Family = "MERCURY, APEX20K, APEX20KE, APEX20KC, APEXII, ACEX1K, FLEX10KE, EXCALIBUR_ARM, MAXII";
         Instantiate_In_System_Module = "1";
         Is_Enabled = "1";
         Default_Module_Name = "onchip_memory";
         Top_Level_Ports_Are_Enumerated = "1";
         Clock_Source = "ext_clk_one";
         View
         {
            MESSAGES
            {
            }
         }
      }
      class = "altera_avalon_onchip_memory2";
      class_version = "7.08120";
      HDL_INFO
      {
         Precompiled_Simulation_Library_Files = "";
         Simulation_HDL_Files = "";
         Synthesis_HDL_Files = "__PROJECT_DIRECTORY__/colour_lookup_table.v";
         Synthesis_Only_Files = "";
      }
      PORT_WIRING
      {
      }
   }
   MODULE accelerator_mandelbrot_hw_draw_int_mandelbrot_managed_instance
   {
      SLAVE sub_hw_draw_int_mandelbrot0
      {
         PORT_WIRING
         {
            PORT clk
            {
               type = "clk";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT reset_n
            {
               type = "reset_n";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT cpu_readdata0
            {
               type = "readdata";
               width = "32";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT hw_draw_int_mandelbrot_select0
            {
               type = "chipselect";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT hw_draw_int_mandelbrot_read0
            {
               type = "read";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT hw_draw_int_mandelbrot_waitrequest_n0
            {
               type = "waitrequest_n";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT hw_draw_int_mandelbrot_begin0
            {
               type = "begintransfer";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
         }
         SYSTEM_BUILDER_INFO
         {
            Bus_Type = "avalon";
            Read_Wait_States = "peripheral_controlled";
            Write_Wait_States = "peripheral_controlled";
            Hold_Time = "0cycles";
            Setup_Time = "0cycles";
            Is_Printable_Device = "0";
            Address_Alignment = "native";
            Well_Behaved_Waitrequest = "0";
            Is_Nonvolatile_Storage = "0";
            Read_Latency = "0";
            Is_Memory_Device = "0";
            Maximum_Pending_Read_Transactions = "0";
            Minimum_Uninterrupted_Run_Length = "1";
            Accepts_Internal_Connections = "1";
            Write_Latency = "0";
            Is_Flash = "0";
            Data_Width = "32";
            Address_Width = "0";
            Maximum_Burst_Size = "1";
            Register_Incoming_Signals = "0";
            Register_Outgoing_Signals = "0";
            Interleave_Bursts = "0";
            Linewrap_Bursts = "0";
            Burst_On_Burst_Boundaries_Only = "0";
            Always_Burst_Max_Burst = "0";
            Is_Big_Endian = "0";
            Is_Enabled = "1";
            MASTERED_BY accelerator_mandelbrot_hw_draw_int_mandelbrot_managed_instance/internal_master0
            {
               priority = "1";
               Offset_Address = "0x00000000";
            }
            Clock_Source = "system_clk";
            Has_Clock = "1";
            Base_Address = "0x00000000";
            Address_Group = "0";
            Is_Base_Locked = "0";
         }
      }
      SLAVE cpu_interface0
      {
         PORT_WIRING
         {
            PORT cpu_clk
            {
               type = "clk";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT cpu_reset_n
            {
               type = "reset_n";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT cpu_irq0
            {
               type = "irq";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT cpu_readdata1
            {
               type = "readdata";
               width = "32";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT cpu_writedata0
            {
               type = "writedata";
               width = "32";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT cpu_waitrequest_n0
            {
               type = "waitrequest_n";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT cpu_address0
            {
               type = "address";
               width = "4";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT cpu_write0
            {
               type = "write";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT cpu_select0
            {
               type = "chipselect";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
         }
         SYSTEM_BUILDER_INFO
         {
            Has_IRQ = "1";
            Bus_Type = "avalon";
            Read_Wait_States = "peripheral_controlled";
            Write_Wait_States = "peripheral_controlled";
            Hold_Time = "0cycles";
            Setup_Time = "0cycles";
            Is_Printable_Device = "0";
            Address_Alignment = "native";
            Well_Behaved_Waitrequest = "0";
            Is_Nonvolatile_Storage = "0";
            Read_Latency = "0";
            Is_Memory_Device = "0";
            Maximum_Pending_Read_Transactions = "0";
            Minimum_Uninterrupted_Run_Length = "1";
            Accepts_Internal_Connections = "1";
            Write_Latency = "0";
            Is_Flash = "0";
            Data_Width = "32";
            Address_Width = "4";
            Maximum_Burst_Size = "1";
            Register_Incoming_Signals = "0";
            Register_Outgoing_Signals = "0";
            Interleave_Bursts = "0";
            Linewrap_Bursts = "0";
            Burst_On_Burst_Boundaries_Only = "0";
            Always_Burst_Max_Burst = "0";
            Is_Big_Endian = "0";
            Is_Enabled = "1";
            MASTERED_BY cpu/data_master
            {
               priority = "1";
               Offset_Address = "0x08000000";
            }
            Clock_Source = "system_clk";
            Has_Clock = "1";
            IRQ_MASTER cpu/data_master
            {
               IRQ_Number = "6";
            }
            Base_Address = "0x08000000";
            Address_Group = "1";
         }
      }
      SLAVE dummy_slave
      {
         SYSTEM_BUILDER_INFO
         {
            Bus_Type = "avalon";
            Write_Wait_States = "0cycles";
            Read_Wait_States = "1cycles";
            Hold_Time = "0cycles";
            Setup_Time = "0cycles";
            Is_Printable_Device = "0";
            Address_Alignment = "native";
            Well_Behaved_Waitrequest = "0";
            Is_Nonvolatile_Storage = "0";
            Read_Latency = "0";
            Is_Memory_Device = "0";
            Maximum_Pending_Read_Transactions = "0";
            Minimum_Uninterrupted_Run_Length = "1";
            Accepts_Internal_Connections = "1";
            Write_Latency = "0";
            Is_Flash = "0";
            Data_Width = "32";
            Address_Width = "1";
            Maximum_Burst_Size = "1";
            Register_Incoming_Signals = "0";
            Register_Outgoing_Signals = "0";
            Interleave_Bursts = "0";
            Linewrap_Bursts = "0";
            Burst_On_Burst_Boundaries_Only = "0";
            Always_Burst_Max_Burst = "0";
            Is_Big_Endian = "0";
            Is_Enabled = "1";
            MASTERED_BY accelerator_mandelbrot_hw_draw_int_mandelbrot_managed_instance/dummy_master
            {
               priority = "1";
               Offset_Address = "0x00000000";
            }
            Clock_Source = "system_clk";
            Has_Clock = "1";
            Base_Address = "0x00000000";
            Address_Group = "2";
         }
         PORT_WIRING
         {
            PORT dummy_slave_chipselect
            {
               type = "chipselect";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT dummy_slave_address
            {
               type = "address";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT dummy_slave_readdata
            {
               type = "readdata";
               width = "32";
               direction = "output";
               Is_Enabled = "1";
            }
         }
      }
      MASTER dummy_master
      {
         SYSTEM_BUILDER_INFO
         {
            Bus_Type = "avalon";
            Is_Asynchronous = "0";
            DBS_Big_Endian = "0";
            Adapts_To = "";
            Do_Stream_Reads = "1";
            Do_Stream_Writes = "0";
            Max_Address_Width = "32";
            Data_Width = "32";
            Address_Width = "32";
            Maximum_Burst_Size = "1";
            Register_Incoming_Signals = "0";
            Register_Outgoing_Signals = "0";
            Interleave_Bursts = "0";
            Linewrap_Bursts = "0";
            Burst_On_Burst_Boundaries_Only = "0";
            Always_Burst_Max_Burst = "0";
            Is_Big_Endian = "0";
            Is_Enabled = "1";
            Clock_Source = "system_clk";
            Has_Clock = "1";
         }
         PORT_WIRING
         {
            PORT dummy_master_write
            {
               type = "write";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT dummy_master_writedata
            {
               type = "writedata";
               width = "32";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT dummy_master_address
            {
               type = "address";
               width = "32";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT dummy_master_waitrequest
            {
               type = "waitrequest";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
         }
         MEMORY_MAP
         {
            Entry accelerator_mandelbrot_hw_draw_int_mandelbrot_managed_instance/dummy_slave
            {
               address = "0x00000000";
               span = "0x00000040";
               is_bridge = "0";
            }
         }
      }
      MASTER internal_master0
      {
         SYSTEM_BUILDER_INFO
         {
            Bus_Type = "avalon";
            Is_Asynchronous = "0";
            DBS_Big_Endian = "0";
            Adapts_To = "";
            Do_Stream_Reads = "0";
            Do_Stream_Writes = "0";
            Max_Address_Width = "32";
            Data_Width = "32";
            Address_Width = "32";
            Maximum_Burst_Size = "1";
            Register_Incoming_Signals = "0";
            Register_Outgoing_Signals = "0";
            Interleave_Bursts = "0";
            Linewrap_Bursts = "0";
            Burst_On_Burst_Boundaries_Only = "0";
            Always_Burst_Max_Burst = "0";
            Is_Big_Endian = "0";
            Is_Enabled = "1";
            Clock_Source = "system_clk";
            Has_Clock = "1";
         }
         PORT_WIRING
         {
            PORT slave_readdata0
            {
               type = "readdata";
               width = "32";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT slave_address0
            {
               type = "address";
               width = "32";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT slave_read0
            {
               type = "read";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT slave_waitrequest_n0
            {
               type = "waitrequest_n";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
         }
         MEMORY_MAP
         {
            Entry accelerator_mandelbrot_hw_draw_int_mandelbrot_managed_instance/sub_hw_draw_int_mandelbrot0
            {
               address = "0x00000000";
               span = "0x00000020";
               is_bridge = "0";
            }
         }
      }
      MASTER accelerator_mandelbrot_hw_draw_int_mandelbrot_master_resource0
      {
         SYSTEM_BUILDER_INFO
         {
            Bus_Type = "avalon";
            Is_Asynchronous = "0";
            DBS_Big_Endian = "0";
            Adapts_To = "";
            Do_Stream_Reads = "0";
            Do_Stream_Writes = "0";
            Max_Address_Width = "32";
            Data_Width = "32";
            Address_Width = "32";
            Maximum_Burst_Size = "1";
            Register_Incoming_Signals = "0";
            Register_Outgoing_Signals = "0";
            Interleave_Bursts = "0";
            Linewrap_Bursts = "0";
            Burst_On_Burst_Boundaries_Only = "0";
            Always_Burst_Max_Burst = "0";
            Is_Big_Endian = "0";
            Is_Enabled = "1";
            Clock_Source = "system_clk";
            Has_Clock = "1";
         }
         PORT_WIRING
         {
            PORT accelerator_mandelbrot_hw_draw_int_mandelbrot_master_resource0_address0
            {
               type = "address";
               width = "32";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT accelerator_mandelbrot_hw_draw_int_mandelbrot_master_resource0_flush0
            {
               type = "flush";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT accelerator_mandelbrot_hw_draw_int_mandelbrot_master_resource0_readdatavalid0
            {
               type = "readdatavalid";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT accelerator_mandelbrot_hw_draw_int_mandelbrot_master_resource0_waitrequest_n0
            {
               type = "waitrequest_n";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT accelerator_mandelbrot_hw_draw_int_mandelbrot_master_resource0_readdata0
            {
               type = "readdata";
               width = "32";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT accelerator_mandelbrot_hw_draw_int_mandelbrot_master_resource0_read0
            {
               type = "read";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
         }
         MEMORY_MAP
         {
            Entry colour_lookup_table/s2
            {
               address = "0x04401c00";
               span = "0x00000400";
               is_bridge = "0";
            }
         }
      }
      MASTER accelerator_mandelbrot_hw_draw_int_mandelbrot_master_resource1
      {
         SYSTEM_BUILDER_INFO
         {
            Bus_Type = "avalon";
            Is_Asynchronous = "0";
            DBS_Big_Endian = "0";
            Adapts_To = "";
            Do_Stream_Reads = "0";
            Do_Stream_Writes = "0";
            Max_Address_Width = "32";
            Data_Width = "32";
            Address_Width = "32";
            Maximum_Burst_Size = "1";
            Register_Incoming_Signals = "0";
            Register_Outgoing_Signals = "0";
            Interleave_Bursts = "0";
            Linewrap_Bursts = "0";
            Burst_On_Burst_Boundaries_Only = "0";
            Always_Burst_Max_Burst = "0";
            Is_Big_Endian = "0";
            Is_Enabled = "1";
            Clock_Source = "system_clk";
            Has_Clock = "1";
         }
         PORT_WIRING
         {
            PORT accelerator_mandelbrot_hw_draw_int_mandelbrot_master_resource1_byteenable0
            {
               type = "byteenable";
               width = "4";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT accelerator_mandelbrot_hw_draw_int_mandelbrot_master_resource1_writedata0
            {
               type = "writedata";
               width = "32";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT accelerator_mandelbrot_hw_draw_int_mandelbrot_master_resource1_waitrequest_n0
            {
               type = "waitrequest_n";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT accelerator_mandelbrot_hw_draw_int_mandelbrot_master_resource1_write0
            {
               type = "write";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT accelerator_mandelbrot_hw_draw_int_mandelbrot_master_resource1_address0
            {
               type = "address";
               width = "32";
               direction = "output";
               Is_Enabled = "1";
            }
         }
         MEMORY_MAP
         {
            Entry frame_buffer_pipeline_bridge/s1
            {
               address = "0x00000000";
               span = "0x02000000";
               is_bridge = "1";
            }
            Entry ddr_sdram_clock_crossing_bridge/s1
            {
               address = "0x00000000";
               span = "0x02000000";
               is_bridge = "1";
            }
            Entry frame_buffer/s1
            {
               address = "0x00000000";
               span = "0x02000000";
               is_bridge = "0";
            }
         }
      }
      class = "no_legacy_module";
      class_version = "7.08120";
      gtf_class_name = "accelerator_mandelbrot_hw_draw_int_mandelbrot";
      gtf_class_version = "1.0";
      SYSTEM_BUILDER_INFO
      {
         Do_Not_Generate = "1";
         Instantiate_In_System_Module = "1";
         Is_Bridge = "0";
         Is_Enabled = "1";
         Clock_Source = "ext_clk_one";
         View
         {
            MESSAGES
            {
            }
         }
      }
      HDL_INFO
      {
         Simulation_HDL_Files = "__PROJECT_DIRECTORY__/C:/c2h_mandelbrot/accelerator_mandelbrot_hw_draw_int_mandelbrot.v,__PROJECT_DIRECTORY__/accelerator_mandelbrot_hw_draw_int_mandelbrot_managed_instance.v";
      }
      WIZARD_SCRIPT_ARGUMENTS
      {
      }
   }
   MODULE lcd_data_format_adapter_1
   {
      SLAVE in
      {
         PORT_WIRING
         {
            PORT clk
            {
               type = "clk";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT reset_n
            {
               type = "reset_n";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT in_ready
            {
               type = "ready";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT in_valid
            {
               type = "valid";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT in_data
            {
               type = "data";
               width = "8";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT in_startofpacket
            {
               type = "startofpacket";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT in_endofpacket
            {
               type = "endofpacket";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
         }
         SYSTEM_BUILDER_INFO
         {
            Bus_Type = "atlantic";
            Accepts_Internal_Connections = "1";
            MASTERED_BY lcd_ta_fifo_to_sequencer/out
            {
               priority = "0";
            }
            Address_Group = "0";
            Base_Address = "0x00000000";
            Is_Base_Locked = "0";
         }
      }
      MASTER out
      {
         SYSTEM_BUILDER_INFO
         {
            Bus_Type = "atlantic";
         }
         PORT_WIRING
         {
            PORT out_ready
            {
               type = "ready";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT out_valid
            {
               type = "valid";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT out_data
            {
               type = "data";
               width = "8";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT out_startofpacket
            {
               type = "startofpacket";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT out_endofpacket
            {
               type = "endofpacket";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT out_empty
            {
               type = "empty";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
         }
      }
      class = "no_legacy_module";
      class_version = "7.08120";
      gtf_class_name = "data_format_adapter";
      gtf_class_version = "12.1";
      SYSTEM_BUILDER_INFO
      {
         Do_Not_Generate = "1";
         Instantiate_In_System_Module = "1";
         Is_Enabled = "1";
         Clock_Source = "video_clk";
         Has_Clock = "1";
         View
         {
            MESSAGES
            {
            }
         }
      }
      SIMULATION
      {
         DISPLAY
         {
            SIGNAL aaa
            {
               name = "clk";
               radix = "binary";
               conditional = "1";
            }
            SIGNAL aab
            {
               name = "reset_n";
               radix = "binary";
               conditional = "1";
            }
            SIGNAL aac
            {
               name = "in_ready";
               radix = "binary";
               conditional = "1";
            }
            SIGNAL aad
            {
               name = "in_valid";
               radix = "binary";
               conditional = "1";
            }
            SIGNAL aae
            {
               name = "in_data";
               radix = "hexadecimal";
               conditional = "1";
            }
            SIGNAL aaf
            {
               name = "in_startofpacket";
               radix = "binary";
               conditional = "1";
            }
            SIGNAL aag
            {
               name = "in_endofpacket";
               radix = "binary";
               conditional = "1";
            }
            SIGNAL aah
            {
               name = "out_ready";
               radix = "binary";
               conditional = "1";
            }
            SIGNAL aai
            {
               name = "out_valid";
               radix = "binary";
               conditional = "1";
            }
            SIGNAL aaj
            {
               name = "out_data";
               radix = "hexadecimal";
               conditional = "1";
            }
            SIGNAL aak
            {
               name = "out_startofpacket";
               radix = "binary";
               conditional = "1";
            }
            SIGNAL aal
            {
               name = "out_endofpacket";
               radix = "binary";
               conditional = "1";
            }
            SIGNAL aam
            {
               name = "out_empty";
               radix = "binary";
               conditional = "1";
            }
         }
      }
      HDL_INFO
      {
         Simulation_HDL_Files = "";
         Synthesis_HDL_Files = "__PROJECT_DIRECTORY__/lcd_data_format_adapter_1.v";
         Synthesis_Only_Files = "__PROJECT_DIRECTORY__/lcd_data_format_adapter_1.v";
      }
      WIZARD_SCRIPT_ARGUMENTS
      {
      }
   }
   MODULE accelerator_mandelbrot_hw_draw_int_mandelbrot
   {
      class = "altera_avalon_c_hardware_accelerator";
      class_version = "7.08120";
      SYSTEM_BUILDER_INFO
      {
         Instantiate_In_System_Module = "1";
         Is_Enabled = "1";
         Date_Modified = "--unknown--";
         exclude_from_system_h = "1";
         Top_Level_Ports_Are_Enumerated = "1";
         Clock_Source = "system_clk";
         View
         {
            MESSAGES
            {
            }
            Is_Collapsed = "0";
         }
      }
      WIZARD_SCRIPT_ARGUMENTS
      {
         C_FILE = "C:/c2h_mandelbrot/software_examples/app/mandelbrot_c2h/././obj/hw_mandelbrot.c2h_pre";
         Subroutine_Name = "hw_draw_int_mandelbrot";
         RESULT = "";
         Global_Variable_Module = "";
         enable_debug = "0";
         Accelerator_Group = "mandelbrot";
         Preprocessor_Arguments = " ";
         Output_Driver_File = "C:/c2h_mandelbrot/software_examples/app/mandelbrot_c2h/././alt_c2h_hw_draw_int_mandelbrot.c";
         Output_Rules_File_Directory = " ";
         use_nios2_ide_make = "1";
         dcache_flush = "0";
         force_recompile = "1";
         report_only = "0";
         Generation_State = "2";
         target_cpu_name = "cpu";
         C2H_Legacy = "0";
      }
      SLAVE cpu_interface0
      {
         PORT_WIRING
         {
            PORT cpu_address0
            {
               Is_Enabled = "1";
               direction = "input";
               type = "address";
               width = "4";
            }
            PORT cpu_irq0
            {
               Is_Enabled = "1";
               direction = "output";
               type = "irq";
               width = "1";
            }
            PORT cpu_readdata1
            {
               Is_Enabled = "1";
               direction = "output";
               type = "readdata";
               width = "32";
            }
            PORT cpu_select0
            {
               Is_Enabled = "1";
               direction = "input";
               type = "chipselect";
               width = "1";
            }
            PORT cpu_waitrequest_n0
            {
               Is_Enabled = "1";
               direction = "output";
               type = "waitrequest_n";
               width = "1";
            }
            PORT cpu_write0
            {
               Is_Enabled = "1";
               direction = "input";
               type = "write";
               width = "1";
            }
            PORT cpu_writedata0
            {
               Is_Enabled = "1";
               direction = "input";
               type = "writedata";
               width = "32";
            }
         }
         SYSTEM_BUILDER_INFO
         {
            Address_Alignment = "native";
            Address_Width = "4";
            Bus_Type = "avalon";
            Data_Width = "32";
            Read_Wait_States = "peripheral_controlled";
            Write_Wait_States = "0";
            MASTERED_BY cpu/data_master
            {
               priority = "1";
            }
            Base_Address = "0x08000010";
            Address_Group = "0";
            IRQ_MASTER cpu/data_master
            {
               IRQ_Number = "NC";
            }
            Clock_Source = "system_clk";
            Has_Clock = "1";
            Has_IRQ = "1";
            Is_Visable = "0";
         }
      }
      SLAVE debug_slave0
      {
         PORT_WIRING
         {
         }
         SYSTEM_BUILDER_INFO
         {
            Address_Alignment = "native";
            Address_Width = "2";
            Bus_Type = "avalon";
            Data_Width = "32";
            Read_Wait_States = "0";
            Write_Wait_States = "0";
            Is_Visable = "0";
            Is_Enabled = "0";
         }
      }
      MASTER dummy_master
      {
         PORT_WIRING
         {
            PORT dummy_master_address
            {
               direction = "output";
               type = "address";
               width = "32";
               Is_Enabled = "1";
            }
            PORT dummy_master_write
            {
               direction = "output";
               type = "write";
               width = "1";
               Is_Enabled = "1";
            }
            PORT dummy_master_writedata
            {
               direction = "output";
               type = "writedata";
               width = "32";
               Is_Enabled = "1";
            }
            PORT dummy_master_waitrequest
            {
               direction = "input";
               type = "waitrequest";
               width = "1";
               Is_Enabled = "1";
            }
         }
         SYSTEM_BUILDER_INFO
         {
            Bus_Type = "avalon";
            Max_Address_Width = "32";
            Data_Width = "32";
            Do_Stream_Reads = "1";
            Is_Visible = "1";
         }
      }
      SLAVE dummy_slave
      {
         PORT_WIRING
         {
            PORT dummy_slave_chipselect
            {
               direction = "input";
               type = "chipselect";
               width = "1";
               Is_Enabled = "1";
            }
            PORT dummy_slave_readdata
            {
               direction = "output";
               type = "readdata";
               width = "32";
               Is_Enabled = "1";
            }
            PORT dummy_slave_address
            {
               direction = "input";
               type = "address";
               width = "1";
               Is_Enabled = "1";
            }
         }
         SYSTEM_BUILDER_INFO
         {
            Bus_Type = "avalon";
            Accepts_Internal_Connections = "1";
            Requires_Internal_Connections = "dummy_master";
            Accepts_External_Connections = "1";
            Is_Enabled = "1";
            Is_Visible = "1";
            Address_Width = "1";
            Data_Width = "8";
            Address_Alignment = "native";
            MASTERED_BY accelerator_mandelbrot_hw_draw_int_mandelbrot/dummy_master
            {
               priority = "1";
            }
            Base_Address = "";
            Address_Group = "1";
         }
      }
      HDL_INFO
      {
         Precompiled_Simulation_Library_Files = "";
         Simulation_HDL_Files = "";
         Synthesis_HDL_Files = "__PROJECT_DIRECTORY__/accelerator_mandelbrot_hw_draw_int_mandelbrot.v";
         Synthesis_Only_Files = "";
      }
      MASTER accelerator_mandelbrot_hw_draw_int_mandelbrot_master_resource0
      {
         PORT_WIRING
         {
            PORT accelerator_mandelbrot_hw_draw_int_mandelbrot_master_resource0_address0
            {
               Is_Enabled = "1";
               direction = "output";
               type = "address";
               width = "32";
            }
            PORT accelerator_mandelbrot_hw_draw_int_mandelbrot_master_resource0_flush0
            {
               Is_Enabled = "1";
               direction = "output";
               type = "flush";
               width = "1";
            }
            PORT accelerator_mandelbrot_hw_draw_int_mandelbrot_master_resource0_read0
            {
               Is_Enabled = "1";
               direction = "output";
               type = "read";
               width = "1";
            }
            PORT accelerator_mandelbrot_hw_draw_int_mandelbrot_master_resource0_readdata0
            {
               Is_Enabled = "1";
               direction = "input";
               type = "readdata";
               width = "32";
            }
            PORT accelerator_mandelbrot_hw_draw_int_mandelbrot_master_resource0_readdatavalid0
            {
               Is_Enabled = "1";
               direction = "input";
               type = "readdatavalid";
               width = "1";
            }
            PORT accelerator_mandelbrot_hw_draw_int_mandelbrot_master_resource0_waitrequest_n0
            {
               Is_Enabled = "1";
               direction = "input";
               type = "waitrequest_n";
               width = "1";
            }
         }
         SYSTEM_BUILDER_INFO
         {
            Address_Width = "32";
            Bus_Type = "avalon";
            Data_Width = "32";
            Do_Stream_Reads = "0";
            Do_Stream_Writes = "0";
            Is_Data_Master = "1";
            Is_Enabled = "1";
            Is_Visible = "1";
         }
      }
      MASTER accelerator_mandelbrot_hw_draw_int_mandelbrot_master_resource1
      {
         PORT_WIRING
         {
            PORT accelerator_mandelbrot_hw_draw_int_mandelbrot_master_resource1_address0
            {
               Is_Enabled = "1";
               direction = "output";
               type = "address";
               width = "32";
            }
            PORT accelerator_mandelbrot_hw_draw_int_mandelbrot_master_resource1_byteenable0
            {
               Is_Enabled = "1";
               direction = "output";
               type = "byteenable";
               width = "4";
            }
            PORT accelerator_mandelbrot_hw_draw_int_mandelbrot_master_resource1_waitrequest_n0
            {
               Is_Enabled = "1";
               direction = "input";
               type = "waitrequest_n";
               width = "1";
            }
            PORT accelerator_mandelbrot_hw_draw_int_mandelbrot_master_resource1_write0
            {
               Is_Enabled = "1";
               direction = "output";
               type = "write";
               width = "1";
            }
            PORT accelerator_mandelbrot_hw_draw_int_mandelbrot_master_resource1_writedata0
            {
               Is_Enabled = "1";
               direction = "output";
               type = "writedata";
               width = "32";
            }
         }
         SYSTEM_BUILDER_INFO
         {
            Address_Width = "32";
            Bus_Type = "avalon";
            Data_Width = "32";
            Do_Stream_Reads = "0";
            Do_Stream_Writes = "0";
            Is_Data_Master = "1";
            Is_Enabled = "1";
            Is_Visible = "1";
         }
      }
      MASTER internal_master0
      {
         PORT_WIRING
         {
            PORT slave_address0
            {
               Is_Enabled = "1";
               direction = "output";
               type = "address";
               width = "32";
            }
            PORT slave_read0
            {
               Is_Enabled = "1";
               direction = "output";
               type = "read";
               width = "1";
            }
            PORT slave_readdata0
            {
               Is_Enabled = "1";
               direction = "input";
               type = "readdata";
               width = "32";
            }
            PORT slave_waitrequest_n0
            {
               Is_Enabled = "1";
               direction = "input";
               type = "waitrequest_n";
               width = "1";
            }
         }
         SYSTEM_BUILDER_INFO
         {
            Address_Width = "32";
            Clock_Source = "system_clk";
            Data_Width = "32";
            Has_Clock = "1";
            Is_Enabled = "1";
            Is_Visible = "0";
         }
      }
      PORT_WIRING
      {
         PORT cpu_clk
         {
            Is_Enabled = "1";
            direction = "input";
            width = "1";
         }
         PORT cpu_reset_n
         {
            Is_Enabled = "1";
            direction = "input";
            width = "1";
         }
      }
      SLAVE sub_hw_draw_int_mandelbrot0
      {
         PORT_WIRING
         {
            PORT clk
            {
               Is_Enabled = "1";
               direction = "input";
               type = "clk";
               width = "1";
            }
            PORT cpu_readdata0
            {
               Is_Enabled = "1";
               direction = "output";
               type = "readdata";
               width = "32";
            }
            PORT hw_draw_int_mandelbrot_begin0
            {
               Is_Enabled = "1";
               direction = "input";
               type = "begintransfer";
               width = "1";
            }
            PORT hw_draw_int_mandelbrot_read0
            {
               Is_Enabled = "1";
               direction = "input";
               type = "read";
               width = "1";
            }
            PORT hw_draw_int_mandelbrot_select0
            {
               Is_Enabled = "1";
               direction = "input";
               type = "chipselect";
               width = "1";
            }
            PORT hw_draw_int_mandelbrot_waitrequest_n0
            {
               Is_Enabled = "1";
               direction = "output";
               type = "waitrequest_n";
               width = "1";
            }
            PORT reset_n
            {
               Is_Enabled = "1";
               direction = "input";
               type = "reset_n";
               width = "1";
            }
         }
         SYSTEM_BUILDER_INFO
         {
            Accepts_External_Connections = "0";
            Accepts_Internal_Connections = "1";
            Address_Alignment = "native";
            Address_Width = "0";
            Base_Address = "0x00000000";
            Bus_Type = "avalon";
            Data_Width = "32";
            Is_Visible = "0";
            MASTERED_BY accelerator_mandelbrot_hw_draw_int_mandelbrot/internal_master0
            {
               priority = "1";
            }
            Read_Latency = "0";
            Read_Wait_States = "peripheral_controlled";
            Write_Wait_States = "0";
         }
      }
   }
}
