<chac-properties version="1.0.0">
   <property-list name="Summary">
   <property name="HDL name" value="accelerator_mandelbrot_hw_draw_int_mandelbrot"/>
   <property name="System name" value="system"/>
   <property name="Quartus project name" value="C2H_Mandelbrot"/>
   <property name="C wrapper name" value="D:/board_development/c2h_mandelbrot/software_examples/app/mandelbrot_c2h/././alt_c2h_hw_draw_int_mandelbrot.c"/>
   </property-list>
   <property-list name="Glossary">
   <property-list name="Loop" showicon="info">
   <property name="" value="  Refers to a C code iteration statement using &quot;for&quot;, &quot;do&quot; or"/>
   <property name="" value=" &quot;while&quot; as controlling expression."/>
   </property-list>
   <property-list name="Inner Loop" showicon="info">
   <property name="" value=" Refers to a loop within a loop. Optimizing  the innermost loops tends to improve"/>
   <property name="" value=" accelerator performance the most"/>
   </property-list>
   <property-list name="Cycles per Loop Iteration (CPLI)" showicon="info">
   <property name="" value=" CPLI is the time required between loop iterations, assuming no pipeline stall. Data"/>
   <property name="" value=" for a new iteration enters the pipe every (CPLI) clock cycles. After the loop's initial"/>
   <property name="" value=" latency, the pipeline completes each iteration's computation once every (CPLI) clock"/>
   <property name="" value=" cycles (assuming no pipeline stall)  "/>
   <property name="" value="  TLT ~= Latency + (n-1) * (CPLI + &quot;Pipeline Stalls&quot;)  "/>
   <property name="" value=" Where:  "/>
   <property name="" value="     TLT := Total Loop Time  "/>
   <property name="" value="       n := Loop Iterations  "/>
   <property name="" value="    CPLI := Cycles Per Loop Iteration "/>
   </property-list>
   <property-list name="Latency" showicon="info">
   <property name="" value=" Latency is the number of states in the loop's state machine, which determines the"/>
   <property name="" value=" number of clock cycles that it takes to fill the pipeline and compute results for"/>
   <property name="" value=" the first loop iteration (assuming no pipeline stall)."/>
   </property-list>
   <property-list name="Pipeline Stall" showicon="info">
   <property name="" value=" The state machine stalls when it needs data that is not yet available.  Stalling"/>
   <property name="" value=" occurs if an inner loop, memory access, or function call has not completed.  No logic"/>
   <property name="" value=" in the loop  will compute until all reasons for stalling are resolved."/>
   </property-list>
   </property-list>
   <property-list name="Resources">
   <property-list name="About Resources" showicon="info">
   <property name="" value=" This section lists specific hardware resources required for the accelerated function."/>
   </property-list>
   <property-list name="The accelerated function requires 2 Masters.">
   <property-list name="About Avalon master port" showicon="info">
   <property name="" value=" This section lists all the Avalon master ports generated by the Nios II C2H compiler"/>
   <property name="" value=" for the function hw_draw_int_mandelbrot. Avalon master ports implement dereference"/>
   <property name="" value=" operations of pointer variable, function, global variable or struct variable. The"/>
   <property name="" value=" Avalon master port resources are partitionned by do blocks, function blocks and Avalon"/>
   <property name="" value=" connection pragmas. For instance, the dereference operations within a do block with"/>
   <property name="" value=" identical connection pragmas share the same  Avalon master port resource."/>
   </property-list>
   <property-list name="Master Resource 0">
   <property name="HDL name" value="accelerator_mandelbrot_hw_draw_int_mandelbrot_master_resource0"/>
   <property name="Data width" value="32"/>
   <property-list name="4 dereference operations">
   <property name="This section lists the dereference operations mapped to the Avalon master port resource." value="" showicon="info"/>
   <property-list name="pointer &quot;colour_lookup_table_iters0_p0xFF_p2&quot; line 222">
   <property name="line 222" value=" * frame_buffer ++  = ( iters0 == max_iter ? 0 : colour_lookup_table [  iters0 &amp; 0xFF  ] )"/>
   <property name="Variable" value="colour_lookup_table_iters0_p0xFF_p2"/>
   <property name="Direction" value="Read"/>
   </property-list>
   <property-list name="pointer &quot;colour_lookup_table_iters1_p0xFF_p2&quot; line 225">
   <property name="line 225" value=" * frame_buffer ++  = ( iters1 == max_iter ? 0 : colour_lookup_table [  iters1 &amp; 0xFF  ] )"/>
   <property name="Variable" value="colour_lookup_table_iters1_p0xFF_p2"/>
   <property name="Direction" value="Read"/>
   </property-list>
   <property-list name="pointer &quot;colour_lookup_table_iters2_p0xFF_p2&quot; line 228">
   <property name="line 228" value=" * frame_buffer ++  = ( iters2 == max_iter ? 0 : colour_lookup_table [  iters2 &amp; 0xFF  ] )"/>
   <property name="Variable" value="colour_lookup_table_iters2_p0xFF_p2"/>
   <property name="Direction" value="Read"/>
   </property-list>
   <property-list name="pointer &quot;colour_lookup_table_iters3_p0xFF_p2&quot; line 229">
   <property name="line 229" value=" * frame_buffer ++  = ( iters3 == max_iter ? 0 : colour_lookup_table [  iters3 &amp; 0xFF  ] )"/>
   <property name="Variable" value="colour_lookup_table_iters3_p0xFF_p2"/>
   <property name="Direction" value="Read"/>
   </property-list>
   </property-list>
   <property-list name="Slave connection">
   <property name="This section lists the Avalon slave ports connected to the Avalon master port resource" value="" showicon="info"/>
   <property name="Avalon slave name" value="colour_lookup_table/s2"/>
   <property name="Avalon slave name" value="instance_1"/>
   </property-list>
   </property-list>

   <property-list name="Master Resource 1">
   <property name="HDL name" value="accelerator_mandelbrot_hw_draw_int_mandelbrot_master_resource1"/>
   <property name="Data width" value="32"/>
   <property-list name="4 dereference operations">
   <property name="This section lists the dereference operations mapped to the Avalon master port resource." value="" showicon="info"/>
   <property-list name="pointer &quot;frame_buffer&quot; line 228">
   <property name="line 228" value=" * frame_buffer ++  = ( iters2 == max_iter ? 0 : colour_lookup_table [  iters2 &amp; 0xFF  ] )"/>
   <property name="Variable" value="frame_buffer"/>
   <property name="Direction" value="Write"/>
   </property-list>
   <property-list name="pointer &quot;frame_buffer&quot; line 229">
   <property name="line 229" value=" * frame_buffer ++  = ( iters3 == max_iter ? 0 : colour_lookup_table [  iters3 &amp; 0xFF  ] )"/>
   <property name="Variable" value="frame_buffer"/>
   <property name="Direction" value="Write"/>
   </property-list>
   <property-list name="pointer &quot;frame_buffer&quot; line 225">
   <property name="line 225" value=" * frame_buffer ++  = ( iters1 == max_iter ? 0 : colour_lookup_table [  iters1 &amp; 0xFF  ] )"/>
   <property name="Variable" value="frame_buffer"/>
   <property name="Direction" value="Write"/>
   </property-list>
   <property-list name="pointer &quot;frame_buffer&quot; line 222">
   <property name="line 222" value=" * frame_buffer ++  = ( iters0 == max_iter ? 0 : colour_lookup_table [  iters0 &amp; 0xFF  ] )"/>
   <property name="Variable" value="frame_buffer"/>
   <property name="Direction" value="Write"/>
   </property-list>
   </property-list>
   <property-list name="Slave connection">
   <property name="This section lists the Avalon slave ports connected to the Avalon master port resource" value="" showicon="info"/>
   <property name="Avalon slave name" value="frame_buffer_pipeline_bridge/s1"/>
   <property name="Avalon slave name" value="instance_1"/>
   </property-list>
   </property-list>

   </property-list>
   <property-list name="The accelerated function requires 12 Multipliers.">
   <property-list name="About Multipliers" showicon="info">
   <property name="" value=" To reduce the number of Multipliers, you can access this operator from a function"/>
   <property name="" value=" call. A time shared implementation for this operator could improve the system efficiency."/>
   <property name="" value=" e.g :  "/>
   <property name="" value=" replace  : a=c*b;       b=d*e;  "/>
   <property name="" value=" with     : a=mult(c,b); b=mult(d,e);  "/>
   <property name="" value="            int mult(int x, int y) {return x*y;}"/>
   </property-list>
   <property-list name="accelerator_mandelbrot_hw_draw_int_mandelbrot_multiplier_resource0">
   <property name="Bit width" value="64"/>
   <property name="Pipeline" value="2"/>
   <property-list name="1 operation">
   <property name="This section lists the dereference operations mapped to the multiplier resource." value="" showicon="info"/>
   <property-list name="line 130: xsqr = ( ( (  long long  ) x ) * ( (  long long  ) x ) )">
   </property-list>
   </property-list>
   </property-list>

   <property-list name="accelerator_mandelbrot_hw_draw_int_mandelbrot_multiplier_resource2">
   <property name="Bit width" value="64"/>
   <property name="Pipeline" value="2"/>
   <property-list name="1 operation">
   <property name="This section lists the dereference operations mapped to the multiplier resource." value="" showicon="info"/>
   <property-list name="line 130: y = ( (  long  ) ( ( ( ( 2 * ( (  long long  ) x ) ) * ( (  long long  ) y ) ) + ( current_y_copy &lt;&lt; 28 ) ) &gt;&gt; 28 ) )">
   </property-list>
   </property-list>
   </property-list>

   <property-list name="accelerator_mandelbrot_hw_draw_int_mandelbrot_multiplier_resource1">
   <property name="Bit width" value="64"/>
   <property name="Pipeline" value="2"/>
   <property-list name="1 operation">
   <property name="This section lists the dereference operations mapped to the multiplier resource." value="" showicon="info"/>
   <property-list name="line 130: ysqr = ( ( (  long long  ) y ) * ( (  long long  ) y ) )">
   </property-list>
   </property-list>
   </property-list>

   <property-list name="accelerator_mandelbrot_hw_draw_int_mandelbrot_multiplier_resource4">
   <property name="Bit width" value="64"/>
   <property name="Pipeline" value="2"/>
   <property-list name="1 operation">
   <property name="This section lists the dereference operations mapped to the multiplier resource." value="" showicon="info"/>
   <property-list name="line 133: ysqr = ( ( (  long long  ) y ) * ( (  long long  ) y ) )">
   </property-list>
   </property-list>
   </property-list>

   <property-list name="accelerator_mandelbrot_hw_draw_int_mandelbrot_multiplier_resource3">
   <property name="Bit width" value="64"/>
   <property name="Pipeline" value="2"/>
   <property-list name="1 operation">
   <property name="This section lists the dereference operations mapped to the multiplier resource." value="" showicon="info"/>
   <property-list name="line 133: xsqr = ( ( (  long long  ) x ) * ( (  long long  ) x ) )">
   </property-list>
   </property-list>
   </property-list>

   <property-list name="accelerator_mandelbrot_hw_draw_int_mandelbrot_multiplier_resource5">
   <property name="Bit width" value="64"/>
   <property name="Pipeline" value="2"/>
   <property-list name="1 operation">
   <property name="This section lists the dereference operations mapped to the multiplier resource." value="" showicon="info"/>
   <property-list name="line 133: y = ( (  long  ) ( ( ( ( 2 * ( (  long long  ) x ) ) * ( (  long long  ) y ) ) + ( current_y_copy &lt;&lt; 28 ) ) &gt;&gt; 28 ) )">
   </property-list>
   </property-list>
   </property-list>

   <property-list name="accelerator_mandelbrot_hw_draw_int_mandelbrot_multiplier_resource6">
   <property name="Bit width" value="64"/>
   <property name="Pipeline" value="2"/>
   <property-list name="1 operation">
   <property name="This section lists the dereference operations mapped to the multiplier resource." value="" showicon="info"/>
   <property-list name="line 136: xsqr = ( ( (  long long  ) x ) * ( (  long long  ) x ) )">
   </property-list>
   </property-list>
   </property-list>

   <property-list name="accelerator_mandelbrot_hw_draw_int_mandelbrot_multiplier_resource7">
   <property name="Bit width" value="64"/>
   <property name="Pipeline" value="2"/>
   <property-list name="1 operation">
   <property name="This section lists the dereference operations mapped to the multiplier resource." value="" showicon="info"/>
   <property-list name="line 136: ysqr = ( ( (  long long  ) y ) * ( (  long long  ) y ) )">
   </property-list>
   </property-list>
   </property-list>

   <property-list name="accelerator_mandelbrot_hw_draw_int_mandelbrot_multiplier_resource8">
   <property name="Bit width" value="64"/>
   <property name="Pipeline" value="2"/>
   <property-list name="1 operation">
   <property name="This section lists the dereference operations mapped to the multiplier resource." value="" showicon="info"/>
   <property-list name="line 136: y = ( (  long  ) ( ( ( ( 2 * ( (  long long  ) x ) ) * ( (  long long  ) y ) ) + ( current_y_copy &lt;&lt; 28 ) ) &gt;&gt; 28 ) )">
   </property-list>
   </property-list>
   </property-list>

   <property-list name="accelerator_mandelbrot_hw_draw_int_mandelbrot_multiplier_resource9">
   <property name="Bit width" value="64"/>
   <property name="Pipeline" value="2"/>
   <property-list name="1 operation">
   <property name="This section lists the dereference operations mapped to the multiplier resource." value="" showicon="info"/>
   <property-list name="line 137: xsqr = ( ( (  long long  ) x ) * ( (  long long  ) x ) )">
   </property-list>
   </property-list>
   </property-list>

   <property-list name="accelerator_mandelbrot_hw_draw_int_mandelbrot_multiplier_resource11">
   <property name="Bit width" value="64"/>
   <property name="Pipeline" value="2"/>
   <property-list name="1 operation">
   <property name="This section lists the dereference operations mapped to the multiplier resource." value="" showicon="info"/>
   <property-list name="line 137: y = ( (  long  ) ( ( ( ( 2 * ( (  long long  ) x ) ) * ( (  long long  ) y ) ) + ( current_y_copy &lt;&lt; 28 ) ) &gt;&gt; 28 ) )">
   </property-list>
   </property-list>
   </property-list>

   <property-list name="accelerator_mandelbrot_hw_draw_int_mandelbrot_multiplier_resource10">
   <property name="Bit width" value="64"/>
   <property name="Pipeline" value="2"/>
   <property-list name="1 operation">
   <property name="This section lists the dereference operations mapped to the multiplier resource." value="" showicon="info"/>
   <property-list name="line 137: ysqr = ( ( (  long long  ) y ) * ( (  long long  ) y ) )">
   </property-list>
   </property-list>
   </property-list>

   </property-list>
   </property-list>
   <property-list name="Performance">
   <property-list name="About Performance" showicon="info">
   <property name="" value=" The performance section provides CPLI and latency information for each loop in the"/>
   <property name="" value=" accelerated function.  "/>
   <property name="" value=" see glossary section for CPLI and latency"/>
   </property-list>
   <property-list name="The accelerated function contains 5 loops.">
   <property-list name=" file:hw_mandelbrot.c line:128 Loop CPLI=4">
   <property name="Loop latency " value=" 18"/>
   <property-list name="Cycles per loop iteration (CPLI) : 4">
   <property name="Critical loop variable" value="frame_buffer"/>
   </property-list>
   <property-list name="Scheduling information per assignment">
   <property name="Scheduling information per assignment" value="Lists starting and ending state of all assignments in the loop." showicon="info"/>
   <property name="assignment at line 130 :  iters0 = 0;" value="state 0 ---&gt;  0"/>
   <property name="assignment control at line 130 : " value="state 0 ---&gt;  1"/>
   <property name=" Loop CPLI=3 at line 130" value="state 2 ---&gt;  4"/>
   <property name="assignment at line 133 :  iters1 = 0;" value="state 0 ---&gt;  0"/>
   <property name="assignment control at line 133 : " value="state 0 ---&gt;  1"/>
   <property name=" Loop CPLI=3 at line 133" value="state 2 ---&gt;  4"/>
   <property name="assignment at line 136 :  iters2 = 0;" value="state 0 ---&gt;  0"/>
   <property name="assignment control at line 136 : " value="state 0 ---&gt;  1"/>
   <property name=" Loop CPLI=3 at line 136" value="state 2 ---&gt;  4"/>
   <property name="assignment at line 137 :  iters3 = 0;" value="state 0 ---&gt;  0"/>
   <property name="assignment control at line 137 : " value="state 0 ---&gt;  1"/>
   <property name=" Loop CPLI=3 at line 137" value="state 2 ---&gt;  4"/>
   <property name="assignment control at line 157 : " value="state 0 ---&gt;  1"/>
   <property name="assignment at line 191 :  current_x0_copy = ( current_x0_copy + ( step_dim * 4 ) );" value="state 0 ---&gt;  1"/>
   <property name="assignment at line 194 :  current_x1_copy = ( current_x1_copy + ( step_dim * 4 ) );" value="state 0 ---&gt;  1"/>
   <property name="assignment at line 197 :  current_x2_copy = ( current_x2_copy + ( step_dim * 4 ) );" value="state 0 ---&gt;  1"/>
   <property name="assignment at line 198 :  current_x3_copy = ( current_x3_copy + ( step_dim * 4 ) );" value="state 0 ---&gt;  1"/>
   <property name="assignment at line 216 :  column = ( column + 4 );" value="state 0 ---&gt;  1"/>
   <property name="assignment at line 163 :  current_x1_copy = ( current_x + step_dim );" value="state 0 ---&gt;  1"/>
   <property name="assignment at line 166 :  current_x2_copy = ( current_x + ( step_dim &lt;&lt; 1 ) );" value="state 0 ---&gt;  1"/>
   <property name="assignment at line 167 :  current_x3_copy = ( ( current_x + ( step_dim &lt;&lt; 1 ) ) + step_dim );" value="state 0 ---&gt;  1"/>
   <property name="assignment at line 185 :  current_y_copy = ( current_y_copy - step_dim );" value="state 0 ---&gt;  1"/>
   <property name="assignment at line 222 :   * frame_buffer ++  = ( iters0 == max_iter ? 0 : colour_lookup_table [  iters0 &amp; 0xFF  ] );" value="state 0 ---&gt;  17"/>
   <property name="assignment at line 128 :  pixel = ( pixel + 4 );" value="state 0 ---&gt;  1"/>
   <property name="assignment control at line 128 : " value="state 1 ---&gt;  2"/>
   <property name="assignment at line 186 :  column = 0;" value="state 1 ---&gt;  1"/>
   <property name="assignment at line 160 :  current_x0_copy = current_x;" value="state 1 ---&gt;  1"/>
   <property name="assignment at line 225 :   * frame_buffer ++  = ( iters1 == max_iter ? 0 : colour_lookup_table [  iters1 &amp; 0xFF  ] );" value="state 1 ---&gt;  16"/>
   <property name="assignment at line 228 :   * frame_buffer ++  = ( iters2 == max_iter ? 0 : colour_lookup_table [  iters2 &amp; 0xFF  ] );" value="state 2 ---&gt;  14"/>
   <property name="assignment at line 229 :   * frame_buffer ++  = ( iters3 == max_iter ? 0 : colour_lookup_table [  iters3 &amp; 0xFF  ] );" value="state 3 ---&gt;  15"/>
   </property-list>
   <property-list name="Scheduling information per state">
   <property name="Scheduling information per state" value="lists all active assignments for each state" showicon="info"/>
   <property-list name="state 0">
   <property name="line 128" value=" pixel = ( pixel + 4 );"/>
   <property name="line 130" value=" iters0 = 0;"/>
   <property name="line 130" value=""/>
   <property name="line 133" value=" iters1 = 0;"/>
   <property name="line 133" value=""/>
   <property name="line 136" value=" iters2 = 0;"/>
   <property name="line 136" value=""/>
   <property name="line 137" value=" iters3 = 0;"/>
   <property name="line 137" value=""/>
   <property name="line 157" value=""/>
   <property name="line 163" value=" current_x1_copy = ( current_x + step_dim );"/>
   <property name="line 166" value=" current_x2_copy = ( current_x + ( step_dim &lt;&lt; 1 ) );"/>
   <property name="line 167" value=" current_x3_copy = ( ( current_x + ( step_dim &lt;&lt; 1 ) ) + step_dim );"/>
   <property name="line 185" value=" current_y_copy = ( current_y_copy - step_dim );"/>
   <property name="line 191" value=" current_x0_copy = ( current_x0_copy + ( step_dim * 4 ) );"/>
   <property name="line 194" value=" current_x1_copy = ( current_x1_copy + ( step_dim * 4 ) );"/>
   <property name="line 197" value=" current_x2_copy = ( current_x2_copy + ( step_dim * 4 ) );"/>
   <property name="line 198" value=" current_x3_copy = ( current_x3_copy + ( step_dim * 4 ) );"/>
   <property name="line 216" value=" column = ( column + 4 );"/>
   <property name="line 222" value="  * frame_buffer ++  = ( iters0 == max_iter ? 0 : colour_lookup_table [  iters0 &amp; 0xFF  ] );"/>
   </property-list>
   <property-list name="state 1">
   <property name="line 128" value=" pixel = ( pixel + 4 );"/>
   <property name="line 128" value=""/>
   <property name="line 130" value=""/>
   <property name="line 133" value=""/>
   <property name="line 136" value=""/>
   <property name="line 137" value=""/>
   <property name="line 157" value=""/>
   <property name="line 160" value=" current_x0_copy = current_x;"/>
   <property name="line 163" value=" current_x1_copy = ( current_x + step_dim );"/>
   <property name="line 166" value=" current_x2_copy = ( current_x + ( step_dim &lt;&lt; 1 ) );"/>
   <property name="line 167" value=" current_x3_copy = ( ( current_x + ( step_dim &lt;&lt; 1 ) ) + step_dim );"/>
   <property name="line 185" value=" current_y_copy = ( current_y_copy - step_dim );"/>
   <property name="line 186" value=" column = 0;"/>
   <property name="line 191" value=" current_x0_copy = ( current_x0_copy + ( step_dim * 4 ) );"/>
   <property name="line 194" value=" current_x1_copy = ( current_x1_copy + ( step_dim * 4 ) );"/>
   <property name="line 197" value=" current_x2_copy = ( current_x2_copy + ( step_dim * 4 ) );"/>
   <property name="line 198" value=" current_x3_copy = ( current_x3_copy + ( step_dim * 4 ) );"/>
   <property name="line 216" value=" column = ( column + 4 );"/>
   <property name="line 222" value="  * frame_buffer ++  = ( iters0 == max_iter ? 0 : colour_lookup_table [  iters0 &amp; 0xFF  ] );"/>
   <property name="line 225" value="  * frame_buffer ++  = ( iters1 == max_iter ? 0 : colour_lookup_table [  iters1 &amp; 0xFF  ] );"/>
   </property-list>
   <property-list name="state 2">
   <property name="line 128" value=""/>
   <property name="line 130" value=" Loop CPLI=3 at line 130"/>
   <property name="line 133" value=" Loop CPLI=3 at line 133"/>
   <property name="line 136" value=" Loop CPLI=3 at line 136"/>
   <property name="line 137" value=" Loop CPLI=3 at line 137"/>
   <property name="line 222" value="  * frame_buffer ++  = ( iters0 == max_iter ? 0 : colour_lookup_table [  iters0 &amp; 0xFF  ] );"/>
   <property name="line 225" value="  * frame_buffer ++  = ( iters1 == max_iter ? 0 : colour_lookup_table [  iters1 &amp; 0xFF  ] );"/>
   <property name="line 228" value="  * frame_buffer ++  = ( iters2 == max_iter ? 0 : colour_lookup_table [  iters2 &amp; 0xFF  ] );"/>
   </property-list>
   <property-list name="state 3">
   <property name="line 130" value=" Loop CPLI=3 at line 130"/>
   <property name="line 133" value=" Loop CPLI=3 at line 133"/>
   <property name="line 136" value=" Loop CPLI=3 at line 136"/>
   <property name="line 137" value=" Loop CPLI=3 at line 137"/>
   <property name="line 222" value="  * frame_buffer ++  = ( iters0 == max_iter ? 0 : colour_lookup_table [  iters0 &amp; 0xFF  ] );"/>
   <property name="line 225" value="  * frame_buffer ++  = ( iters1 == max_iter ? 0 : colour_lookup_table [  iters1 &amp; 0xFF  ] );"/>
   <property name="line 228" value="  * frame_buffer ++  = ( iters2 == max_iter ? 0 : colour_lookup_table [  iters2 &amp; 0xFF  ] );"/>
   <property name="line 229" value="  * frame_buffer ++  = ( iters3 == max_iter ? 0 : colour_lookup_table [  iters3 &amp; 0xFF  ] );"/>
   </property-list>
   <property-list name="state 4">
   <property name="line 130" value=" Loop CPLI=3 at line 130"/>
   <property name="line 133" value=" Loop CPLI=3 at line 133"/>
   <property name="line 136" value=" Loop CPLI=3 at line 136"/>
   <property name="line 137" value=" Loop CPLI=3 at line 137"/>
   <property name="line 222" value="  * frame_buffer ++  = ( iters0 == max_iter ? 0 : colour_lookup_table [  iters0 &amp; 0xFF  ] );"/>
   <property name="line 225" value="  * frame_buffer ++  = ( iters1 == max_iter ? 0 : colour_lookup_table [  iters1 &amp; 0xFF  ] );"/>
   <property name="line 228" value="  * frame_buffer ++  = ( iters2 == max_iter ? 0 : colour_lookup_table [  iters2 &amp; 0xFF  ] );"/>
   <property name="line 229" value="  * frame_buffer ++  = ( iters3 == max_iter ? 0 : colour_lookup_table [  iters3 &amp; 0xFF  ] );"/>
   </property-list>
   <property-list name="state 5">
   <property name="line 222" value="  * frame_buffer ++  = ( iters0 == max_iter ? 0 : colour_lookup_table [  iters0 &amp; 0xFF  ] );"/>
   <property name="line 225" value="  * frame_buffer ++  = ( iters1 == max_iter ? 0 : colour_lookup_table [  iters1 &amp; 0xFF  ] );"/>
   <property name="line 228" value="  * frame_buffer ++  = ( iters2 == max_iter ? 0 : colour_lookup_table [  iters2 &amp; 0xFF  ] );"/>
   <property name="line 229" value="  * frame_buffer ++  = ( iters3 == max_iter ? 0 : colour_lookup_table [  iters3 &amp; 0xFF  ] );"/>
   </property-list>
   <property-list name="state 6">
   <property name="line 222" value="  * frame_buffer ++  = ( iters0 == max_iter ? 0 : colour_lookup_table [  iters0 &amp; 0xFF  ] );"/>
   <property name="line 225" value="  * frame_buffer ++  = ( iters1 == max_iter ? 0 : colour_lookup_table [  iters1 &amp; 0xFF  ] );"/>
   <property name="line 228" value="  * frame_buffer ++  = ( iters2 == max_iter ? 0 : colour_lookup_table [  iters2 &amp; 0xFF  ] );"/>
   <property name="line 229" value="  * frame_buffer ++  = ( iters3 == max_iter ? 0 : colour_lookup_table [  iters3 &amp; 0xFF  ] );"/>
   </property-list>
   <property-list name="state 7">
   <property name="line 222" value="  * frame_buffer ++  = ( iters0 == max_iter ? 0 : colour_lookup_table [  iters0 &amp; 0xFF  ] );"/>
   <property name="line 225" value="  * frame_buffer ++  = ( iters1 == max_iter ? 0 : colour_lookup_table [  iters1 &amp; 0xFF  ] );"/>
   <property name="line 228" value="  * frame_buffer ++  = ( iters2 == max_iter ? 0 : colour_lookup_table [  iters2 &amp; 0xFF  ] );"/>
   <property name="line 229" value="  * frame_buffer ++  = ( iters3 == max_iter ? 0 : colour_lookup_table [  iters3 &amp; 0xFF  ] );"/>
   </property-list>
   <property-list name="state 8">
   <property name="line 222" value="  * frame_buffer ++  = ( iters0 == max_iter ? 0 : colour_lookup_table [  iters0 &amp; 0xFF  ] );"/>
   <property name="line 225" value="  * frame_buffer ++  = ( iters1 == max_iter ? 0 : colour_lookup_table [  iters1 &amp; 0xFF  ] );"/>
   <property name="line 228" value="  * frame_buffer ++  = ( iters2 == max_iter ? 0 : colour_lookup_table [  iters2 &amp; 0xFF  ] );"/>
   <property name="line 229" value="  * frame_buffer ++  = ( iters3 == max_iter ? 0 : colour_lookup_table [  iters3 &amp; 0xFF  ] );"/>
   </property-list>
   <property-list name="state 9">
   <property name="line 222" value="  * frame_buffer ++  = ( iters0 == max_iter ? 0 : colour_lookup_table [  iters0 &amp; 0xFF  ] );"/>
   <property name="line 225" value="  * frame_buffer ++  = ( iters1 == max_iter ? 0 : colour_lookup_table [  iters1 &amp; 0xFF  ] );"/>
   <property name="line 228" value="  * frame_buffer ++  = ( iters2 == max_iter ? 0 : colour_lookup_table [  iters2 &amp; 0xFF  ] );"/>
   <property name="line 229" value="  * frame_buffer ++  = ( iters3 == max_iter ? 0 : colour_lookup_table [  iters3 &amp; 0xFF  ] );"/>
   </property-list>
   <property-list name="state 10">
   <property name="line 222" value="  * frame_buffer ++  = ( iters0 == max_iter ? 0 : colour_lookup_table [  iters0 &amp; 0xFF  ] );"/>
   <property name="line 225" value="  * frame_buffer ++  = ( iters1 == max_iter ? 0 : colour_lookup_table [  iters1 &amp; 0xFF  ] );"/>
   <property name="line 228" value="  * frame_buffer ++  = ( iters2 == max_iter ? 0 : colour_lookup_table [  iters2 &amp; 0xFF  ] );"/>
   <property name="line 229" value="  * frame_buffer ++  = ( iters3 == max_iter ? 0 : colour_lookup_table [  iters3 &amp; 0xFF  ] );"/>
   </property-list>
   <property-list name="state 11">
   <property name="line 222" value="  * frame_buffer ++  = ( iters0 == max_iter ? 0 : colour_lookup_table [  iters0 &amp; 0xFF  ] );"/>
   <property name="line 225" value="  * frame_buffer ++  = ( iters1 == max_iter ? 0 : colour_lookup_table [  iters1 &amp; 0xFF  ] );"/>
   <property name="line 228" value="  * frame_buffer ++  = ( iters2 == max_iter ? 0 : colour_lookup_table [  iters2 &amp; 0xFF  ] );"/>
   <property name="line 229" value="  * frame_buffer ++  = ( iters3 == max_iter ? 0 : colour_lookup_table [  iters3 &amp; 0xFF  ] );"/>
   </property-list>
   <property-list name="state 12">
   <property name="line 222" value="  * frame_buffer ++  = ( iters0 == max_iter ? 0 : colour_lookup_table [  iters0 &amp; 0xFF  ] );"/>
   <property name="line 225" value="  * frame_buffer ++  = ( iters1 == max_iter ? 0 : colour_lookup_table [  iters1 &amp; 0xFF  ] );"/>
   <property name="line 228" value="  * frame_buffer ++  = ( iters2 == max_iter ? 0 : colour_lookup_table [  iters2 &amp; 0xFF  ] );"/>
   <property name="line 229" value="  * frame_buffer ++  = ( iters3 == max_iter ? 0 : colour_lookup_table [  iters3 &amp; 0xFF  ] );"/>
   </property-list>
   <property-list name="state 13">
   <property name="line 222" value="  * frame_buffer ++  = ( iters0 == max_iter ? 0 : colour_lookup_table [  iters0 &amp; 0xFF  ] );"/>
   <property name="line 225" value="  * frame_buffer ++  = ( iters1 == max_iter ? 0 : colour_lookup_table [  iters1 &amp; 0xFF  ] );"/>
   <property name="line 228" value="  * frame_buffer ++  = ( iters2 == max_iter ? 0 : colour_lookup_table [  iters2 &amp; 0xFF  ] );"/>
   <property name="line 229" value="  * frame_buffer ++  = ( iters3 == max_iter ? 0 : colour_lookup_table [  iters3 &amp; 0xFF  ] );"/>
   </property-list>
   <property-list name="state 14">
   <property name="line 222" value="  * frame_buffer ++  = ( iters0 == max_iter ? 0 : colour_lookup_table [  iters0 &amp; 0xFF  ] );"/>
   <property name="line 225" value="  * frame_buffer ++  = ( iters1 == max_iter ? 0 : colour_lookup_table [  iters1 &amp; 0xFF  ] );"/>
   <property name="line 228" value="  * frame_buffer ++  = ( iters2 == max_iter ? 0 : colour_lookup_table [  iters2 &amp; 0xFF  ] );"/>
   <property name="line 229" value="  * frame_buffer ++  = ( iters3 == max_iter ? 0 : colour_lookup_table [  iters3 &amp; 0xFF  ] );"/>
   </property-list>
   <property-list name="state 15">
   <property name="line 222" value="  * frame_buffer ++  = ( iters0 == max_iter ? 0 : colour_lookup_table [  iters0 &amp; 0xFF  ] );"/>
   <property name="line 225" value="  * frame_buffer ++  = ( iters1 == max_iter ? 0 : colour_lookup_table [  iters1 &amp; 0xFF  ] );"/>
   <property name="line 229" value="  * frame_buffer ++  = ( iters3 == max_iter ? 0 : colour_lookup_table [  iters3 &amp; 0xFF  ] );"/>
   </property-list>
   <property-list name="state 16">
   <property name="line 222" value="  * frame_buffer ++  = ( iters0 == max_iter ? 0 : colour_lookup_table [  iters0 &amp; 0xFF  ] );"/>
   <property name="line 225" value="  * frame_buffer ++  = ( iters1 == max_iter ? 0 : colour_lookup_table [  iters1 &amp; 0xFF  ] );"/>
   </property-list>
   <property-list name="state 17">
   <property name="line 222" value="  * frame_buffer ++  = ( iters0 == max_iter ? 0 : colour_lookup_table [  iters0 &amp; 0xFF  ] );"/>
   </property-list>
   </property-list>
   <property-list name="Detected 4 inner loops" showicon="warning">
   <property name=" Loop CPLI=3 at line 130" value="state 2 ---&gt;  4"/>
   <property name=" Loop CPLI=3 at line 133" value="state 2 ---&gt;  4"/>
   <property name=" Loop CPLI=3 at line 136" value="state 2 ---&gt;  4"/>
   <property name=" Loop CPLI=3 at line 137" value="state 2 ---&gt;  4"/>
   </property-list>
   </property-list>

   <property-list name="     file:hw_mandelbrot.c line:130 Loop CPLI=3">
   <property name="Loop latency " value=" 4"/>
   <property-list name="Cycles per loop iteration (CPLI) : 3">
   <property name="Critical loop variable" value="x"/>
   <property-list name="Assignments in critical path">
   <property name="line 130:  x = ( (  long  ) ( ( ( xsqr - ysqr ) + ( current_x0_copy &lt;&lt; 28 ) ) &gt;&gt; 28 ) );" value="state 2 ---&gt;  3"/>
   <property name="line 130:  xsqr = ( ( (  long long  ) x ) * ( (  long long  ) x ) );" value="state 0 ---&gt;  2"/>
   <property name="line 130:  ysqr = ( ( (  long long  ) y ) * ( (  long long  ) y ) );" value="state 0 ---&gt;  2"/>
   </property-list>
   </property-list>
   <property-list name="Scheduling information per assignment">
   <property name="Scheduling information per assignment" value="Lists starting and ending state of all assignments in the loop." showicon="info"/>
   <property name="assignment at line 130 :  xsqr = ( ( (  long long  ) x ) * ( (  long long  ) x ) );" value="state 0 ---&gt;  2"/>
   <property name="assignment at line 130 :  ysqr = ( ( (  long long  ) y ) * ( (  long long  ) y ) );" value="state 0 ---&gt;  2"/>
   <property name="assignment at line 130 :  y = ( (  long  ) ( ( ( ( 2 * ( (  long long  ) x ) ) * ( (  long long  ) y ) ) + ( current_y_copy &lt;&lt; 28 ) ) &gt;&gt; 28 ) );" value="state 0 ---&gt;  3"/>
   <property name="assignment at line 130 :  x = ( (  long  ) ( ( ( xsqr - ysqr ) + ( current_x0_copy &lt;&lt; 28 ) ) &gt;&gt; 28 ) );" value="state 2 ---&gt;  3"/>
   <property name="assignment at line 130 :  iters0 = ( iters0 + 1 );" value="state 0 ---&gt;  1"/>
   <property name="assignment control at line 130 : " value="state 2 ---&gt;  3"/>
   </property-list>
   <property-list name="Scheduling information per state">
   <property name="Scheduling information per state" value="lists all active assignments for each state" showicon="info"/>
   <property-list name="state 0">
   <property name="line 130" value=" xsqr = ( ( (  long long  ) x ) * ( (  long long  ) x ) );"/>
   <property name="line 130" value=" ysqr = ( ( (  long long  ) y ) * ( (  long long  ) y ) );"/>
   <property name="line 130" value=" y = ( (  long  ) ( ( ( ( 2 * ( (  long long  ) x ) ) * ( (  long long  ) y ) ) + ( current_y_copy &lt;&lt; 28 ) ) &gt;&gt; 28 ) );"/>
   <property name="line 130" value=" iters0 = ( iters0 + 1 );"/>
   </property-list>
   <property-list name="state 1">
   <property name="line 130" value=" xsqr = ( ( (  long long  ) x ) * ( (  long long  ) x ) );"/>
   <property name="line 130" value=" ysqr = ( ( (  long long  ) y ) * ( (  long long  ) y ) );"/>
   <property name="line 130" value=" y = ( (  long  ) ( ( ( ( 2 * ( (  long long  ) x ) ) * ( (  long long  ) y ) ) + ( current_y_copy &lt;&lt; 28 ) ) &gt;&gt; 28 ) );"/>
   <property name="line 130" value=" iters0 = ( iters0 + 1 );"/>
   </property-list>
   <property-list name="state 2">
   <property name="line 130" value=" xsqr = ( ( (  long long  ) x ) * ( (  long long  ) x ) );"/>
   <property name="line 130" value=" ysqr = ( ( (  long long  ) y ) * ( (  long long  ) y ) );"/>
   <property name="line 130" value=" y = ( (  long  ) ( ( ( ( 2 * ( (  long long  ) x ) ) * ( (  long long  ) y ) ) + ( current_y_copy &lt;&lt; 28 ) ) &gt;&gt; 28 ) );"/>
   <property name="line 130" value=" x = ( (  long  ) ( ( ( xsqr - ysqr ) + ( current_x0_copy &lt;&lt; 28 ) ) &gt;&gt; 28 ) );"/>
   <property name="line 130" value=""/>
   </property-list>
   <property-list name="state 3">
   <property name="line 130" value=" y = ( (  long  ) ( ( ( ( 2 * ( (  long long  ) x ) ) * ( (  long long  ) y ) ) + ( current_y_copy &lt;&lt; 28 ) ) &gt;&gt; 28 ) );"/>
   <property name="line 130" value=" x = ( (  long  ) ( ( ( xsqr - ysqr ) + ( current_x0_copy &lt;&lt; 28 ) ) &gt;&gt; 28 ) );"/>
   <property name="line 130" value=""/>
   </property-list>
   </property-list>
   </property-list>

   <property-list name="     file:hw_mandelbrot.c line:133 Loop CPLI=3">
   <property name="Loop latency " value=" 4"/>
   <property-list name="Cycles per loop iteration (CPLI) : 3">
   <property name="Critical loop variable" value="x"/>
   <property-list name="Assignments in critical path">
   <property name="line 133:  x = ( (  long  ) ( ( ( xsqr - ysqr ) + ( current_x1_copy &lt;&lt; 28 ) ) &gt;&gt; 28 ) );" value="state 2 ---&gt;  3"/>
   <property name="line 133:  xsqr = ( ( (  long long  ) x ) * ( (  long long  ) x ) );" value="state 0 ---&gt;  2"/>
   <property name="line 133:  ysqr = ( ( (  long long  ) y ) * ( (  long long  ) y ) );" value="state 0 ---&gt;  2"/>
   </property-list>
   </property-list>
   <property-list name="Scheduling information per assignment">
   <property name="Scheduling information per assignment" value="Lists starting and ending state of all assignments in the loop." showicon="info"/>
   <property name="assignment at line 133 :  xsqr = ( ( (  long long  ) x ) * ( (  long long  ) x ) );" value="state 0 ---&gt;  2"/>
   <property name="assignment at line 133 :  ysqr = ( ( (  long long  ) y ) * ( (  long long  ) y ) );" value="state 0 ---&gt;  2"/>
   <property name="assignment at line 133 :  y = ( (  long  ) ( ( ( ( 2 * ( (  long long  ) x ) ) * ( (  long long  ) y ) ) + ( current_y_copy &lt;&lt; 28 ) ) &gt;&gt; 28 ) );" value="state 0 ---&gt;  3"/>
   <property name="assignment at line 133 :  x = ( (  long  ) ( ( ( xsqr - ysqr ) + ( current_x1_copy &lt;&lt; 28 ) ) &gt;&gt; 28 ) );" value="state 2 ---&gt;  3"/>
   <property name="assignment at line 133 :  iters1 = ( iters1 + 1 );" value="state 0 ---&gt;  1"/>
   <property name="assignment control at line 133 : " value="state 2 ---&gt;  3"/>
   </property-list>
   <property-list name="Scheduling information per state">
   <property name="Scheduling information per state" value="lists all active assignments for each state" showicon="info"/>
   <property-list name="state 0">
   <property name="line 133" value=" xsqr = ( ( (  long long  ) x ) * ( (  long long  ) x ) );"/>
   <property name="line 133" value=" ysqr = ( ( (  long long  ) y ) * ( (  long long  ) y ) );"/>
   <property name="line 133" value=" y = ( (  long  ) ( ( ( ( 2 * ( (  long long  ) x ) ) * ( (  long long  ) y ) ) + ( current_y_copy &lt;&lt; 28 ) ) &gt;&gt; 28 ) );"/>
   <property name="line 133" value=" iters1 = ( iters1 + 1 );"/>
   </property-list>
   <property-list name="state 1">
   <property name="line 133" value=" xsqr = ( ( (  long long  ) x ) * ( (  long long  ) x ) );"/>
   <property name="line 133" value=" ysqr = ( ( (  long long  ) y ) * ( (  long long  ) y ) );"/>
   <property name="line 133" value=" y = ( (  long  ) ( ( ( ( 2 * ( (  long long  ) x ) ) * ( (  long long  ) y ) ) + ( current_y_copy &lt;&lt; 28 ) ) &gt;&gt; 28 ) );"/>
   <property name="line 133" value=" iters1 = ( iters1 + 1 );"/>
   </property-list>
   <property-list name="state 2">
   <property name="line 133" value=" xsqr = ( ( (  long long  ) x ) * ( (  long long  ) x ) );"/>
   <property name="line 133" value=" ysqr = ( ( (  long long  ) y ) * ( (  long long  ) y ) );"/>
   <property name="line 133" value=" y = ( (  long  ) ( ( ( ( 2 * ( (  long long  ) x ) ) * ( (  long long  ) y ) ) + ( current_y_copy &lt;&lt; 28 ) ) &gt;&gt; 28 ) );"/>
   <property name="line 133" value=" x = ( (  long  ) ( ( ( xsqr - ysqr ) + ( current_x1_copy &lt;&lt; 28 ) ) &gt;&gt; 28 ) );"/>
   <property name="line 133" value=""/>
   </property-list>
   <property-list name="state 3">
   <property name="line 133" value=" y = ( (  long  ) ( ( ( ( 2 * ( (  long long  ) x ) ) * ( (  long long  ) y ) ) + ( current_y_copy &lt;&lt; 28 ) ) &gt;&gt; 28 ) );"/>
   <property name="line 133" value=" x = ( (  long  ) ( ( ( xsqr - ysqr ) + ( current_x1_copy &lt;&lt; 28 ) ) &gt;&gt; 28 ) );"/>
   <property name="line 133" value=""/>
   </property-list>
   </property-list>
   </property-list>

   <property-list name="     file:hw_mandelbrot.c line:136 Loop CPLI=3">
   <property name="Loop latency " value=" 4"/>
   <property-list name="Cycles per loop iteration (CPLI) : 3">
   <property name="Critical loop variable" value="x"/>
   <property-list name="Assignments in critical path">
   <property name="line 136:  x = ( (  long  ) ( ( ( xsqr - ysqr ) + ( current_x2_copy &lt;&lt; 28 ) ) &gt;&gt; 28 ) );" value="state 2 ---&gt;  3"/>
   <property name="line 136:  xsqr = ( ( (  long long  ) x ) * ( (  long long  ) x ) );" value="state 0 ---&gt;  2"/>
   <property name="line 136:  ysqr = ( ( (  long long  ) y ) * ( (  long long  ) y ) );" value="state 0 ---&gt;  2"/>
   </property-list>
   </property-list>
   <property-list name="Scheduling information per assignment">
   <property name="Scheduling information per assignment" value="Lists starting and ending state of all assignments in the loop." showicon="info"/>
   <property name="assignment at line 136 :  xsqr = ( ( (  long long  ) x ) * ( (  long long  ) x ) );" value="state 0 ---&gt;  2"/>
   <property name="assignment at line 136 :  ysqr = ( ( (  long long  ) y ) * ( (  long long  ) y ) );" value="state 0 ---&gt;  2"/>
   <property name="assignment at line 136 :  y = ( (  long  ) ( ( ( ( 2 * ( (  long long  ) x ) ) * ( (  long long  ) y ) ) + ( current_y_copy &lt;&lt; 28 ) ) &gt;&gt; 28 ) );" value="state 0 ---&gt;  3"/>
   <property name="assignment at line 136 :  x = ( (  long  ) ( ( ( xsqr - ysqr ) + ( current_x2_copy &lt;&lt; 28 ) ) &gt;&gt; 28 ) );" value="state 2 ---&gt;  3"/>
   <property name="assignment at line 136 :  iters2 = ( iters2 + 1 );" value="state 0 ---&gt;  1"/>
   <property name="assignment control at line 136 : " value="state 2 ---&gt;  3"/>
   </property-list>
   <property-list name="Scheduling information per state">
   <property name="Scheduling information per state" value="lists all active assignments for each state" showicon="info"/>
   <property-list name="state 0">
   <property name="line 136" value=" xsqr = ( ( (  long long  ) x ) * ( (  long long  ) x ) );"/>
   <property name="line 136" value=" ysqr = ( ( (  long long  ) y ) * ( (  long long  ) y ) );"/>
   <property name="line 136" value=" y = ( (  long  ) ( ( ( ( 2 * ( (  long long  ) x ) ) * ( (  long long  ) y ) ) + ( current_y_copy &lt;&lt; 28 ) ) &gt;&gt; 28 ) );"/>
   <property name="line 136" value=" iters2 = ( iters2 + 1 );"/>
   </property-list>
   <property-list name="state 1">
   <property name="line 136" value=" xsqr = ( ( (  long long  ) x ) * ( (  long long  ) x ) );"/>
   <property name="line 136" value=" ysqr = ( ( (  long long  ) y ) * ( (  long long  ) y ) );"/>
   <property name="line 136" value=" y = ( (  long  ) ( ( ( ( 2 * ( (  long long  ) x ) ) * ( (  long long  ) y ) ) + ( current_y_copy &lt;&lt; 28 ) ) &gt;&gt; 28 ) );"/>
   <property name="line 136" value=" iters2 = ( iters2 + 1 );"/>
   </property-list>
   <property-list name="state 2">
   <property name="line 136" value=" xsqr = ( ( (  long long  ) x ) * ( (  long long  ) x ) );"/>
   <property name="line 136" value=" ysqr = ( ( (  long long  ) y ) * ( (  long long  ) y ) );"/>
   <property name="line 136" value=" y = ( (  long  ) ( ( ( ( 2 * ( (  long long  ) x ) ) * ( (  long long  ) y ) ) + ( current_y_copy &lt;&lt; 28 ) ) &gt;&gt; 28 ) );"/>
   <property name="line 136" value=" x = ( (  long  ) ( ( ( xsqr - ysqr ) + ( current_x2_copy &lt;&lt; 28 ) ) &gt;&gt; 28 ) );"/>
   <property name="line 136" value=""/>
   </property-list>
   <property-list name="state 3">
   <property name="line 136" value=" y = ( (  long  ) ( ( ( ( 2 * ( (  long long  ) x ) ) * ( (  long long  ) y ) ) + ( current_y_copy &lt;&lt; 28 ) ) &gt;&gt; 28 ) );"/>
   <property name="line 136" value=" x = ( (  long  ) ( ( ( xsqr - ysqr ) + ( current_x2_copy &lt;&lt; 28 ) ) &gt;&gt; 28 ) );"/>
   <property name="line 136" value=""/>
   </property-list>
   </property-list>
   </property-list>

   <property-list name="     file:hw_mandelbrot.c line:137 Loop CPLI=3">
   <property name="Loop latency " value=" 4"/>
   <property-list name="Cycles per loop iteration (CPLI) : 3">
   <property name="Critical loop variable" value="x"/>
   <property-list name="Assignments in critical path">
   <property name="line 137:  x = ( (  long  ) ( ( ( xsqr - ysqr ) + ( current_x3_copy &lt;&lt; 28 ) ) &gt;&gt; 28 ) );" value="state 2 ---&gt;  3"/>
   <property name="line 137:  xsqr = ( ( (  long long  ) x ) * ( (  long long  ) x ) );" value="state 0 ---&gt;  2"/>
   <property name="line 137:  ysqr = ( ( (  long long  ) y ) * ( (  long long  ) y ) );" value="state 0 ---&gt;  2"/>
   </property-list>
   </property-list>
   <property-list name="Scheduling information per assignment">
   <property name="Scheduling information per assignment" value="Lists starting and ending state of all assignments in the loop." showicon="info"/>
   <property name="assignment at line 137 :  xsqr = ( ( (  long long  ) x ) * ( (  long long  ) x ) );" value="state 0 ---&gt;  2"/>
   <property name="assignment at line 137 :  ysqr = ( ( (  long long  ) y ) * ( (  long long  ) y ) );" value="state 0 ---&gt;  2"/>
   <property name="assignment at line 137 :  y = ( (  long  ) ( ( ( ( 2 * ( (  long long  ) x ) ) * ( (  long long  ) y ) ) + ( current_y_copy &lt;&lt; 28 ) ) &gt;&gt; 28 ) );" value="state 0 ---&gt;  3"/>
   <property name="assignment at line 137 :  x = ( (  long  ) ( ( ( xsqr - ysqr ) + ( current_x3_copy &lt;&lt; 28 ) ) &gt;&gt; 28 ) );" value="state 2 ---&gt;  3"/>
   <property name="assignment at line 137 :  iters3 = ( iters3 + 1 );" value="state 0 ---&gt;  1"/>
   <property name="assignment control at line 137 : " value="state 2 ---&gt;  3"/>
   </property-list>
   <property-list name="Scheduling information per state">
   <property name="Scheduling information per state" value="lists all active assignments for each state" showicon="info"/>
   <property-list name="state 0">
   <property name="line 137" value=" xsqr = ( ( (  long long  ) x ) * ( (  long long  ) x ) );"/>
   <property name="line 137" value=" ysqr = ( ( (  long long  ) y ) * ( (  long long  ) y ) );"/>
   <property name="line 137" value=" y = ( (  long  ) ( ( ( ( 2 * ( (  long long  ) x ) ) * ( (  long long  ) y ) ) + ( current_y_copy &lt;&lt; 28 ) ) &gt;&gt; 28 ) );"/>
   <property name="line 137" value=" iters3 = ( iters3 + 1 );"/>
   </property-list>
   <property-list name="state 1">
   <property name="line 137" value=" xsqr = ( ( (  long long  ) x ) * ( (  long long  ) x ) );"/>
   <property name="line 137" value=" ysqr = ( ( (  long long  ) y ) * ( (  long long  ) y ) );"/>
   <property name="line 137" value=" y = ( (  long  ) ( ( ( ( 2 * ( (  long long  ) x ) ) * ( (  long long  ) y ) ) + ( current_y_copy &lt;&lt; 28 ) ) &gt;&gt; 28 ) );"/>
   <property name="line 137" value=" iters3 = ( iters3 + 1 );"/>
   </property-list>
   <property-list name="state 2">
   <property name="line 137" value=" xsqr = ( ( (  long long  ) x ) * ( (  long long  ) x ) );"/>
   <property name="line 137" value=" ysqr = ( ( (  long long  ) y ) * ( (  long long  ) y ) );"/>
   <property name="line 137" value=" y = ( (  long  ) ( ( ( ( 2 * ( (  long long  ) x ) ) * ( (  long long  ) y ) ) + ( current_y_copy &lt;&lt; 28 ) ) &gt;&gt; 28 ) );"/>
   <property name="line 137" value=" x = ( (  long  ) ( ( ( xsqr - ysqr ) + ( current_x3_copy &lt;&lt; 28 ) ) &gt;&gt; 28 ) );"/>
   <property name="line 137" value=""/>
   </property-list>
   <property-list name="state 3">
   <property name="line 137" value=" y = ( (  long  ) ( ( ( ( 2 * ( (  long long  ) x ) ) * ( (  long long  ) y ) ) + ( current_y_copy &lt;&lt; 28 ) ) &gt;&gt; 28 ) );"/>
   <property name="line 137" value=" x = ( (  long  ) ( ( ( xsqr - ysqr ) + ( current_x3_copy &lt;&lt; 28 ) ) &gt;&gt; 28 ) );"/>
   <property name="line 137" value=""/>
   </property-list>
   </property-list>
   </property-list>

   </property-list>
   </property-list>
</chac-properties>

